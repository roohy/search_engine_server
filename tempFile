{"content": [{"title": "Ajax (programming)", "rank": -6.999880276109537e-17, "url": "http://en.wikipedia.org/wiki/Ajax_(programming)", "links": ["http://en.wikipedia.org/wiki/Ajax", "http://en.wikipedia.org/wiki/JavaScript", "http://en.wikipedia.org/wiki/XML", "http://en.wikipedia.org/wiki/Web_development", "http://en.wikipedia.org/wiki/Client-side", "http://en.wikipedia.org/wiki/Asynchronous_I/O", "http://en.wikipedia.org/wiki/Web_application", "http://en.wikipedia.org/wiki/Web_server", "http://en.wikipedia.org/wiki/XMLHttpRequest", "http://en.wikipedia.org/wiki/Object_(computer_science)"], "body": "  \"AJAX\" redirects here. For other uses, see  Ajax . \n  Ajax  (also  AJAX ;    /     \u02c8      e\u026a      d\u0292      \u00e6      k      s     /   ; an acronym for  Asynchronous  JavaScript  and  XML  )   [ 1 ]    is a group of interrelated  web development  techniques used on the  client-side  to create  asynchronous   web applications . With Ajax, web applications can send data to, and retrieve data from, a  server  asynchronously (in the background) without interfering with the display and behavior of the existing page. Data can be retrieved using the   XMLHttpRequest    object . Despite the name, the use of XML is not required ( JSON  is often used instead. See  AJAJ ), and the requests do not need to be asynchronous.   [ 2 ]    \n Ajax is not a single technology, but a group of technologies.  HTML  and  CSS  can be used in combination to mark up and style information. The  DOM  is accessed with JavaScript to dynamically display, and allow the user to interact with, the information presented. JavaScript and the XMLHttpRequest object provide a method for exchanging data asynchronously between browser and server to avoid full page reloads. \n  \n \n \n Contents \n \n \n   1   History   \n   2   Technologies   \n   3   Drawbacks   \n   4   Example  \n \n   4.1   jQuery example   \n \n \n   5   See also   \n   6   References   \n   7   External links   \n \n \n  \n  History   [  edit  ]   \n In the 1990s, most web sites were based on complete HTML pages. Each user action required that the page be reloaded from the server (or a new page loaded). This process was inefficient, as reflected by the user experience: all page content disappeared, then reappeared. Each time a page was reloaded due to a partial change, all of the content had to be re-sent, even though only some of the information had changed. This placed additional load on the server and used excessive  bandwidth . In 1996, the  iframe  tag was introduced by  Internet Explorer  to load content asynchronously. \n In 1998, Microsoft Outlook Web Access team implemented the first component  XMLHTTP  by client script. \n In 1999, Microsoft utilized its iframe technology to dynamically update the news stories and stock quotes on the default page for Internet Explorer,   [ 3 ]    and created the XMLHTTP  ActiveX  control in  Internet Explorer 5 , which was later adopted by  Mozilla ,  Safari ,  Opera  and other browsers as the XMLHttpRequest  JavaScript  object.   [ 4 ]    Microsoft has adopted the native XMLHttpRequest model as of  Internet Explorer 7 , though the ActiveX version is still supported. The utility of background  HTTP  requests to the server and asynchronous web technologies remained fairly obscure until it started appearing in full scale online applications such as  Outlook Web Access  (2000)   [ 5 ]    and  Oddpost  (2002). \n  Google  made a wide deployment of standards-compliant,  cross browser  Ajax with  Gmail  (2004) and  Google Maps  (2005).   [ 6 ]    \n The term  Ajax  was coined on 18 February 2005 by  Jesse James Garrett  in an article entitled \" Ajax: A New Approach to Web Applications \", based on techniques used on Google pages.   [ 1 ]    \n On 5 April 2006, the  World Wide Web Consortium  (W3C) released the first draft specification for the XMLHttpRequest object in an attempt to create an official  web standard .   [ 6 ]    \n  Technologies   [  edit  ]   \n The term  Ajax  has come to represent a broad group of web technologies that can be used to implement a web application that communicates with a server in the background, without interfering with the current state of the page. In the article that coined the term Ajax,   [ 1 ]     Jesse James Garrett  explained that the following technologies are incorporated: \n \n  HTML  (or  XHTML ) and  CSS  for presentation \n The  Document Object Model  (DOM) for dynamic display of and interaction with data \n  XML  for the interchange of data, and  XSLT  for its manipulation \n The  XMLHttpRequest  object for asynchronous communication \n  JavaScript  to bring these technologies together \n \n Since then however there have been a number of developments in the technologies used in an Ajax application, and the definition of the term Ajax.  XML  is not required for data interchange and therefore XSLT is not required for the manipulation of data.  JavaScript Object Notation  (JSON) is often used as an alternative format for data interchange,   [ 7 ]    although other formats such as preformatted HTML or plain text can also be used.   [ 8 ]    \n  Asynchronous HTML and HTTP  (AHAH) involves using XMLHTTPRequest to retrieve (X)HTML fragments which are then inserted directly into the web page. \n  Drawbacks   [  edit  ]   \n \n In pre- HTML5  browsers, pages dynamically created using successive Ajax requests did not automatically register themselves with the browser's history engine, so clicking the browser's \"back\" button may not have returned the browser to an earlier state of the Ajax-enabled page, but may have instead returned to the last full page visited before it. Such behavior\u2014navigating between pages instead of navigating between page states\u2014may be desirable, but if fine-grained tracking of page state is required then a pre- HTML5  workaround was to use invisible iframes to trigger changes in the browser's history. A workaround implemented by Ajax techniques is to change the URL  fragment identifier  (the part of a URL after the '#') when an Ajax-enabled page is accessed and monitor it for changes.   [ 9 ]      [ 10 ]     HTML5  provides an extensive  API  standard for working with the browser's history engine.   [ 11 ]    \n  Dynamic web page  updates also make it difficult to  bookmark  and return to a particular state of the application. Solutions to this problem exist, many of which again use the URL fragment identifier.   [ 9 ]      [ 10 ]    The solution provided by HTML5 for the above problem also applies for this.   [ 11 ]    \n Depending on the nature of the Ajax application, dynamic page updates may interfere disruptively with user interactions, especially if working on an unstable Internet connection. For instance, editing a search field may trigger a query to the server for search completions, but the user may not know that a search completion popup is forthcoming, and if the internet connection is slow, the popup list may show up at an inconvenient time, when the user has already proceeded to do something else. \n Because most  web crawlers  do not execute JavaScript code,   [ 12 ]    publicly indexable web applications should provide an alternative means of accessing the content that would normally be retrieved with Ajax, thereby allowing  search engines  to index it. \n Any user whose browser does not support JavaScript or  XMLHttpRequest , or simply has this functionality disabled, will not be able to properly use pages which depend on Ajax. Devices such as  smartphones  and  PDAs  may not have support for the required technologies, though this is becoming less of an issue. The only way to let the user carry out functionality is to fall back to non-JavaScript methods. This can be achieved by making sure links and forms can be resolved properly and not relying solely on Ajax.   [ 13 ]    \n Similarly, some web applications which use Ajax are built in a way that cannot be read by screen-reading technologies, such as  JAWS . The  WAI-ARIA  standards provide a way to provide hints in such a case.   [ 14 ]    \n Screen readers that are able to use Ajax may still not be able to properly read the dynamically generated content.   [ 15 ]    \n The  same origin policy  prevents some Ajax techniques from being used across domains,   [ 6 ]    although the W3C has a draft of the XMLHttpRequest object that would enable this functionality.   [ 16 ]    Methods exist to sidestep this security feature by using a special Cross Domain Communications channel embedded as an iframe within a page,   [ 17 ]    or by the use of  JSONP . \n The asynchronous  callback-style of programming  required can lead to complex code that is hard to maintain, to debug   [ 18 ]    and to test.   [ 19 ]    \n \n  Example   [  edit  ]   \n Here is an example of a simple Ajax request using the  GET  method. \n get-ajax-data.js: \n \n \n \n // This is the client-side script \n \n // Initialize the Ajax request \n var  xhr  =   new  XMLHttpRequest (  )  ; \nxhr. open  (  'get'  ,   'send-ajax-data.php'  )  ; \n \n // Track the state changes of the request \nxhr. onreadystatechange   =   function  (  )  { \n     // Ready state 4 means the request is done \n     if  ( xhr. readyState   ===   4  )  { \n         // 200 is a successful return \n         if  ( xhr. status   ===   200  )  { \n            alert ( xhr. responseText  )  ;   // 'This is the returned text.' \n         }  else  { \n            alert (  'Error: '  + xhr. status  )  ;   // An error occurred during the request \n         } \n     } \n } \n \n // Send the request to send-ajax-data.php \nxhr. send  (  null  )  ; \n  \n \n send-ajax-data.php: \n \n \n \n &lt;?php \n // This is the server-side script \n \n // Set the content type \n header  (  'Content-Type: text/plain'  )  ; \n \n // Send the data back \n echo   \"This is the returned text.\"  ; \n ?&gt; \n  \n \n  jQuery example   [  edit  ]   \n This example uses the popular JavaScript library  jQuery , to do the same thing as the example above. \n \n \n \n$. get  (  'send-ajax-data.php'  ,   function  ( data )   { \n    alert ( data )  ; \n }  )  ; \n  \n \n  See also   [  edit  ]   \n \n  Ajax framework  \n  List of Ajax frameworks  \n  AJAX Service Bus  \n  Comet (programming)  (also known as Reverse Ajax) \n  Rich Internet application  \n  WebSocket  \n  XMLHttpRequest  \n  ActionScript  \n  AJAJ  \n \n  References   [  edit  ]   \n \n \n  ^     a         b         c        Jesse James Garrett (18 February 2005).  \"Ajax: A New Approach to Web Applications\" . AdaptivePath.com. Archived from  the original  on 2 July 2008 . Retrieved 19 June 2008 .   \u00a0    \n    ^      Ullman, Chris (March 2007).   Beginning Ajax  . wrox.  ISBN \u00a0 978-0-470-10675-4 .  Archived  from the original on 5 July 2008 . Retrieved 24 June 2008 .   \u00a0    \n    ^      MSN.com . Home.microsoft.com (1999-12-31). Retrieved on 2013-07-13.  \n    ^       \"Dynamic HTML and XML: The XMLHttpRequest Object\" . Apple Inc . Retrieved 25 June 2008 .   \u00a0    \n    ^      Hopmann, Alex.  \"Story of XMLHTTP\" .  Alex Hopmann\u2019s Blog  . Retrieved 17 May 2010 .   \u00a0    \n  ^     a         b         c         \"A Brief History of Ajax\" . Aaron Swartz. 22 December 2005 . Retrieved 4 August 2009 .   \u00a0    \n    ^       \"JavaScript Object Notation\" . Apache.org.  Archived  from the original on 16 June 2008 . Retrieved 4 July 2008 .   \u00a0    \n    ^       \"Speed Up Your Ajax-based Apps with JSON\" . DevX.com.  Archived  from the original on 4 July 2008 . Retrieved 4 July 2008 .   \u00a0    \n  ^     a         b         \"Why use Ajax?\" . InterAKT. 10 November 2005.  Archived  from the original on 29 May 2008 . Retrieved 26 June 2008 .   \u00a0    \n  ^     a         b         \"Deep Linking for AJAX\" .   \u00a0    \n  ^     a         b         \"HTML5 specification\"  . Retrieved 21 October 2011 .   \u00a0    \n    ^      Prokoph, Andreas (8 May 2007).  \"Help Web crawlers efficiently crawl your portal sites and Web sites\" .  IBM  . Retrieved 22 April 2009 .   \u00a0    \n    ^      Quinsey, Peter.  \"User-proofing Ajax\" .   \u00a0    \n    ^       \"WAI-ARIA Overview\" .  http://www.w3.org/ .  Archived  from the original on 26 October 2010 . Retrieved 21 October 2010 .   \u00a0    \n    ^      Edwards, James (5 May 2006).  \"Ajax and Screenreaders: When Can it Work?\" .  sitepoint.com  . Retrieved 27 June 2008 .   \u00a0    \n    ^       \"Access Control for Cross-Site Requests\" . World Wide Web Consortium.  Archived  from the original on 14 May 2008 . Retrieved 27 June 2008 .   \u00a0    \n    ^       \"Secure Cross-Domain Communication in the Browser\" . The Architecture Journal (MSDN).  Archived  from the original on 29 March 2010 . Retrieved 27 April 2010 .   \u00a0    \n    ^      Cuthbertson, Tim.  \"What is asynchronous programming, and why is it so damn awkward?\" .  http://gfxmonk.net/  . Retrieved 19 October 2010 .   \u00a0    \n    ^       \"Selenium documentation: Fetching a Page\" .  http://seleniumhq.org/  . Retrieved 6 October 2011 . \"It\u2019s worth noting that if your page uses a lot of AJAX on load then WebDriver may not know when it has completely loaded. If you need to ensure such pages are fully loaded, then you can use an Explicit and Implicit Waits.\"   \u00a0    \n \n \n  External links   [  edit  ]   \n \n \n   \n Wikimedia Commons has media related to    AJAX (programming)   . \n \n \n \n \n   \n Wikibooks has a book on the topic of:    AJAX    \n \n \n \n  Ajax: A New Approach to Web Applications \u2014Article that coined the term and Q&amp;A \n  Ajax (programming)  on the  Open Directory Project  \n  Ajax Tutorial  with GET, POST, text and XML examples. \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Cloud computing  \n \n \n \n  \n \n \n  Applications  \n \n \n \n  Google Apps  \n  ownCloud  \n  Microsoft Online  \n  Salesforce  \n  ContactOffice  \n  HP Converged Cloud  \n \n \n \n \n \n  \n \n \n  Platforms  \n \n \n \n  Amazon  \n  App Engine  \n  GreenQloud  \n  AppScale  \n  Windows Azure  \n  Engine Yard  \n  Force.com  \n  Heroku  \n  Inktank  \n  OrangeScape  \n  RightScale  \n  Cloud Foundry  \n  Mendix  \n  OpenShift  \n  Tsuru  \n  Jelastic  \n  openQRM  \n \n \n \n \n \n  \n \n \n  Infrastructure  \n \n \n \n  Amazon  \n  Abiquo Enterprise Edition  \n  CloudStack  \n  EMC Atmos  \n  Eucalyptus  \n  GoGrid  \n  Lunacloud  \n  Google Storage  \n  GreenButton  \n  GreenQloud  \n  IBM cloud computing  \n  iland  \n  Joyent  \n  Nimbula  \n  Nimbus  \n  OpenNebula  \n  OpenStack  \n  Rackspace Cloud  \n  Zadara Storage  \n  libvirt  \n  libguestfs  \n  OVirt  \n  Virtual Machine Manager  \n  Wakame-vdc  \n \n \n \n \n \n  \n \n \n Technologies \n \n \n \n  Cloud database  \n  Datacenters  \n  Distributed file system for cloud  \n  Internet  \n  Networking  \n  Security  \n  Structured storage  \n  Virtual appliance  \n  Virtualization  \n  Web APIs  \n \n \n \n \n \n  \n \n \n \n \n \n     Category   \n     Commons   \n \n \n \n \n \n \n \n \n    \n \n \n    "}, {"title": "Ajax", "rank": -0.019920167688766005, "url": "http://en.wikipedia.org/wiki/Ajax", "links": ["http://en.wikipedia.org/wiki/Ajax_(mythology)", "http://en.wikipedia.org/wiki/Ajax_the_Lesser", "http://en.wikipedia.org/wiki/1953_Iranian_coup_d%27%C3%A9tat", "http://en.wikipedia.org/wiki/Ajax_(missionary)", "http://en.wikipedia.org/wiki/Sidney_William_Jackson", "http://en.wikipedia.org/wiki/Ajax_(programming)", "http://en.wikipedia.org/wiki/Ajax_framework", "http://en.wikipedia.org/wiki/Ajax_(floppy_disk_controller)", "http://en.wikipedia.org/wiki/AFC_Ajax", "http://en.wikipedia.org/wiki/Ajax_Cape_Town_FC"], "body": "  \n \n   \n Look up    Ajax   \u00a0or    AJAX    in Wiktionary, the free dictionary. \n \n \n  Ajax  may refer to: \n \n \n \n Contents \n \n \n   1   Mythology   \n   2   Events   \n   3   People   \n   4   Information technology   \n   5   Sports  \n \n   5.1   Football   \n   5.2   Handball   \n   5.3   Racing   \n \n \n   6   Vehicles   \n   7   Literature and fiction   \n   8   Music   \n   9   Videogames   \n   10   Places   \n   11   Business   \n \n \n \n  Mythology   [  edit  ]   \n \n  Ajax (mythology) , son of Telamon, ruler of Salamis and a hero in the Trojan War, also known as \"Ajax the Great\" \n  Ajax the Lesser , son of Oileus, ruler of Locris and the leader of the Locrian contingent during the Trojan War \n \n  Events   [  edit  ]   \n \n Operation Ajax, the  1953 Iranian coup d'\u00e9tat  \n \n  People   [  edit  ]   \n \n  Ajax (missionary) , Arian missionary who converted the Suevi to Christianity (c. 466) \n Ajax, pen name of Australian nature writer  Sidney William Jackson  \n \n  Information technology   [  edit  ]   \n \n  Ajax (programming)  (Asynchronous JavaScript and XML), a technique used in web application development \n  Ajax framework , a framework for the Ajax technique \n  Ajax (floppy disk controller) , a floppy disk controller fitted to the Atari STE \n \n  Sports   [  edit  ]   \n  Football   [  edit  ]   \n \n  AFC Ajax , a football club from Amsterdam, the Netherlands \n  Aias Salamina F.C. , a football club based in Salamina, Greece birthplace of Ajax the Telamonian \n  Ajax Cape Town FC , a South African football club \n  Ajax de Ouenz\u00e9 , a Congolese football club \n  Ajax Futebol Clube , a Brazilian football club \n  Ajax Kenitra , a Moroccan futsal (indoor football) club \n  Ajax Orlando Prospects , also known as Ajax America, an American soccer team from Orlando, Florida \n  Ajax Sportman Combinatie  (ASC), a cricket and football club in Leiden, The Netherlands \n  FC Ajax Lasnam\u00e4e , an Estonian football club \n  Rabat Ajax F.C. , a Maltese football club \n  Uni\u00f3n \u00c1jax , a football club in Trujillo, Honduras \n \n  Handball   [  edit  ]   \n \n  Ajax Heroes , a Danish handball team \n \n  Racing   [  edit  ]   \n \n  Ajax (horse)  (b. 1901), a French Champion racehorse \n  Ajax II  (b. 1934), an Australian Champion racehorse \n \n  Vehicles   [  edit  ]   \n \n  Ajax (1906 automobile) , Aigner, Switzerland \n  Ajax (1913 automobile) , Briscoe, France \n  Ajax (1914 automobile) , Seattle, Washington, U.S. \n  Ajax (1921 automobile) , prototype, U.S. \n  Ajax (American automobile) , Nash Motors, 1925\u20131926, U.S. \n  HMS  Ajax  , several ships of the Royal Navy \n  USS  Ajax  , several ships of the United States Navy \n  Ajax , one of the eight  South Devon Railway Dido class  steam locomotives, in service 1860\u20131884 \n  Ajax , a  LMS Royal Scot Class  express locomotive, in service 1927\u20131962 \n  Ayaks , a Soviet top secret aerospacecraft project \n  Nike Ajax , an American anti-aircraft missile \n \n  Literature and fiction   [  edit  ]   \n \n   Ajax  (Sophocles) , a play by the ancient Greek tragedian Sophocles \n  Ajax (Disney) , a fictional company (the Disney equivalent of Looney Tunes' Acme Corporation) \n  Ajax Duckman , a character in the animated television series  Duckman  \n  Martian Manhunter , a comic superhero, called Ajax in Brazil and Portugal \n  Ajax (comics) , the name of two fictional characters from the Marvel Universe \n  Ajak , a Marvel Comics character, a member of the Eternals, sometimes known as \"Ajax the Greater\" \n Ajax, a  character in the 1979 film  The Warriors   \n Ajax, any of several fictional businesses used as a humor device in the radio comedy skits of  Hudson &amp; Landry  \n \n  Music   [  edit  ]   \n \n  Ajax (band) , an electronic band from New York City \n  Ajax (DJ) , an Australian electro mashup DJ \n  Ajax Records (Quebec)  (1921\u20131926), a North American record company \n  A-Jax (band) , a South Korean boy band \n AjaX, keyboardist for  The Pop Culture Suicides  \n \n  Videogames   [  edit  ]   \n \n  A Jax , an arcade game \n \n  Places   [  edit  ]   \n \n  Ajax, Louisiana , United States, an unincorporated community in Natchitoches Parish \n  Ajax, Ontario , a town in Canada\n \n  Ajax GO Station , a station in the GO Transit network located in the town \n  Ajax High School , a public high school located in the town \n \n \n  Ajax, Utah , a ghost town \n  Ajax, West Virginia  \n  Aspen Mountain (Colorado) , United States, also known as Ajax Mountain \n  Kanichee Mine , Temagami, Ontario, Canada, also known as Ajax Mine \n \n  Business   [  edit  ]   \n \n  Ajax (cleanser) , a brand of cleaning products. \n \n \n \n     \n This  disambiguation  page lists articles associated with the same title. \n If an  internal link  led you here, you may wish to change the link to point directly to the intended article.  \n \n \n \n \n    "}, {"title": "JavaScript", "rank": -0.03246754036061403, "url": "http://en.wikipedia.org/wiki/JavaScript", "links": ["http://en.wikipedia.org/wiki/Java_(programming_language)", "http://en.wikipedia.org/wiki/Java_(software_platform)", "http://en.wikipedia.org/wiki/Javanese_script", "http://en.wikipedia.org/wiki/Programming_paradigm", "http://en.wikipedia.org/wiki/Multi-paradigm", "http://en.wikipedia.org/wiki/Scripting_language", "http://en.wikipedia.org/wiki/Object-oriented_programming", "http://en.wikipedia.org/wiki/Prototype-based_programming", "http://en.wikipedia.org/wiki/Imperative_programming", "http://en.wikipedia.org/wiki/Functional_programming"], "body": "  Not to be confused with  Java (programming language) ,  Java (software platform) , or  Javanese script . \n  For the use of JavaScript on Wikipedia, see  Wikipedia:JavaScript .  \n \n JavaScript \n \n     \n \n \n  Paradigm(s)  \n  Multi-paradigm :  scripting ,  object-oriented  ( prototype-based ),  imperative ,  functional    [ 1 ]    \n \n \n Appeared in \n 1995 \n \n \n Designed by \n  Brendan Eich  \n \n \n  Developer  \n  Netscape Communications Corporation ,  Mozilla Foundation  \n \n \n  Stable release  \n 1.8.5   [ 2 ]    (March\u00a022, 2011 ; 2 years ago  \u00a0( 2011-03-22 ) ) \n \n \n  Typing discipline  \n  dynamic ,  duck  \n \n \n  Major implementations  \n  KJS ,  Rhino ,  SpiderMonkey ,  V8 ,  Carakan ,  Chakra  \n \n \n Influenced by \n  Scheme ,  Self  \n \n \n Influenced \n  ActionScript ,  CoffeeScript ,  Dart ,  JScript .NET ,  Objective-J ,  QML , TIScript,  TypeScript ,  Node.js  \n \n \n \n \n    JavaScript  at Wikibooks \n \n \n \n \n \n JavaScript \n \n     \n \n \n  Filename extension  \n  .js  \n \n \n  Internet media type  \n  application/javascript  \n text/javascript \u00a0(obsolete)   [ 3 ]    \n \n \n  Uniform Type Identifier  \n com.netscape.javascript-source   [ 4 ]    \n \n \n Type of format \n  Scripting language  \n \n \n \n \n Part of a  series  on \n \n \n  JavaScript  \n \n \n \n \n  JavaScript syntax  \n  JavaScript library  \n  Unobtrusive JavaScript  \n  JavaScript engine  \n \n \n \n \n Lists of Frameworks and Libraries \n \n \n \n \n  Ajax frameworks  \n  JavaScript web application frameworks  \n  Comparison of JavaScript frameworks  \n  List of JavaScript libraries  \n  JavaScript unit testing frameworks  \n \n \n \n \n   JavaScript Object Notation   \n \n \n \n  See also  \n \n  ECMAScript  \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n \n \n \n  JavaScript  ( JS ) is an  interpreted  computer  programming language .   [ 5 ]    As part of  web browsers , implementations allow  client-side scripts  to  interact with the user , control the browser, communicate  asynchronously , and alter the  document content  that is displayed.   [ 5 ]    It has also become common in server-side programming, game development and the creation of desktop applications. \n JavaScript is a  prototype-based   scripting language  with  dynamic  typing and has  first-class functions . Its  syntax  was influenced by  C . JavaScript copies many names and naming conventions from  Java , but the two languages are otherwise unrelated and have very different semantics. The key design principles within JavaScript are taken from the  Self  and  Scheme  programming languages.   [ 6 ]    It is a  multi-paradigm  language, supporting  object-oriented ,   [ 7 ]     imperative , and  functional    [ 1 ]      [ 8 ]    programming styles. \n The  application  of JavaScript to use outside of web pages\u2014for example, in  PDF  documents,  site-specific browsers , and  desktop widgets \u2014is also significant. Newer and faster JavaScript  VMs  and platforms built upon them (notably  Node.js ) have also increased the popularity of JavaScript for server-side  web applications . \n JavaScript was formalized in the  ECMAScript  language standard and is primarily used as part of a web browser ( client-side JavaScript ). This enables  programmatic  access to computational objects within a host environment. \n  \n \n \n Contents \n \n \n   1   History  \n \n   1.1   Birth at Netscape   \n   1.2   Server-side JavaScript   \n   1.3   Adoption by Microsoft   \n   1.4   Standardization   \n   1.5   Later developments   \n \n \n   2   Trademark   \n   3   Features  \n \n   3.1   Imperative and structured   \n   3.2   Dynamic   \n   3.3   Functional   \n   3.4   Prototype-based   \n   3.5   Implicit and Explicit Delegation   \n   3.6   Miscellaneous   \n   3.7   Vendor-specific extensions   \n \n \n   4   Syntax  \n \n   4.1   Simple examples   \n   4.2   More advanced example   \n \n \n   5   Use in web pages  \n \n   5.1   Example script   \n   5.2   Compatibility considerations   \n   5.3   Accessibility   \n \n \n   6   Security  \n \n   6.1   Cross-site vulnerabilities  \n \n   6.1.1   Misplaced trust in the client   \n   6.1.2   Browser and plugin coding errors   \n   6.1.3   Sandbox implementation errors   \n \n \n \n \n   7   Uses outside web pages  \n \n   7.1   Embedded scripting language   \n   7.2   Scripting engine   \n   7.3   Application platform   \n \n \n   8   Development tools   \n   9   Version history   \n   10   Related languages and features  \n \n   10.1   Use as an intermediate language   \n   10.2   JavaScript and Java   \n \n \n   11   References   \n   12   Further reading   \n   13   External links   \n \n \n  \n  History   [  edit  ]   \n  Birth at Netscape   [  edit  ]   \n JavaScript was originally developed by  Brendan Eich . While battling with Microsoft over the Web, Netscape considered their client-server offering a distributed OS, running a portable version of  Sun Microsystems ' Java. Because Java was a competitor of  C++  and aimed at professional programmers, Netscape also wanted a lightweight  interpreted language  that would complement Java by appealing to nonprofessional programmers, like Microsoft's Visual Basic (see  JavaScript and Java ).   [ 9 ]    \n Although it was developed under the name  Mocha , the language was officially called  LiveScript  when it first shipped in beta releases of Netscape Navigator 2.0 in September 1995, but it was renamed JavaScript   [ 10 ]    when it was deployed in the Netscape browser version 2.0B3.   [ 11 ]    \n The change of name from LiveScript to JavaScript roughly coincided with Netscape adding support for Java technology in its  Netscape Navigator  web browser. The final choice of name caused confusion, giving the impression that the language was a spin-off of the  Java programming language , and the choice has been characterized by many as a marketing ploy by Netscape to give JavaScript the cachet of what was then the hot new web programming language.   [ 12 ]      [ 13 ]    \n There is a common misconception that the JavaScript language was influenced by Cmm (C-minus-minus), an earlier web page scripting language developed by  Nombas .   [ 14 ]      [ 15 ]      [ 16 ]    Brendan Eich, however, had never heard of Cmm before he created LiveScript.   [ 17 ]    Nombas did pitch their embedded web page scripting to Netscape, though web page scripting was not a new concept, as shown by  ViolaWWW .   [ 18 ]    Nombas later switched to offering JavaScript instead of Cmm in their ScriptEase product and was part of the TC39 group that standardized  ECMAScript .   [ 19 ]      [ 20 ]    \n  Server-side JavaScript   [  edit  ]   \n Netscape introduced an implementation of the language for  server-side scripting  (SSJS) with  Netscape Enterprise Server , first released in December, 1994 (soon after releasing JavaScript for browsers).   [ 21 ]      [ 22 ]    Since the mid-2000s, there has been a proliferation of  server-side JavaScript implementations .  Node.js  is one recent notable example of server-side JavaScript being used in real-world applications.   [ 23 ]      [ 24 ]    \n  Adoption by Microsoft   [  edit  ]   \n JavaScript very quickly gained widespread success as a client-side scripting language for web pages.  Microsoft  introduced JavaScript support in its own web browser,  Internet Explorer , in version 3.0, released in August 1996.   [ 25 ]    [   not in citation given   ]  Microsoft's webserver,  Internet Information Server , introduced support for server-side scripting in JavaScript with release 3.0 (1996). Microsoft started to promote webpage scripting using the umbrella term  Dynamic HTML . \n Microsoft's JavaScript implementation was later renamed  JScript  to avoid trademark issues. JScript added new date methods to fix the  Y2K -problematic methods in JavaScript, which were based on Java's   java.util.Date   class. \n  Standardization   [  edit  ]   \n In November 1996, Netscape announced that it had submitted JavaScript to  Ecma International  for consideration as an industry standard, and subsequent work resulted in the standardized version named  ECMAScript . In June 1997,  Ecma International  published the first edition of the  ECMA-262   specification . A year later, in June 1998, some modifications were made to adapt it to the ISO/IEC-16262 standard, and the second edition was released. The third edition of  ECMA-262  was published on December 1999.   [ 26 ]    \n Development of what would have been a fourth edition of the ECMAScript standard was ultimately never completed and no fourth edition was released.   [ 27 ]    The fifth edition was released in December 2009. The current edition of the ECMAScript standard is 5.1, released in June 2011.   [ 28 ]    \n  Later developments   [  edit  ]   \n JavaScript has become one of the most popular programming languages on the web. Initially, however, many professional programmers denigrated the language because its target audience consisted of web authors and other such \"amateurs\", among other reasons.   [ 29 ]    The advent of  Ajax  returned JavaScript to the spotlight and brought more professional programming attention. The result was a proliferation of comprehensive  frameworks and libraries , improved JavaScript programming practices, and increased usage of JavaScript outside of web browsers, as seen by the proliferation of  server-side JavaScript  platforms. \n In January 2009, the  CommonJS  project was founded with the goal of specifying a common standard library mainly for JavaScript development outside the browser.   [ 30 ]    \n  Trademark   [  edit  ]   \n Today, \"JavaScript\" is a  trademark  of  Oracle Corporation .   [ 31 ]    It is used under license for technology invented and implemented by Netscape Communications and current entities such as the  Mozilla Foundation .   [ 32 ]    \n  Features   [  edit  ]   \n The following features are common to all conforming ECMAScript implementations, unless explicitly specified otherwise. \n  Imperative and structured   [  edit  ]   \n JavaScript supports much of the  structured programming  syntax from  C  (e.g.,  if  statements,  while  loops,  switch  statements, etc.). One partial exception is  scoping : C-style  block scoping  is not supported. Instead, JavaScript has  function scoping  (although, block scoping using the  let  keyword was added in JavaScript 1.7). Like C, JavaScript makes a distinction between  expressions  and  statements . One syntactic difference from C is  automatic semicolon insertion , in which the semicolons that terminate statements can be omitted.   [ 33 ]    \n  Dynamic   [  edit  ]   \n \n Dynamic typing \n As in most  scripting languages ,  types  are associated with  values , not with  variables . For example, a variable  x  could be bound to a number, then later rebound to a  string . JavaScript supports various ways to test the type of an object, including  duck typing .   [ 34 ]    \n Object-based \n JavaScript is almost entirely  object-based . JavaScript  objects  are  associative arrays , augmented with prototypes (see below). Object property names are string keys. They support two equivalent syntaxes: dot notation ( obj.x\u00a0=\u00a010 ) and bracket notation ( obj['x']\u00a0=\u00a010 ). Properties and their values can be added, changed, or deleted at run-time. Most properties of an object (and those on its prototype inheritance chain) can be enumerated using a  for...in  loop. JavaScript has a small number of built-in objects such as  Function  and  Date . \n Run-time evaluation \n JavaScript includes an   eval   function that can execute statements provided as strings at run-time. \n \n  Functional   [  edit  ]   \n \n First-class functions \n  Functions  are  first-class ; they are objects themselves. As such, they have properties and methods, such as  .call()  and  .bind() .   [ 35 ]    A  nested  function is a function defined within another function. It is created each time the outer function is invoked. In addition, each created function forms a  lexical closure : the  lexical scope  of the outer function, including any constants, local variables and argument values, becomes part of the internal state of each inner function object, even after execution of the outer function concludes.   [ 36 ]    \n \n  Prototype-based   [  edit  ]   \n \n Prototypes \n JavaScript uses  prototypes  where many other object oriented languages use  classes  for  inheritance .   [ 37 ]    It is possible to simulate many class-based features with prototypes in JavaScript.   [ 38 ]    \n Functions as object constructors \n Functions double as object constructors along with their typical role. Prefixing a function call with  new  will create an instance of a prototype, inheriting properties and methods from the constructor (including properties from the  Object  prototype).   [ 39 ]    ECMAScript 5 offers the  Object.create  method, allowing explicit creation of an instance without automatically inheriting from the  Object  prototype (older environments can assign the prototype to  null ).   [ 40 ]    The constructor's  prototype  property determines the object used for the new object's internal prototype. New methods can be added by modifying the prototype of the object used as a constructor. JavaScript's built-in constructors, such as  Array  or  Object , also have prototypes that can be modified. While it is possible to modify the  Object  prototype, it is generally considered bad practice because most objects in JavaScript will inherit methods and properties from the  Object  prototype and they may not expect the prototype to be modified.   [ 41 ]    \n Functions as methods \n Unlike many object-oriented languages, there is no distinction between a function definition and a  method  definition. Rather, the distinction occurs during function calling; when a function is called as a method of an object, the function's local  this  keyword is bound to that object for that invocation. \n \n  Implicit and Explicit Delegation   [  edit  ]   \n JavaScript is a  Delegation Language . \n \n Functions as Roles (Traits and Mixins) \n JavaScript natively supports various function based implementations of  Role  patterns like  Traits    [ 42 ]    and  Mixins .   [ 43 ]    Such a function defines additional behavior by at least one method bound to the  this  keyword within its  function  body. A Role then has to be delegated explicitly via  call  or  apply  to objects that need to feature additional behavior that is not shared via the prototype chain. \n Type Composition and Inheritance \n Whereas explicit function based delegation does cover  composition  in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to e.g. find a method that might be related to but is not directly owned by an object. Once the method was found it gets called within this objects context. Thus  inheritance  in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions. \n \n  Miscellaneous   [  edit  ]   \n \n Run-time environment \n JavaScript typically relies on a run-time environment (e.g. a  web browser ) to provide objects and methods by which scripts can interact with the environment (e.g. a webpage DOM). It also relies on the run-time environment to provide the ability to include/import scripts (e.g.  HTML   &lt;script&gt;  elements). This is not a language feature per se, but it is common in most JavaScript implementations. \n Variadic functions \n An indefinite number of parameters can be passed to a function. The function can access them through  formal parameters  and also through the local  arguments  object.  Variadic functions  can also be created by using the  apply  method. \n Array and object literals \n Like many scripting languages, arrays and objects ( associative arrays  in other languages) can each be created with a succinct shortcut syntax. In fact, these  literals  form the basis of the  JSON  data format. \n Regular expressions \n JavaScript also supports  regular expressions  in a manner similar to  Perl , which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.   [ 44 ]    \n \n  Vendor-specific extensions   [  edit  ]   \n JavaScript is officially managed by  Mozilla Foundation , and new language features are added periodically. However, only some  JavaScript engines  support these new features: \n \n property getter and setter functions (supported by WebKit, Opera,   [ 45 ]    ActionScript, and Rhino)   [ 46 ]    \n conditional  catch  clauses \n iterator protocol (adopted from  Python ) \n shallow  generators - coroutines  (adopted from Python) \n  array comprehensions  and generator expressions (adopted from Python) \n proper block scope via the  let  keyword \n array and object destructuring (limited form of  pattern matching ) \n concise function expressions ( function(args) expr ) \n  ECMAScript for XML  (E4X), an extension that adds native XML support to ECMAScript \n \n  Syntax   [  edit  ]   \n Main article:  JavaScript syntax  \n As of 2011  [update]  , the latest version of the language is JavaScript 1.8.5. It is a superset of ECMAScript (ECMA-262) Edition 3. Extensions to the language, including partial  ECMAScript for XML  (E4X) (ECMA-357) support and experimental features considered for inclusion into future ECMAScript editions, are documented here.   [ 47 ]    \n  Simple examples   [  edit  ]   \n  Variables  in JavaScript can be defined using the  var  keyword:   [ 48 ]    \n \n \n \n var  x ;   //defines the variable x, although no value is assigned to it by default \n var  y  =   2  ;   //defines the variable y and assigns the value of 2 to it \n  \n \n Note the  comments  in the example above, both of which were preceded with two  forward slashes . \n There is no built-in  I/O  functionality in JavaScript; the runtime environment provides that. The ECMAScript specification in edition 5.1 mentions:   [ 49 ]    \n \n ... indeed, there are no provisions in this specification for input of external data or output of computed results. \n \n However, most runtime environments have a  console  object   [ 50 ]    that can be used to print output. Here is a minimalist  Hello World program : \n \n \n \nconsole. log  (  \"Hello world!\"  )  ; \n  \n \n A simple  recursive  function: \n \n \n \n function  factorial ( n )   { \n     if   ( n  ===   0  )   { \n         return   1  ; \n     } \n     return  n  *  factorial ( n  -   1  )  ; \n } \n  \n \n  Anonymous function  (or lambda) syntax and  closure  example: \n \n \n \n var  displayClosure  =   function  (  )   { \n     var  count  =   0  ; \n     return   function   (  )   { \n         return   ++ count ; \n     }  ; \n } \n var  inc  =  displayClosure (  )  ; \ninc (  )  ;   // returns 1 \ninc (  )  ;   // returns 2 \ninc (  )  ;   // returns 3 \n  \n \n  Variadic function  demonstration ( arguments  is a special  variable ).   [ 51 ]    \n \n \n \n var  sum  =   function  (  )   { \n     var  i ,  x  =   0  ; \n     for   ( i  =   0  ;  i  &lt;  arguments. length  ;   ++ i )   { \n        x  +=  arguments [ i ]  ; \n     } \n     return  x ; \n } \nsum (  1  ,   2  ,   3  )  ;   // returns 6 \n  \n \n  Immediately-invoked function expressions  allow functions to pass around variables under their own closures. \n \n \n \n var  v ; \nv  =   1  ; \n var  getValue  =   (  function  ( v )   { \n   return   function  (  )   {  return  v ;  }  ; \n }  )  ( v )  ; \n \nv  =   2  ; \n \ngetValue (  )  ;   // 1 \n  \n \n  More advanced example   [  edit  ]   \n This sample code displays various JavaScript features. \n \n \n \n \n /* Finds the lowest common multiple (LCM) of two numbers */ \n function  LCMCalculator ( x ,  y )   {   // constructor function \n     var  checkInt  =   function   ( x )   {   // inner function \n         if   ( x  %   1   !==   0  )   { \n             throw   new  TypeError ( x  +   \" is not an integer\"  )  ;   // throw an exception \n         } \n         return  x ; \n     }  ; \n     this . a   =  checkInt ( x ) \n     //   semicolons   ^^^^  are optional, a newline is enough \n     this . b   =  checkInt ( y )  ; \n } \n // The prototype of object instances created by a constructor is \n // that constructor's \"prototype\" property. \nLCMCalculator. prototype   =   {   // object literal \n    constructor :  LCMCalculator ,   // when reassigning a prototype, set the constructor property appropriately \n    gcd :   function   (  )   {   // method that calculates the greatest common divisor \n         // Euclidean algorithm: \n         var  a  =   Math . abs  (  this . a  )  ,  b  =   Math . abs  (  this . b  )  ,  t ; \n         if   ( a  &lt;  b )   { \n             // swap variables \n            t  =  b ; \n            b  =  a ; \n            a  =  t ; \n         } \n        while  ( b  !==   0  )   { \n            t  =  b ; \n            b  =  a  %  b ; \n            a  =  t ; \n         } \n         // Only need to calculate GCD once, so \"redefine\" this method. \n         // (Actually not redefinition\u2014it's defined on the instance itself, \n         // so that this.gcd refers to this \"redefinition\" instead of LCMCalculator.prototype.gcd.) \n         // Also, 'gcd' === \"gcd\", this['gcd'] === this.gcd \n         this  [  'gcd'  ]   =   function   (  )   { \n             return  a ; \n         }  ; \n         return  a ; \n     }  , \n     // Object property names can be specified by strings delimited by double (\") or single (') quotes. \n    lcm  :   function   (  )   { \n         // Variable names don't collide with object properties, e.g. |lcm| is not |this.lcm|. \n         // not using |this.a * this.b| to avoid FP precision issues \n         var  lcm  =   this . a   /   this . gcd  (  )   *   this . b  ; \n         // Only need to calculate lcm once, so \"redefine\" this method. \n         this . lcm   =   function   (  )   { \n             return  lcm ; \n         }  ; \n         return  lcm ; \n     }  , \n    toString :   function   (  )   { \n         return   \"LCMCalculator: a = \"   +   this . a   +   \", b = \"   +   this . b  ; \n     } \n }  ; \n \n // Define generic output function; this implementation only works for web browsers \n function  output ( x )   { \n    document. body . appendChild  ( document. createTextNode  ( x )  )  ; \n    document. body . appendChild  ( document. createElement  (  'br'  )  )  ; \n } \n \n // Note: Array's map() and forEach() are defined in JavaScript 1.6. \n // They are used here to demonstrate JavaScript's inherent functional nature. \n [  [  25  ,   55  ]  ,   [  21  ,   56  ]  ,   [  22  ,   58  ]  ,   [  28  ,   56  ]  ] . map  (  function   ( pair )   {   // array literal + mapping function \n     return   new  LCMCalculator ( pair [  0  ]  ,  pair [  1  ]  )  ; \n }  ) . sort  (  function   ( a ,  b )   {   // sort with this comparative function \n     return  a. lcm  (  )   -  b. lcm  (  )  ; \n }  ) . forEach  (  function   ( obj )   { \n    output ( obj  +   \", gcd = \"   +  obj. gcd  (  )   +   \", lcm = \"   +  obj. lcm  (  )  )  ; \n }  )  ; \n  \n \n \n The following output should be displayed in the browser window. \n \n \n \n \nLCMCalculator: a = 28, b = 56, gcd = 28, lcm = 56\nLCMCalculator: a = 21, b = 56, gcd = 7, lcm = 168\nLCMCalculator: a = 25, b = 55, gcd = 5, lcm = 275\nLCMCalculator: a = 22, b = 58, gcd = 2, lcm = 638\n  \n \n \n  Use in web pages   [  edit  ]   \n See also:  JavaScript engine \u00a0and  Ajax (programming)  \n The most common use of JavaScript is to write functions that are embedded in or included from  HTML  pages and that interact with the  Document Object Model  (DOM) of the page. Some simple examples of this usage are: \n \n Loading new page content or submitting data to the server via  AJAX  without reloading the page (for example, a social network might allow the user to post status updates without leaving the page) \n Animation of page elements, fading them in and out, resizing them, moving them, etc. \n Interactive content, for example games, and playing audio and video \n  Validating  input values of a  web form  to make sure that they are acceptable before being submitted to the server. \n Transmitting information about the user's reading habits and browsing activities to various websites. Web pages frequently do this for  web analytics ,  ad tracking ,  personalization  or other purposes.   [ 52 ]    \n \n Because JavaScript code can run locally in a user's browser (rather than on a remote server), the browser can respond to user actions quickly, making an application more responsive. Furthermore, JavaScript code can detect user actions which HTML alone cannot, such as individual keystrokes. Applications such as  Gmail  take advantage of this: much of the user-interface logic is written in JavaScript, and JavaScript dispatches requests for information (such as the content of an e-mail message) to the server. The wider trend of  Ajax  programming similarly exploits this strength. \n A  JavaScript engine  (also known as  JavaScript interpreter  or  JavaScript implementation ) is an  interpreter  that interprets JavaScript  source code  and executes the  script  accordingly. The first JavaScript engine was created by  Brendan Eich  at  Netscape Communications Corporation , for the  Netscape Navigator   web browser . The engine, code-named  SpiderMonkey , is implemented in  C . It has since been updated (in JavaScript 1.5) to conform to ECMA-262 Edition 3. The  Rhino  engine, created primarily by Norris Boyd (formerly of Netscape; now at Google) is a JavaScript implementation in  Java . Rhino, like SpiderMonkey, is ECMA-262 Edition 3 compliant. \n A web browser is by far the most common host environment for JavaScript. Web browsers typically create \"host objects\" to represent the  Document Object Model  (DOM) in JavaScript. The  web server  is another common host environment. A  JavaScript webserver  would typically expose host objects representing  HTTP  request and response objects, which a JavaScript program could then interrogate and manipulate to dynamically generate web pages. \n Because JavaScript is the only language that the most popular browsers share support for, it has become a  target language  for many frameworks in other languages, even though JavaScript was never intended to be such a language.   [ 53 ]    Despite the performance limitations inherent to its dynamic nature, the increasing speed of JavaScript engines has made the language a surprisingly feasible compilation target. \n  Example script   [  edit  ]   \n Below is a minimal example of a standards-conforming web page containing JavaScript (using  HTML 5  syntax) and the  DOM : \n \n \n \n &lt;!DOCTYPE html&gt; \n \n &lt; meta   charset  =  \"utf-8\" &gt; \n &lt; title &gt; Minimal Example &lt; /  title &gt; \n \n &lt; h1   id  =  \"header\" &gt; This is JavaScript &lt; /  h1 &gt; \n \n &lt; script &gt; \n    document.body.appendChild(document.createTextNode('Hello World!'));\n \n    var h1 = document.getElementById('header'); // holds a reference to the  &lt; h1 &gt;  tag\n    h1 = document.getElementsByTagName('h1')[0]; // accessing the same  &lt; h1 &gt;  element\n &lt; /  script &gt; \n \n &lt; noscript &gt; Your browser either does not support JavaScript, or has it turned off. &lt; /  noscript &gt; \n  \n \n  Compatibility considerations   [  edit  ]   \n Main article:  Web interoperability  \n Because JavaScript runs in widely varying environments, an important part of testing and debugging is to test and verify that the JavaScript works across multiple browsers. \n The DOM interfaces for manipulating web pages are not part of the ECMAScript standard, or of JavaScript itself. Officially, the DOM interfaces are defined by a separate standardization effort by the  W3C ; in practice, browser implementations differ from the standards and from each other, and not all browsers execute JavaScript. \n To deal with these differences, JavaScript authors can attempt to write standards-compliant code which will also be executed correctly by most browsers; failing that, they can write code that checks for the presence of certain browser features and behaves differently if they are not available.   [ 54 ]    In some cases, two browsers may both implement a feature but with different behavior, and authors may find it practical to detect what browser is running and change their script's behavior to match.   [ 55 ]      [ 56 ]    Programmers may also use libraries or toolkits which take browser differences into account. \n Furthermore, scripts may not work for some users. For example, a user may: \n \n use an old or rare browser with incomplete or unusual DOM support, \n use a  PDA  or  mobile phone  browser which cannot execute JavaScript, \n have JavaScript execution disabled as a security precaution, \n use a speech browser due to, for example, a visual disability. \n \n To support these users, web authors can try to create pages which  degrade gracefully  on user agents (browsers) which do not support the page's JavaScript. In particular, the page should remain usable albeit without the extra features that the JavaScript would have added. An alternative approach that many find preferable is to first author content using basic technologies that work in all browsers, then enhance the content for users that have JavaScript enabled. This is known as  progressive enhancement . \n  Accessibility   [  edit  ]   \n Main article:  Web accessibility  \n Assuming that the user has not disabled its execution, client-side web JavaScript should be written to enhance the experiences of visitors with visual or physical  disabilities , and certainly should avoid denying information to these visitors.   [ 57 ]    \n  Screen readers , used by the  blind and partially sighted , can be JavaScript-aware and so may access and read the page DOM after the script has altered it. The HTML should be as concise, navigable and  semantically rich  as possible whether the scripts have run or not. JavaScript should not be totally reliant on  mouse  or  keyboard  specific events because a user may be physically unable to use these input devices. For this reason, device-agnostic events such as  onfocus  and  onchange  are preferable to device-centric events such as  onmouseover  and  onkeypress  in most cases.   [ 57 ]    \n JavaScript should not be used in a way that is confusing or disorienting to any web user. For example, using script to alter or disable the normal functionality of the browser, such as by changing the way the \"back\" or \"refresh\" buttons work, is usually best avoided. Equally, triggering events that the user may not be aware of reduces the user's sense of control as do unexpected scripted changes to the page content.   [ 58 ]    \n Often the process of making a complex web page as accessible as possible becomes a  nontrivial  problem where issues become matters of debate and opinion, and where compromises are necessary in the end. However, user agents and  assistive technologies  are constantly evolving and new guidelines and relevant information are continually being published on the web.   [ 57 ]    \n  Security   [  edit  ]   \n See also:  Browser security  \n JavaScript and the DOM provide the potential for malicious authors to deliver scripts to run on a client computer via the web. Browser authors contain this risk using two restrictions. First, scripts run in a  sandbox  in which they can only perform web-related actions, not general-purpose programming tasks like creating files. Second, scripts are constrained by the  same origin policy : scripts from one web site do not have access to information such as usernames, passwords, or cookies sent to another site. Most JavaScript-related security bugs are breaches of either the same origin policy or the sandbox. \n There are subsets of general JavaScript \u2014 ADsafe, Secure ECMA Script (SES) \u2014 that provide greater level of security, especially on code created by third parties (such as advertisements).   [ 59 ]      [ 60 ]    \n  Content Security Policy  is the main intended method of ensuring that only trusted code is executed on a web page. \n See also:  Content Security Policy  \n  Cross-site vulnerabilities   [  edit  ]   \n Main articles:  Cross-site scripting  and  Cross-site request forgery  \n A common JavaScript-related security problem is  cross-site scripting , or XSS, a violation of the  same-origin policy . XSS vulnerabilities occur when an attacker is able to cause a target web site, such as an online banking website, to include a malicious script in the webpage presented to a victim. The script in this example can then access the banking application with the privileges of the victim, potentially disclosing secret information or transferring money without the victim's authorization. A solution to XSS vulnerabilities is to use  HTML escaping  whenever displaying untrusted data. \n Some browsers include partial protection against  reflected  XSS attacks, in which the attacker provides a URL including malicious script. However, even users of those browsers are vulnerable to other XSS attacks, such as those where the malicious code is stored in a database. Only correct design of Web applications on the server side can fully prevent XSS. \n XSS vulnerabilities can also occur because of implementation mistakes by browser authors.   [ 61 ]    \n Another cross-site vulnerability is  cross-site request forgery  or CSRF. In CSRF, code on an attacker's site tricks the victim's browser into taking actions the user didn't intend at a target site (like transferring money at a bank). It works because, if the target site relies only on cookies to authenticate requests, then requests initiated by code on the attacker's site will carry the same legitimate login credentials as requests initiated by the user. In general, the solution to CSRF is to require an authentication value in a hidden form field, and not only in the cookies, to authenticate any request that might have lasting effects. Checking the HTTP Referrer header can also help. \n \"JavaScript hijacking\" is a type of CSRF attack in which a &lt;script&gt; tag on an attacker's site exploits a page on the victim's site that returns private information such as JSON or JavaScript. Possible solutions include: \n \n requiring an authentication token in the  POST  and  GET  parameters for any response that returns private information \n using POST and never GET for requests that return private information \n \n  Misplaced trust in the client   [  edit  ]   \n Developers of client-server applications must recognize that untrusted clients may be under the control of attackers. The application author cannot assume that his JavaScript code will run as intended (or at all) because any secret embedded in the code could be extracted by a determined adversary. Some implications are: \n \n Web site authors cannot perfectly conceal how their JavaScript operates because the raw source code must be sent to the client. The code can be  obfuscated , but obfuscation can be reverse-engineered. \n JavaScript form validation only provides convenience for users, not security. If a site verifies that the user agreed to its terms of service, or filters invalid characters out of fields that should only contain numbers, it must do so on the server, not only the client. \n Scripts can be selectively disabled, so JavaScript can't be relied on to prevent operations such as right-clicking on an image to save it.   [ 62 ]    \n It is extremely bad practice to embed sensitive information such as passwords in JavaScript because it can be extracted by an attacker. \n \n  Browser and plugin coding errors   [  edit  ]   \n JavaScript provides an interface to a wide range of browser capabilities, some of which may have flaws such as  buffer overflows . These flaws can allow attackers to write scripts which would run any code they wish on the user's system. This code is not by any means limited to another JavaScript application. For example, a buffer overrun exploit can allow an attacker to gain access to the operating system's API with superuser privileges. \n These flaws have affected major browsers including Firefox,   [ 63 ]    Internet Explorer,   [ 64 ]    and Safari.   [ 65 ]    \n Plugins, such as video players,  Adobe Flash , and the wide range of  ActiveX  controls enabled by default in Microsoft Internet Explorer, may also have flaws exploitable via JavaScript (such flaws have been exploited in the past).   [ 66 ]      [ 67 ]    \n In Windows Vista, Microsoft has attempted to contain the risks of bugs such as buffer overflows by running the Internet Explorer process with limited privileges.   [ 68 ]     Google Chrome  similarly confines its page renderers to their own \"sandbox\". \n  Sandbox implementation errors   [  edit  ]   \n Web browsers are capable of running JavaScript outside of the sandbox, with the privileges necessary to, for example, create or delete files. Of course, such privileges aren't meant to be granted to code from the web. \n Incorrectly granting privileges to JavaScript from the web has played a role in vulnerabilities in both Internet Explorer   [ 69 ]    and Firefox.   [ 70 ]    In Windows XP Service Pack 2, Microsoft demoted JScript's privileges in Internet Explorer.   [ 71 ]    \n  Microsoft Windows  allows JavaScript source files on a computer's hard drive to be launched as general-purpose, non-sandboxed programs (see:  Windows Script Host ). This makes JavaScript (like  VBScript ) a theoretically viable vector for a  Trojan horse , although JavaScript Trojan horses are uncommon in practice.   [ 72 ]    \n  Uses outside web pages   [  edit  ]   \n In addition to web browsers and servers, JavaScript interpreters are embedded in a number of tools. Each of these applications provides its own  object model  which provides access to the host environment. The core JavaScript language remains mostly the same in each application. \n  Embedded scripting language   [  edit  ]   \n \n Google's  Chrome  extensions,  Opera 's extensions, Apple's  Safari 5  extensions, Apple's  Dashboard Widgets , Microsoft's  Gadgets ,  Yahoo! Widgets ,  Google Desktop Gadgets , and  Serence   Klipfolio  are implemented using JavaScript. \n Adobe's  Acrobat and Adobe Reader  support JavaScript in  PDF  files.   [ 73 ]    \n Tools in the  Adobe Creative Suite , including  Photoshop ,  Illustrator ,  Dreamweaver , and  InDesign , allow scripting through JavaScript. \n  OpenOffice.org , an office application suite, allows JavaScript to be used as a scripting language. \n The interactive music signal processing software  Max/MSP  released by Cycling '74, offers a JavaScript model of its environment for use by developers. It allows much more precise control than the default GUI-centric programming model. \n Apple's Logic Pro X digital audio workstation (DAW) software can create custom MIDI effects plugins using JavaScript. \n ECMAScript was included in the  VRML 97 standard for scripting nodes of VRML scene description files. \n  Sphere  is an open-source and cross-platform computer program designed primarily to make role-playing games that use JavaScript as a scripting language. \n The  open-source   Re-Animator  framework allows developing 2D sprite-based games using JavaScript and XML.   [ 74 ]    \n The  Unity  game engine supports a modified version of JavaScript for scripting via Mono.   [ 75 ]    \n  DX Studio (3D engine)  uses the  SpiderMonkey  implementation of JavaScript for game and simulation logic.   [ 76 ]    \n  Maxwell Render  ( rendering  software) provides an ECMA standard based scripting engine for tasks automation.   [ 77 ]    \n  Google Apps Script  in  Google Spreadsheets  and  Google Sites  allows users to create custom formulas, automate repetitive tasks and also interact with other Google products such as Gmail.   [ 78 ]    \n Many  IRC clients , like  ChatZilla  or  XChat , use JavaScript for their scripting abilities.   [ 79 ]      [ 80 ]    \n SpinetiX products use the  SpiderMonkey  JavaScript engine to allow scripting within SVG files to create digital signage projects.   [ 81 ]    \n  Cloud Party  virtual world uses a limited version of JavaScript/ECMAScript 5 as in-world scripting language.   [ 82 ]    \n \n  Scripting engine   [  edit  ]   \n \n Microsoft's  Active Scripting  technology supports  JScript  as a scripting language.   [ 83 ]    \n The  Java programming language  introduced the  javax.script  package in version 6 that includes a JavaScript implementation based on  Mozilla Rhino . Thus, Java applications can host scripts that access the application's variables and objects, much like web browsers host scripts that access a webpage's Document Object Model (DOM).   [ 84 ]      [ 85 ]    \n The  Qt  C++ toolkit includes a  QtScript  module to interpret JavaScript, analogous to Java's  javax.script  package.   [ 86 ]    \n  JSDB  (JavaScript for Databases) is an  open-source  JavaScript shell for Windows, Mac OS X, Linux, and Unix, which extends the  Mozilla JavaScript engine  with file, database, email, and network objects.   [ 87 ]    \n  jslibs  is an open-source JavaScript shell for Windows and Linux which extends the  Mozilla JavaScript engine . It has the ability to call functions in commonly used libraries like NSPR, SQLite, libTomCrypt, OpenGL, OpenAL, and librsvg.   [ 88 ]    \n Late Night Software's  JavaScript OSA  (aka JavaScript for OSA, or JSOSA) is a freeware alternative to  AppleScript  for Mac OS X. It is based on the Mozilla 1.5 JavaScript implementation, with the addition of a  MacOS  object for interaction with the operating system and third-party applications.   [ 89 ]    \n \n  Application platform   [  edit  ]   \n \n  ActionScript , the programming language used in  Adobe Flash , is another implementation of the ECMAScript standard. \n  Adobe Integrated Runtime  is a JavaScript runtime that allows developers to create desktop applications. \n  CA, Inc. 's AutoShell cross-application scripting environment is built on the  SpiderMonkey  Javascript engine. It contains  preprocessor -like extensions for command definition, as well as custom classes for various system-related tasks like file I/O, operation system command invocation and redirection, and COM scripting. \n  GNOME Shell , the shell for the   GNOME 3   desktop environment,   [ 90 ]    made JavaScript its default programming language in 2013.   [ 91 ]    \n The  Mozilla  platform, which underlies  Firefox ,  Thunderbird , and some other web browsers, uses JavaScript to implement the  graphical user interface  (GUI) of its various products. \n  myNFC  is a JavaScript based framework that allows developers to create applications for smart phones.   [ 92 ]    \n  Qt Quick 's markup language (available since Qt 4.7) uses JavaScript for its application logic. Its declarative syntax is also similar to JavaScript. \n  TypeScript  is a programming language based on JavaScript that adds support for optional  type annotations  and some other language extensions such as classes, interfaces and modules. A TS-script compiles into plain JavaScript and can be executed in any JS host supporting  ECMAScript 3  or higher. The compiler is itself written in TypeScript. \n  Ubuntu Touch  provides a JavaScript API for its unified usability interface. \n  webOS  uses the  WebKit  implementation of JavaScript in its  SDK  to allow developers to create stand-alone applications solely in JavaScript. \n  WinJS  provides a special Windows Library for JavaScript functionality in  Windows 8  that enables the development of  Modern style  (formerly  Metro style ) applications in  HTML5  and JavaScript. \n \n  Development tools   [  edit  ]   \n Within JavaScript, access to a  debugger  becomes invaluable when developing large, non-trivial programs. Because there can be implementation differences between the various browsers (particularly within the  Document Object Model ), it is useful to have access to a debugger for each of the browsers that a web application targets.   [ 93 ]    \n Script debuggers are available for  Internet Explorer ,  Firefox ,  Safari ,  Google Chrome , and  Opera .   [ 94 ]      [ 95 ]    \n Three debuggers are available for Internet Explorer:  Microsoft Visual Studio  is the richest of the three, closely followed by  Microsoft Script Editor  (a component of  Microsoft Office ),   [ 96 ]    and finally the free  Microsoft Script Debugger  which is far more basic than the other two. The free  Microsoft Visual Web Developer Express  provides a limited version of the JavaScript debugging functionality in Microsoft Visual Studio. Internet Explorer has included developer tools since version 8 (reached by pressing the F12 key). \n Web applications within Firefox can be debugged using the  Firebug  add-on, or the older  Venkman  debugger. Firefox also has a simpler built-in Error Console, which logs and evaluates JavaScript. It also logs  CSS  errors and warnings. \n  Opera  includes a set of tools called  Dragonfly .   [ 97 ]    \n  WebKit 's Web Inspector includes a JavaScript debugger,   [ 98 ]    which is used in  Safari . A modified version is used in  Google Chrome . \n Some debugging aids are themselves written in JavaScript and built to run on the Web. An example is the program  JSLint , developed by  Douglas Crockford  who has written extensively on the language. JSLint scans JavaScript code for conformance to a set of standards and guidelines. \n  Version history   [  edit  ]   \n See also:  ECMAScript#Dialects \u00a0and  ECMAScript#Version correspondence  \n The following table is based on information from multiple sources.   [ 99 ]      [ 100 ]      [ 101 ]    \n \n \n Version \n Release date \n Equivalent to \n Netscape \nNavigator \n Mozilla \nFirefox \n Internet \nExplorer \n Opera \n Safari \n Google \nChrome \n \n \n  Old version, no longer supported:  1.0 \n March 1996 \n  \n 2.0 \n  \n 3.0 \n  \n  \n  \n \n \n  Old version, no longer supported:  1.1 \n August 1996 \n  \n 3.0 \n  \n  \n  \n  \n  \n \n \n  Old version, no longer supported:  1.2 \n June 1997 \n  \n 4.0-4.05 \n  \n  \n 3   [ 102 ]    \n  \n  \n \n \n  Old version, no longer supported:  1.3 \n October 1998 \n ECMA-262 1st + 2nd edition \n 4.06-4.7x \n  \n 4.0 \n 5   [ 103 ]    \n  \n  \n \n \n  Old version, no longer supported:  1.4 \n  \n  \n Netscape \nServer \n  \n  \n 6 \n  \n  \n \n \n  Old version, no longer supported:  1.5 \n November 2000 \n ECMA-262 3rd edition \n 6.0 \n 1.0 \n 5.5 (JScript 5.5), \n6 (JScript 5.6), \n7 (JScript 5.7), \n8 (JScript 5.8) \n 7.0 \n 3.0-5 \n 1.0-10.0.666 \n \n \n  Old version, no longer supported:  1.6 \n November 2005 \n 1.5 + array extras + array and string generics +  E4X  \n  \n 1.5 \n  \n  \n  \n  \n \n \n  Old version, no longer supported:  1.7 \n October 2006 \n 1.6 +  Pythonic generators  + iterators + let \n  \n 2.0 \n  \n  \n  \n 28.0.1500.95 \n \n \n  Old version, no longer supported:  1.8 \n June 2008 \n 1.7 +  generator expressions  +  expression closures  \n  \n 3.0 \n  \n 11.50 \n  \n  \n \n \n  Old version, no longer supported:  1.8.1 \n  \n 1.8 +  native JSON  support + minor updates \n  \n 3.5 \n  \n  \n  \n  \n \n \n  Old version, no longer supported:  1.8.2 \n June 22, 2009 \n 1.8.1 + minor updates \n  \n 3.6 \n  \n  \n  \n  \n \n \n  Old version, no longer supported:  1.8.5 \n July 27, 2010 \n 1.8.2 +  ECMAScript  5 compliance \n  \n 4 \n 9 \n 11.60 \n  \n  \n \n \n  Current stable version:   1.8.6  [   dubious    \u2013  discuss   ]  \n  \n  \n  \n 17 \n  \n  \n  \n \n \n \n    Legend:    \n   Old version   \n   Older version, still supported   \n    Latest version    \n   Latest preview version   \n   Future release   \n  \n \n  Related languages and features   [  edit  ]   \n  JSON , or JavaScript Object Notation, is a general-purpose data interchange format that is defined as a subset of JavaScript's literal syntax. \n  jQuery  is a popular JavaScript library designed to simplify  DOM -oriented client-side HTML scripting. \n Mozilla browsers currently support  LiveConnect , a feature that allows JavaScript and Java to intercommunicate on the web. However, Mozilla-specific support for LiveConnect is scheduled to be phased out in the future in favor of passing on the LiveConnect handling via  NPAPI  to the Java 1.6+ plug-in (not yet supported on the Mac as of March 2010  [update]  ).   [ 104 ]    Most browser inspection tools, such as  Firebug  in Firefox, include JavaScript interpreters that can act on the visible page's DOM. \n  asm.js  is a subset of JavaScript that can be run in any JavaScript engine or run faster in an  ahead-of-time  (AOT) compiling engine.   [ 105 ]    \n  Use as an intermediate language   [  edit  ]   \n As JavaScript is the most widely supported client-side language that can run within a web browser, it has become an  intermediate language  for other languages to target. This has included both newly created languages and ports of existing languages. Some of these include: \n \n  Objective-J , a superset of JavaScript that compiles to standard JavaScript. It adds traditional inheritance and  Smalltalk / Objective-C  style dynamic dispatch and optional pseudo-static typing to JavaScript. \n  Processing.js , a JavaScript port of Processing, a programming language designed to write visualizations, images, and interactive content. It allows web browsers to display animations, visual applications, games and other graphical rich content without the need for a Java applet or Flash plugin. \n  CoffeeScript , an alternate syntax for JavaScript intended to be more concise and readable. It adds features like array comprehensions (also available in JavaScript since version 1.7   [ 106 ]   ) and pattern matching. Like Objective-J, it compiles to JavaScript. Ruby and Python have been cited as influential on CoffeeScript syntax. \n  Google Web Toolkit  translates a subset of Java to JavaScript. \n  Scala , an object-oriented and functional programming language, has an  experimental Scala-to-Javascript compiler . \n  Pyjamas , a port of  Google Web Toolkit  to  Python  (translates a subset of Python to JavaScript) \n  Dart , an open-source programming language developed by Google, can be compiled to JavaScript. \n  Whalesong , a  Racket -to-JavaScript compiler. \n  Emscripten , a  LLVM -backend for porting native libraries to JavaScript. \n  Fantom  a programming language that runs on JVM, .NET and JavaScript. \n  TypeScript , a free and open-source programming language developed by Microsoft. It is a superset of JavaScript, and essentially adds optional static typing and class-based object-oriented programming to the language. \n  Haxe , an open-source high-level multiplatform programming language and compiler that can produce applications and source code for many different platforms including JavaScript. \n \n  JavaScript and Java   [  edit  ]   \n A common misconception is that JavaScript is similar or closely related to  Java . It is true that both have a C-like syntax (the C language being their most immediate common ancestor language). They also are both typically  sandboxed  (when used inside a browser), and JavaScript was designed with Java's syntax and standard library in mind. In particular, all Java keywords were reserved in original JavaScript, JavaScript's standard library follows Java's naming conventions, and JavaScript's Math and Date objects are based on classes from Java 1.0,   [ 25 ]    but the similarities end there. \n The differences between the two languages are more prominent than their similarities. Java has  static typing , while JavaScript's typing is dynamic (meaning a variable can hold an object of any type and cannot be restricted). Java is loaded from compiled bytecode, while JavaScript is loaded as human-readable source code. Java's objects are  class-based , while JavaScript's are  prototype-based . Finally, Java does not support  functional programming , while JavaScript does, as it contains many features based on the  Scheme language . \n  References   [  edit  ]   \n \n \n  ^     a         b         Douglas Crockford .   Douglas Crockford on Functional JavaScript   (flv) (Tech talk).  blinkx . Event occurs at 2:49. \"[JavaScript] is also coincidentally the world's most popular functional programming language. JavaScript is and has always been, at least since [version] 1.2, a functional programming language.\"   \u00a0    [   dead link   ]    \n    ^       \"New in JavaScript 1.8.5 | Mozilla Developer Network\" . Developer.mozilla.org. 2012-11-18 . Retrieved 2013-05-26 .   \u00a0    \n    ^       \"RFC 4329\" . Apps.ietf.org . Retrieved 2013-05-26 .   \u00a0    \n    ^       \"System-Declared Uniform Type Identifiers\" .  Mac OS X Reference Library . Apple Inc . Retrieved 2010-03-05 .   \u00a0    \n  ^     a         b        Flanagan &amp; Ferguson 2006 , p.\u00a01.  \n    ^       \"ECMAScript Language Overview\"  (PDF). 2007-10-23. p.\u00a04 . Retrieved 2009-05-03 .   \u00a0    \n    ^       \"ECMAScript Language Specification\" .   \u00a0    \n    ^      The Little JavaScripter  shows the relationship with Scheme in more detail.  \n    ^      Severance, Charles (February 2012).  \"Java Script: Designing a Language in 10 Days\" .  Computer  (IEEE Computer Society)  45  (2): 7\u20138.  doi : 10.1109/MC.2012.57  . Retrieved 23 March 2013 .   \u00a0    Cite uses deprecated parameters ( help )   \n    ^      Press release announcing JavaScript , \"Netscape and Sun announce Javascript\", PR Newswire, December 4, 1995  \n    ^       \"TechVision: Innovators of the Net: Brendan Eich and JavaScript\" . Web.archive.org. Archived from  the original  on 2008-02-08.   \u00a0    \n    ^       \"Programming languages used on the Internet and the World Wide Web (WWW)\" . Webdevelopersnotes.com . Retrieved 2009-05-19 .   \u00a0    \n    ^       \"O'Reilly - Safari Books Online - 0596101996 - JavaScript: The Definitive Guide, 5th Edition\" . Safari.oreilly.com . Retrieved 2009-05-19 .   \u00a0    \n    ^      http://oreilly.com/news/languageposter_0504.html   \n    ^      http://www.brenkoweb.com/m/www/design/design_jshistory.php   \n    ^      http://media.wiley.com/product_data/excerpt/88/07645790/0764579088.pdf   \n    ^      http://www.quora.com/Brent-Noorda/answers/ECMA   \n    ^      http://www.brent-noorda.com/nombas/history/HistoryOfNombas.html#h.yal3k216ii2r   \n    ^      https://brendaneich.com/2011/06/new-javascript-engine-module-owner/   \n    ^      http://read.uberflip.com/i/113144/44   \n    ^       \"Chapter 2: Getting Started\" .  Server-Side JavaScript Guide . Netscape Communications Corporation. 1998 . Retrieved 2012-04-25 .   \u00a0    \n    ^      Mike Morgan (1996).  \"Chapter 6: Netscape Internet Application Framework\" .  Using Netscape\u2122 LiveWire\u2122, Special Edition . Que.   \u00a0    \n    ^       \"Server-Side Javascript Back With a Vengeance\" .  Read Write Web . December 17, 2009 . Retrieved May 28, 2012 .   \u00a0    \n    ^       \"Node's goal is to provide an easy way to build scalable network programs\" .  About Node.js . Joyent.   \u00a0    \n  ^     a         b        Brendan Eich (3 April 2008).  \"Popularity\"  . Retrieved 2012-01-19 .   \u00a0    \n    ^       \"ECMAScript 3rd Edition specification\"  (PDF) . Retrieved 2013-05-26 .   \u00a0    \n    ^      http://www.ecmascript.org/docs.php   \n    ^       \"Standard ECMA-262\"  (PDF) . Retrieved 2013-05-26 .   \u00a0    \n    ^       \"JavaScript: The World's Most Misunderstood Programming Language\" . Crockford.com . Retrieved 2009-05-19 .   \u00a0    \n    ^      Kris Kowal (1 December 2009).  \"CommonJS effort sets JavaScript on path for world domination\" .   Ars Technica  .  Cond\u00e9 Nast Publications  . Retrieved 18 April 2010 .   \u00a0    \n    ^       \"USPTO Copyright entry #75026640\" . USPTO.   \u00a0    \n    ^       \"Sun Trademarks\" . Sun Microsystems . Retrieved 2007-11-08 .   \u00a0    \n    ^      Flanagan &amp; Ferguson 2006 , p.\u00a016.  \n    ^      Flanagan &amp; Ferguson 2006 , pp.\u00a0176\u2013178.  \n    ^       \"Properties of the Function Object\" . Es5.github.com . Retrieved 2013-05-26 .   \u00a0    \n    ^      Flanagan &amp; Ferguson 2006 , p.\u00a0141.  \n    ^       \"Inheritance and the prototype chain\" .  Mozilla Developer Network .  Mozilla  . Retrieved 6 April 2013 .   \u00a0    \n    ^      Herman, David (2013).  Effective Javascript . Addison-Wesley. p.\u00a083.  ISBN \u00a0 9780321812186 .   \u00a0    \n    ^      Haverbeke, Marjin (2011).  Eloquent Javascript . No Starch Press. pp.\u00a095\u201397.  ISBN \u00a0 9781593272821 .   \u00a0    \n    ^      Katz, Yehuda.  \"Understanding \"Prototypes\" in JavaScript\"  . Retrieved 6 April 2013 .   \u00a0    \n    ^      Herman, David (2013).  Effective Javascript . Addison-Wesley. pp.\u00a0125\u2013127.  ISBN \u00a0 9780321812186 .   \u00a0    \n    ^      JavaScript Code Reuse Patterns , April 19, 2013.  \n    ^     Angus Croll,  A fresh look at JavaScript Mixins , published May 31, 2011.  \n    ^      Haverbeke, Marijn (2011).  Eloquent JavaScript . No Starch Press. pp.\u00a0139\u2013149.  ISBN \u00a0 978-1593272821 .   \u00a0    \n    ^     Robert Nyman,  Getters And Setters With JavaScript \u2013 Code Samples And Demos , published 29 May 2009, accessed 2 January 2010.  \n    ^     John Resig,  JavaScript Getters and Setters , 18 July 2007, accessed 2 January 2010  \n    ^       \"MDN - About this Reference\" . Developer.mozilla.org. 2008-08-31 . Retrieved 2009-05-19 .   \u00a0    \n    ^       \"var - JavaScript - MDN\" . The  Mozilla Developer Network  . Retrieved 22 December 2012 .   \u00a0    \n    ^       \"ECMAScript Language Specification - ECMA-262 Edition 5.1\" .  Ecma International  . Retrieved 22 December 2012 .   \u00a0    \n    ^       \"console\" .  Mozilla Developer Network .  Mozilla  . Retrieved 6 April 2013 .   \u00a0    \n    ^       \"arguments\" .  Mozilla Developer Network .  Mozilla  . Retrieved 6 April 2013 .   \u00a0    \n    ^       \"JavaScript tracking - Piwik\" .  Piwik  . Retrieved 31 March 2012 .   \u00a0    \n    ^      Hamilton, Naomi (2008-06-31).  \"The A-Z of Programming Languages: JavaScript\" . computerworld.com.au.   \u00a0    Check date values in:  |date=  ( help )   \n    ^     Peter-Paul Koch,  Object detection   \n    ^     Peter-Paul Koch,  Mission Impossible - mouse position   \n    ^     Peter-Paul Koch,  Browser detect   \n  ^     a         b         c        Flanagan &amp; Ferguson 2006 , pp.\u00a0262\u2013263.  \n    ^       \"Creating Accessible JavaScript\" . WebAIM . Retrieved 8 June 2010 .   \u00a0    \n    ^       \"Making JavaScript Safe for Advertising\" . ADsafe . Retrieved 2013-05-26 .   \u00a0    \n    ^       \"Secure ECMA Script (SES)\" . Code.google.com . Retrieved 2013-05-26 .   \u00a0    \n    ^     MozillaZine,  Mozilla Cross-Site Scripting Vulnerability Reported and Fixed   \n    ^        Right-click \"protection\"? Forget about it  . 2008-06-17.  ISSN \u00a0 1797-1993  . Retrieved 2008-06-17 .   \u00a0    \n    ^     Mozilla Corporation,  Buffer overflow in crypto.signText()   \n    ^     Paul Festa, CNet,  Buffer-overflow bug in IE   \n    ^     SecurityTracker.com,  Apple Safari JavaScript Buffer Overflow Lets Remote Users Execute Arbitrary Code and HTTP Redirect Bug Lets Remote Users Access Files   \n    ^     SecurityFocus,  Microsoft WebViewFolderIcon ActiveX Control Buffer Overflow Vulnerability   \n    ^     Fusion Authority,  Macromedia Flash ActiveX Buffer Overflow   \n    ^     Mike Friedman,  Protected Mode in Vista IE7   \n    ^     US CERT,  Vulnerability Note VU#713878: Microsoft Internet Explorer does not properly validate source of redirected frame   \n    ^     Mozilla Foundation,  Mozilla Foundation Security Advisory 2005-41: Privilege escalation via DOM property overrides   \n    ^     Microsoft Corporation,  Changes to Functionality in Microsoft Windows XP Service Pack 2: Part 5: Enhanced Browsing Security   \n    ^     For one example of a rare JavaScript Trojan Horse, see Symantec Corporation,  JS.Seeker.K   \n    ^       \"JavaScript for Acrobat\"  . Retrieved 2009-08-18 .   \u00a0    \n    ^      Re-Animator , in Launchpad  \n    ^       \"Unity Scripting\" . unity3d.com . Retrieved 2013-01-29 .   \u00a0    \n    ^       \"Technical Specification\" . dxstudio.com . Retrieved 2009-10-20 .   \u00a0    \n    ^     THINK! The Maxwell Render Resourcer Center,  Scripting References   \n    ^      Google Apps Script ,  Welcome to Google Apps Script   \n    ^       \"ChatZilla! Frequently Asked Questions - 4.5. How do I write scripts?\" .  Hacksrus.com  . Retrieved 11 February 2011 .   \u00a0    \n    ^       \"http://unborn.ludost.net/xcdscript/\"  . Retrieved 11 February 2011 .        "}, {"title": "XML", "rank": -0.011202371022417801, "url": "http://en.wikipedia.org/wiki/XML", "links": ["http://en.wikipedia.org/wiki/Filename_extension", "http://en.wikipedia.org/wiki/Internet_media_type", "http://en.wikipedia.org/wiki/Uniform_Type_Identifier", "http://en.wikipedia.org/wiki/World_Wide_Web_Consortium", "http://en.wikipedia.org/wiki/Markup_language", "http://en.wikipedia.org/wiki/Standard_Generalized_Markup_Language", "http://en.wikipedia.org/wiki/List_of_XML_markup_languages", "http://en.wikipedia.org/wiki/XHTML", "http://en.wikipedia.org/wiki/RSS", "http://en.wikipedia.org/wiki/Atom_(standard)"], "body": "  \n \n \n \n XML \n \n     \n \n \n  Filename extension  \n  .xml  \n \n \n  Internet media type  \n   application/xml    [ 1 ]    \n text/xml    [ 2 ]     \n \n \n  Uniform Type Identifier  \n public.xml \n \n \n UTI conforms to \n public.text \n \n \n Developed by \n  World Wide Web Consortium  \n \n \n Type of format \n  Markup language  \n \n \n Extended from \n  SGML  \n \n \n Extended to \n  Numerous , including: \n XHTML ,  RSS ,  Atom ,  KML  \n \n \n  Standard(s)  \n  1.0 (Fifth Edition)  November\u00a026, 2008 ; 5 years ago  \u00a0( 2008-11-26 )  \n 1.1 (Second Edition)  August\u00a016, 2006 ; 7 years ago  \u00a0( 2006-08-16 )  \n \n \n  Open format ? \n Yes \n \n \n \n  Extensible Markup Language (XML)  \n \n Current status \n Published \n \n \n Year started \n 1996 \n \n \n Editors \n Tim Bray, Jean Paoli, C. M. Sperberg-McQueen, Eve Maler, Fran\u00e7ois Yergeau, John Cowan \n \n \n Related standards \n  XML Schema  \n \n \n Domain \n  Data Serialization  \n \n \n Abbreviation \n XML \n \n \n Website \n  XML 1.0  \n \n \n \n \n \n  Extensible Markup Language  ( XML ) is a  markup language  that defines a set of rules for encoding documents in a  format  that is both  human-readable  and  machine-readable . It is defined in the XML 1.0 Specification   [ 3 ]    produced by the  W3C , and several other related specifications,   [ 4 ]    all free  open standards .   [ 5 ]    \n The design goals of XML emphasize simplicity, generality, and usability over the  Internet .   [ 6 ]    It is a textual data format with strong support via  Unicode  for the languages of the world. Although the design of XML focuses on documents, it is widely used for the representation of arbitrary  data structures    [ 7 ]   , for example in  web services . \n Many  application programming interfaces  (APIs) have been developed to aid software developers with processing XML data, and several  schema systems  exist to aid in the definition of XML-based languages. \n As of 2009  [update]  , hundreds of document formats using XML syntax have been developed,   [ 8 ]    including  RSS ,  Atom ,  SOAP , and  XHTML . XML-based formats have become the default for many office-productivity tools, including  Microsoft Office  ( Office Open XML ),  OpenOffice.org  and  LibreOffice  ( OpenDocument ), and  Apple 's  iWork . XML has also been employed as the base language for  communication protocols , such as  XMPP . \n  \n \n \n Contents \n \n \n   1   Key terminology   \n   2   Characters and escaping  \n \n   2.1   Valid characters   \n   2.2   Encoding detection   \n   2.3   Escaping   \n   2.4   Comments   \n   2.5   International use   \n \n \n   3   Well-formedness and error-handling   \n   4   Schemas and validation  \n \n   4.1   Document Type Definition   \n   4.2   XML Schema   \n   4.3   RELAX NG   \n   4.4   Schematron   \n   4.5   ISO DSDL and other schema languages   \n \n \n   5   Related specifications   \n   6   Use on the Internet   \n   7   Programming interfaces  \n \n   7.1   Simple API for XML   \n   7.2   Pull parsing   \n   7.3   Document Object Model   \n   7.4   Data binding   \n   7.5   XML as data type   \n \n \n   8   History  \n \n   8.1   Sources   \n   8.2   Versions   \n \n \n   9   Criticism   \n   10   See also   \n   11   Notes   \n   12   References   \n   13   Further reading   \n   14   External links   \n \n \n  \n  Key terminology   [  edit  ]   \n The material in this section is based on the XML Specification. This is not an exhaustive list of all the constructs that appear in XML; it provides an introduction to the key constructs most often encountered in day-to-day use. \n \n (Unicode) character \n By definition, an XML document is a string of characters. Almost every legal  Unicode  character may appear in an XML document. \n \n \n Processor and application \n The  processor  analyzes the markup and passes structured information to an  application . The specification places requirements on what an XML processor must do and not do, but the application is outside its scope. The processor (as the specification calls it) is often referred to colloquially as an  XML parser . \n \n \n Markup and content \n The characters making up an XML document are divided into  markup  and  content , which may be distinguished by the application of simple syntactic rules. Generally, strings that constitute markup either begin with the character  &lt;  and end with a  &gt; , or they begin with the character  &amp;  and end with a  ; . Strings of characters that are not markup are content. However, in a  CDATA  section, the delimiters  &lt;![CDATA[  and  ]]&gt;  are classified as markup, while the text between them is classified as content. In addition, whitespace before and after the outermost element is classified as markup. \n \n \n Tag \n A markup construct that begins with  &lt;  and ends with  &gt; . Tags come in three flavors:\n \n  start-tags ; for example:  &lt;section&gt;  \n  end-tags ; for example:  &lt;/section&gt;  \n  empty-element tags ; for example:  &lt;line-break\u00a0/&gt;  \n \n \n \n \n Element \n A logical document component which either begins with a start-tag and ends with a matching end-tag or consists only of an empty-element tag. The characters between the start- and end-tags, if any, are the element's  content , and may contain markup, including other elements, which are called  child elements . An example of an element is  &lt;Greeting&gt;Hello,\u00a0world.&lt;/Greeting&gt;  (see  hello world ). Another is  &lt;line-break\u00a0/&gt; . \n \n \n Attribute \n A markup construct consisting of a name/value pair that exists within a start-tag or empty-element tag. In the example (below) the element  img  has two attributes,  src  and  alt : \n \n \n \n \n  &lt;img   src = \"madonna.jpg\"   alt = 'Foligno Madonna, by Raphael'   /&gt;  \n  \n \nAnother example would be \n \n \n \n \n  &lt;step   number = \"3\"  &gt;  Connect A to B.  &lt;/step &gt;   \n  \n \nwhere the name of the attribute is \"number\" and the value is \"3\". \n \n An XML attribute can only have a single value and each attribute can appear at most once on each element. In the common situation where a list of multiple values is desired, this must be done by encoding the list into a well-formed XML attribute   [ note 1 ]    with some format beyond what XML defines itself. Usually this is either a comma or semi-colon delimited list or, if the individual values are known not to contain spaces,   [ note 2 ]    a space-delimited list can be used. \n \n \n \n \n \n  &lt;div   class = \"inner greeting-box\"   &gt;  Hello!  &lt;/div &gt;   \n  \n \nwhere the attribute \"class\" has both the value \"inner greeting-box\", indicating the  CSS  class names \"inner\" and \"greeting-box\". \n \n \n  XML  declaration \n XML documents may begin by declaring some information about themselves, as in the following example: \n \n \n \n \n  &lt;?xml   version = \"1.0\"   encoding = \"UTF-8\"  ?&gt;  \n  \n \n \n \n  Characters and escaping   [  edit  ]   \n XML documents consist entirely of characters from the  Unicode  repertoire. Except for a small number of specifically excluded  control characters , any character defined by Unicode may appear within the content of an XML document. \n XML includes facilities for identifying the  encoding  of the Unicode characters that make up the document, and for expressing characters that, for one reason or another, cannot be used directly. \n  Valid characters   [  edit  ]   \n Main article:  Valid characters in XML  \n Unicode code points in the following ranges are valid in XML 1.0 documents:   [ 9 ]    \n \n U+0009, U+000A, U+000D: these are the only  C0  controls accepted in XML 1.0; \n U+0020\u2013U+D7FF, U+E000\u2013U+FFFD: this excludes  some  (not all) non-characters in the  BMP  (all surrogates, U+FFFE and U+FFFF are forbidden); \n U+10000\u2013U+10FFFF: this includes  all  code points in supplementary planes, including non-characters. \n \n XML 1.1   [ 10 ]    extends the set of allowed characters to include all the above, plus the remaining characters in the range U+0001\u2013U+001F. At the same time, however, it restricts the use of C0 and  C1  control characters other than U+0009, U+000A, U+000D, and U+0085 by requiring them to be written in escaped form (for example U+0001 must be written as &amp;#x01; or its equivalent). In the case of C1 characters, this restriction is a backwards incompatibility; it was introduced to allow common encoding errors to be detected. \n The code point  U+0000  is the only character that is not permitted in any XML 1.0 or 1.1 document. \n  Encoding detection   [  edit  ]   \n The Unicode character set can be encoded into bytes for storage or transmission in a variety of different ways, called \"encodings\". Unicode itself defines encodings that cover the entire repertoire; well-known ones include  UTF-8  and  UTF-16 .   [ 11 ]    There are many other text encodings that predate Unicode, such as  ASCII  and  ISO/IEC 8859 ; their character repertoires in almost every case are subsets of the Unicode character set. \n XML allows the use of any of the Unicode-defined encodings, and any other encodings whose characters also appear in Unicode. XML also provides a mechanism whereby an XML processor can reliably, without any prior knowledge, determine which encoding is being used.   [ 12 ]    Encodings other than UTF-8 and UTF-16 will not necessarily be recognized by every XML parser. \n  Escaping   [  edit  ]   \n XML provides   escape   facilities for including characters which are problematic to include directly. For example: \n \n The characters \"&lt;\" and \"&amp;\" are key syntax markers and may  never  appear in content outside a  CDATA  section.   [ 13 ]    \n Some character encodings support only a subset of Unicode. For example, it is legal to encode an XML document in ASCII, but ASCII lacks code points for Unicode characters such as \"\u00e9\". \n It might not be possible to type the character on the author's machine. \n Some characters have  glyphs  that cannot be visually distinguished from other characters: examples are\n \n  non-breaking space  ( &amp;#xa0; ) \"\u00a0\"\n \n compare space ( &amp;#x20; ) \" \" \n \n \n  Cyrillic Capital Letter A  ( &amp;#x410; ) \"\u0410\"\n \n compare  Latin Capital Letter A  ( &amp;#x41; ) \"A\" \n \n \n \n \n \n There are five  predefined entities : \n \n  &amp;lt;  represents \"&lt;\" \n  &amp;gt;  represents \"&gt;\" \n  &amp;amp;  represents \"&amp;\" \n  &amp;apos;  represents ' \n  &amp;quot;  represents \" \n \n All permitted Unicode characters may be represented with a   numeric character reference  . Consider the Chinese character \"\u4e2d\", whose numeric code in Unicode is hexadecimal 4E2D, or decimal 20,013. A user whose keyboard offers no method for entering this character could still insert it in an XML document encoded either as  &amp;#20013;  or  &amp;#x4e2d; . Similarly, the string \" I &lt;3 J\u00f6rg \" could be encoded for inclusion in an XML document as \" I &amp;lt;3 J&amp;#xF6;rg \". \n \" &amp;#0; \" is not permitted, however, because the  null character  is one of the control characters excluded from XML, even when using a numeric character reference.   [ 14 ]    An alternative encoding mechanism such as  Base64  is needed to represent such characters. \n  Comments   [  edit  ]   \n Comments may appear anywhere in a document outside other markup. Comments cannot appear before the XML declaration. Comments start with \" &lt;!-- \" and end with \" --&gt; \". The string \" -- \" (double-hyphen) is not allowed inside comments; this means comments cannot be nested. The ampersand has no special significance within comments, so entity and character references are not recognized as such, and there is no way to represent characters outside the character set of the document encoding. \n An example of a valid comment: \" &lt;!-- no need to escape &lt;code&gt; &amp; such in comments --&gt; \" \n  International use   [  edit  ]   \n \n \n   \n  This example contains  Chinese  text.  Without proper  rendering support , you may see  question marks, boxes, or other symbols  instead of  Chinese characters . \n \n \n \n \n   \n  This example contains  Cyrillic text .  Without proper  rendering support , you may see  question marks or boxes , misplaced vowels or missing conjuncts instead of Cyrillic letters. \n \n \n XML 1.0 (Fifth Edition) and XML 1.1 support the direct use of almost any  Unicode  character in element names, attributes, comments, character data, and processing instructions (other than the ones that have special symbolic meaning in XML itself, such as the less-than sign, \"&lt;\"). The following is a well-formed XML document including both  Chinese  and  Cyrillic  characters: \n \n \n \n  &lt;?xml   version = \"1.0\"   encoding = \"UTF-8\"  ?&gt;  \n &lt;\u4fc4\u8bed &gt;  \u0434\u0430\u043d\u043d\u044b\u0435 &lt;/\u4fc4\u8bed &gt;  \n  \n \n  Well-formedness and error-handling   [  edit  ]   \n Main article:  Well-formed document  \n The XML specification defines an XML document as a  well-formed  text \u2013 meaning that it satisfies a list of syntax rules provided in the specification. Some key points in the fairly lengthy list include: \n \n The document contains only properly encoded legal Unicode characters \n None of the special syntax characters such as  &lt;  and  &amp;  appear except when performing their markup-delineation roles \n The begin, end, and empty-element tags that delimit the elements are correctly nested, with none missing and none overlapping \n The element tags are case-sensitive; the beginning and end tags must match exactly. Tag names cannot contain any of the characters  !\"#$%&amp;'()*+,/;&lt;=&gt;?@[\\]^`{|}~ , nor a space character, and cannot start with  - ,  . , or a numeric digit. \n A single \"root\" element contains all the other elements \n \n The definition of an  XML document  excludes texts that contain violations of well-formedness rules; they are simply not XML. An XML processor that encounters such a violation is required to report such errors and to cease normal processing. This policy, occasionally referred to as  draconian , stands in notable contrast to the behavior of programs that process  HTML , which are designed to produce a reasonable result even in the presence of severe markup errors.   [ 15 ]    XML's policy in this area has been criticized as a violation of  Postel's law  (\"Be conservative in what you send; be liberal in what you accept\").   [ 16 ]    \n The XML specification defines a  valid XML document  as a  well-formed XML document  which also conforms to the rules of a  Document Type Definition  (DTD). By extension, the term can also refer to documents that conform to rules in other schema languages, such as  XML Schema  (XSD). This term should not be confused with a   well-formed XML document  , which is defined as an XML document that has correct XML syntax according to W3C standards. \n  Schemas and validation   [  edit  ]   \n In addition to being well-formed, an XML document may be  valid . This means that it contains a reference to a  Document Type Definition  (DTD), and that its elements and attributes are declared in that DTD and follow the grammatical rules for them that the DTD specifies. \n XML processors are classified as  validating  or  non-validating  depending on whether or not they check XML documents for validity. A processor that discovers a validity error must be able to report it, but may continue normal processing. \n A DTD is an example of a   schema   or  grammar . Since the initial publication of XML 1.0, there has been substantial work in the area of schema languages for XML. Such schema languages typically constrain the set of elements that may be used in a document, which attributes may be applied to them, the order in which they may appear, and the allowable parent/child relationships. \n  Document Type Definition   [  edit  ]   \n Main article:  Document Type Definition  \n The oldest schema language for XML is the  Document Type Definition  (DTD), inherited from  SGML . \n DTDs have the following benefits: \n \n DTD support is ubiquitous due to its inclusion in the XML 1.0 standard. \n DTDs are terse compared to element-based schema languages and consequently present more information in a single screen. \n DTDs allow the declaration of  standard public entity sets  for publishing characters. \n DTDs define a  document type  rather than the types used by a namespace, thus grouping all constraints for a document in a single collection. \n \n DTDs have the following limitations: \n \n They have no explicit support for newer  features  of XML, most importantly  namespaces . \n They lack expressiveness. XML DTDs are simpler than SGML DTDs and there are certain structures that cannot be expressed with regular grammars. DTDs only support rudimentary datatypes. \n They lack readability. DTD designers typically make heavy use of parameter entities (which behave essentially as textual  macros ), which make it easier to define complex grammars, but at the expense of clarity. \n They use a syntax based on  regular expression  syntax, inherited from  SGML , to describe the schema. Typical XML APIs such as  SAX  do not attempt to offer applications a structured representation of the syntax, so it is less accessible to programmers than an element-based syntax may be. \n \n Two peculiar features that distinguish DTDs from other schema types are the syntactic support for embedding a DTD within XML documents and for defining  entities , which are arbitrary fragments of text and/or markup that the XML processor inserts in the DTD itself and in the XML document wherever they are referenced, like character escapes. \n DTD technology is still used in many applications because of its ubiquity. \n  XML Schema   [  edit  ]   \n Main article:  XML Schema (W3C)  \n A newer schema language, described by the W3C as the successor of DTDs, is  XML Schema , often referred to by the  initialism  for XML Schema instances, XSD (XML Schema Definition). XSDs are far more powerful than DTDs in describing XML languages. They use a rich  datatyping  system and allow for more detailed constraints on an XML document's logical structure. XSDs also use an XML-based format, which makes it possible to use ordinary XML tools to help process them. \n xs:schema element that defines a schema: \n \n \n \n  &lt;?xml   version = \"1.0\"   encoding = \"ISO-8859-1\"   ?&gt;  \n  &lt;xs:schema   xmlns:xs = \"http://www.w3.org/2001/XMLSchema\"  &gt;  \n  &lt;/xs:schema &gt;   \n  \n \n  RELAX NG   [  edit  ]   \n  RELAX NG  was initially specified by  OASIS  and is now also an ISO/IEC International Standard (as part of  DSDL ). RELAX NG schemas may be written in either an XML based syntax or a more compact non-XML syntax; the two syntaxes are  isomorphic  and  James Clark 's conversion tool - ' Trang ', can convert between them without loss of information. RELAX NG has a simpler definition and validation framework than XML Schema, making it easier to use and implement. It also has the ability to use  datatype  framework  plug-ins ; a RELAX NG schema author, for example, can require values in an XML document to conform to definitions in XML Schema Datatypes. \n  Schematron   [  edit  ]   \n  Schematron  is a language for making  assertions  about the presence or absence of patterns in an XML document. It typically uses  XPath  expressions. \n  ISO DSDL and other schema languages   [  edit  ]   \n The ISO  DSDL  (Document Schema Description Languages) standard brings together a comprehensive set of small schema languages, each targeted at specific problems. DSDL includes  RELAX NG  full and compact syntax,  Schematron  assertion language, and languages for defining datatypes, character repertoire constraints, renaming and entity expansion, and namespace-based  routing  of document fragments to different validators. DSDL schema languages do not have the vendor support of XML Schemas yet, and are to some extent a grassroots reaction of industrial publishers to the lack of utility of XML Schemas for  publishing . \n Some schema languages not only describe the structure of a particular XML format but also offer limited facilities to influence processing of individual XML files that conform to this format. DTDs and XSDs both have this ability; they can for instance provide the  infoset  augmentation facility and attribute defaults. RELAX NG and Schematron intentionally do not provide these. \n  Related specifications   [  edit  ]   \n A cluster of specifications closely related to XML have been developed, starting soon after the initial publication of XML 1.0. It is frequently the case that the term \"XML\" is used to refer to XML together with one or more of these other technologies which have come to be seen as part of the XML core. \n \n  XML Namespaces  enable the same document to contain XML elements and attributes taken from different vocabularies, without any  naming collisions  occurring. Although XML Namespaces are not part of the XML specification itself, virtually all XML software also supports XML Namespaces. \n  XML Base  defines the  xml:base  attribute, which may be used to set the base for resolution of relative URI references within the scope of a single XML element. \n The  XML Information Set  or  XML infoset  describes an abstract data model for XML documents in terms of  information items . The infoset is commonly used in the specifications of XML languages, for convenience in describing constraints on the XML constructs those languages allow. \n xml:id Version 1.0 asserts that an attribute named  xml:id  functions as an \"ID attribute\" in the sense used in a DTD. \n  XPath  defines a syntax named  XPath expressions  which identifies one or more of the internal components (elements, attributes, and so on) included in an XML document. XPath is widely used in other core-XML specifications and in programming libraries for accessing XML-encoded data. \n  XSLT  is a language with an XML-based syntax that is used to transform XML documents into other XML documents, HTML, or other, unstructured formats such as plain text or RTF. XSLT is very tightly coupled with XPath, which it uses to address components of the input XML document, mainly elements and attributes. \n  XSL Formatting Objects , or XSL-FO, is a markup language for XML document formatting which is most often used to generate  PDFs . \n  XQuery  is an XML-oriented query language strongly rooted in XPath and XML Schema. It provides methods to access, manipulate and return XML, and is mainly conceived as a query language for  XML databases . \n  XML Signature  defines syntax and processing rules for creating  digital signatures  on XML content. \n  XML Encryption  defines syntax and processing rules for  encrypting  XML content. \n \n Some other specifications conceived as part of the \"XML Core\" have failed to find wide adoption, including  XInclude ,  XLink , and  XPointer . \n  Use on the Internet   [  edit  ]   \n XML has come into common use for the interchange of data over the Internet.  RFC 3023  gives rules for the construction of  Internet Media Types  for use when sending XML. It also defines the media types  application/xml  and  text/xml , which say only that the data are in XML, and nothing about its  semantics . The use of  text/xml  has been criticized as a potential source of encoding problems and it has been suggested that it should be deprecated.   [ 17 ]    \n  RFC 3023  also recommends that XML-based languages be given media types ending in  +xml ; for example  image/svg+xml  for  SVG . \n Further guidelines for the use of XML in a networked context may be found in  RFC 3470 , also known as IETF BCP 70; this document is very wide-ranging and covers many aspects of designing and deploying an XML-based language. \n  Programming interfaces   [  edit  ]   \n The design goals of XML include, \"It shall be easy to write programs which process XML documents.\"   [ 6 ]    Despite this, the XML specification contains almost no information about how programmers might go about doing such processing. The  XML Infoset  specification provides a vocabulary to refer to the constructs within an XML document, but also does not provide any guidance on how to access this information. A variety of  APIs  for accessing XML have been developed and used, and some have been standardized. \n Existing APIs for XML processing tend to fall into these categories: \n \n Stream-oriented APIs accessible from a programming language, for example  SAX  and  StAX . \n Tree-traversal APIs accessible from a programming language, for example  DOM . \n  XML data binding , which provides an automated translation between an XML document and programming-language objects. \n Declarative transformation languages such as  XSLT  and  XQuery . \n \n Stream-oriented facilities require less memory and, for certain tasks which are based on a linear traversal of an XML document, are faster and simpler than other alternatives. Tree-traversal and data-binding APIs typically require the use of much more memory, but are often found more convenient for use by programmers; some include declarative retrieval of document components via the use of XPath expressions. \n XSLT is designed for declarative description of XML document transformations, and has been widely implemented both in server-side packages and Web browsers. XQuery overlaps XSLT in its functionality, but is designed more for searching of large  XML databases . \n  Simple API for XML   [  edit  ]   \n  Simple API for XML  (SAX) is a  lexical ,  event-driven  interface in which a document is read serially and its contents are reported as  callbacks  to various  methods  on a  handler object  of the user's design. SAX is fast and efficient to implement, but difficult to use for extracting information at random from the XML, since it tends to burden the application author with keeping track of what part of the document is being processed. It is better suited to situations in which certain types of information are always handled the same way, no matter where they occur in the document. \n  Pull parsing   [  edit  ]   \n Pull parsing   [ 18 ]    treats the document as a series of items which are read in sequence using the  Iterator design pattern . This allows for writing of  recursive-descent parsers  in which the structure of the code performing the parsing mirrors the structure of the XML being parsed, and intermediate parsed results can be used and accessed as local variables within the methods performing the parsing, or passed down (as method parameters) into lower-level methods, or returned (as method return values) to higher-level methods. Examples of pull parsers include  StAX  in the  Java  programming language, XMLReader in  PHP , ElementTree.iterparse in  Python , System.Xml.XmlReader in the  .NET Framework , and the DOM traversal API (NodeIterator and TreeWalker). \n A pull parser creates an iterator that sequentially visits the various elements, attributes, and data in an XML document. Code which uses this iterator can test the current item (to tell, for example, whether it is a start or end element, or text), and inspect its attributes (local name,  namespace , values of XML attributes, value of text, etc.), and can also move the iterator to the next item. The code can thus extract information from the document as it traverses it. The recursive-descent approach tends to lend itself to keeping data as typed local variables in the code doing the parsing, while SAX, for instance, typically requires a parser to manually maintain intermediate data within a stack of elements which are parent elements of the element being parsed. Pull-parsing code can be more straightforward to understand and maintain than SAX parsing code. \n  Document Object Model   [  edit  ]   \n The  Document Object Model  (DOM) is an  interface -oriented  application programming interface  that allows for navigation of the entire document as if it were a tree of  node   objects  representing the document's contents. A DOM document can be created by a parser, or can be generated manually by users (with limitations). Data types in DOM nodes are abstract; implementations provide their own programming language-specific  bindings . DOM implementations tend to be  memory  intensive, as they generally require the entire document to be loaded into memory and constructed as a tree of objects before access is allowed. \n  Data binding   [  edit  ]   \n Another form of XML processing API is  XML data binding , where XML data are made available as a hierarchy of custom, strongly typed classes, in contrast to the generic objects created by a  Document Object Model  parser. This approach simplifies code development, and in many cases allows problems to be identified at compile time rather than run-time. Example data binding systems include the  Java Architecture for XML Binding  (JAXB) and XML Serialization in .NET.   [ 19 ]    \n  XML as data type   [  edit  ]   \n XML has appeared as a  first-class data type  in other languages. The  ECMAScript for XML  (E4X) extension to the  ECMAScript /JavaScript language explicitly defines two specific objects (XML and XMLList) for JavaScript, which support XML document nodes and XML node lists as distinct objects and use a dot-notation specifying parent-child relationships.   [ 20 ]    E4X is supported by the  Mozilla  2.5+ browsers (though now deprecated) and Adobe  Actionscript , but has not been adopted more universally. Similar notations are used in Microsoft's  LINQ  implementation for Microsoft .NET 3.5 and above, and in  Scala  (which uses the Java VM). The open-source xmlsh application, which provides a Linux-like shell with special features for XML manipulation, similarly treats XML as a data type, using the &lt;[ ]&gt; notation.   [ 21 ]    The  Resource Description Framework  defines a data type  rdf:XMLLiteral  to hold wrapped,  canonical XML .   [ 22 ]    \n  History   [  edit  ]   \n XML is an application profile of  SGML  (ISO 8879).   [ 23 ]    \n The versatility of  SGML  for dynamic information display was understood by early digital media publishers in the late 1980s prior to the rise of the Internet.   [ 24 ]      [ 25 ]    By the mid-1990s some practitioners of SGML had gained experience with the then-new  World Wide Web , and believed that SGML offered solutions to some of the problems the Web was likely to face as it grew.  Dan Connolly  added SGML to the list of W3C's activities when he joined the staff in 1995; work began in mid-1996 when Sun Microsystems engineer  Jon Bosak  developed a charter and recruited collaborators. Bosak was well connected in the small community of people who had experience both in SGML and the Web.   [ 26 ]    \n XML was compiled by a  working group  of eleven members,   [ 27 ]    supported by a (roughly) 150-member Interest Group. Technical debate took place on the Interest Group mailing list and issues were resolved by consensus or, when that failed, majority vote of the Working Group. A record of design decisions and their rationales was compiled by  Michael Sperberg-McQueen  on December 4, 1997.   [ 28 ]     James Clark  served as Technical Lead of the Working Group, notably contributing the empty-element \"&lt;empty\u00a0/&gt;\" syntax and the name \"XML\". Other names that had been put forward for consideration included \"MAGMA\" (Minimal Architecture for Generalized Markup Applications), \"SLIM\" (Structured Language for Internet Markup) and \"MGML\" (Minimal Generalized Markup Language). The co-editors of the specification were originally  Tim Bray  and  Michael Sperberg-McQueen . Halfway through the project Bray accepted a consulting engagement with  Netscape , provoking vociferous protests from Microsoft. Bray was temporarily asked to resign the editorship. This led to intense dispute in the Working Group, eventually solved by the appointment of Microsoft's  Jean Paoli  as a third co-editor. \n The XML Working Group never met face-to-face; the design was accomplished using a combination of email and weekly teleconferences. The major design decisions were reached in a short burst of intense work between August and November 1996,   [ 29 ]    when the first Working Draft of an XML specification was published.   [ 30 ]    Further design work continued through 1997, and XML 1.0 became a  W3C  Recommendation on February 10, 1998. \n  Sources   [  edit  ]   \n XML is a profile of an ISO standard  SGML , and most of XML comes from SGML unchanged. From SGML comes the separation of logical and physical structures (elements and entities), the availability of grammar-based validation (DTDs), the separation of data and metadata (elements and attributes), mixed content, the separation of processing from representation ( processing instructions ), and the default angle-bracket syntax. Removed were the SGML declaration (XML has a fixed delimiter set and adopts  Unicode  as the document  character set ). \n Other sources of technology for XML were the  Text Encoding Initiative  (TEI), which defined a profile of SGML for use as a \"transfer syntax\"; and  HTML , in which elements were synchronous with their resource, document character sets were separate from resource encoding, the xml:lang attribute was invented, and (like  HTTP ) metadata accompanied the resource rather than being needed at the declaration of a link. The Extended Reference Concrete Syntax (ERCS) project of the SPREAD (Standardization Project Regarding East Asian Documents) project of the ISO-related China/Japan/Korea Document Processing expert group was the basis of XML 1.0's naming rules; SPREAD also introduced hexadecimal numeric character references and the concept of references to make available all Unicode characters. To support ERCS, XML and HTML better, the SGML standard IS 8879 was revised in 1996 and 1998 with WebSGML Adaptations. The XML header followed that of ISO  HyTime . \n Ideas that developed during discussion which were novel in XML included the algorithm for encoding detection and the encoding header, the processing instruction target, the xml:space attribute, and the new close delimiter for empty-element tags. The notion of well-formedness as opposed to validity (which enables parsing without a schema) was first formalized in XML, although it had been implemented successfully in the Electronic Book Technology \"Dynatext\" software;   [ 31 ]    the software from the University of Waterloo New Oxford English Dictionary Project; the RISP LISP SGML text processor at Uniscope, Tokyo; the US Army Missile Command IADS hypertext system; Mentor Graphics Context; Interleaf and Xerox Publishing System. \n  Versions   [  edit  ]   \n There are two current versions of XML. The first ( XML 1.0 ) was initially defined in 1998. It has undergone minor revisions since then, without being given a new version number, and is currently in its fifth edition, as published on November 26, 2008. It is widely implemented and still recommended for general use. \n The second ( XML 1.1 ) was initially published on February 4, 2004, the same day as XML 1.0 Third Edition,   [ 32 ]    and is currently in its second edition, as published on August 16, 2006. It contains features (some contentious) that are intended to make XML easier to use in certain cases.   [ 33 ]    The main changes are to enable the use of line-ending characters used on  EBCDIC  platforms, and the use of scripts and characters absent from Unicode 3.2. XML 1.1 is not very widely implemented and is recommended for use only by those who need its unique features.   [ 34 ]    \n Prior to its fifth edition release, XML 1.0 differed from XML 1.1 in having stricter requirements for characters available for use in element and attribute names and unique identifiers: in the first four editions of XML 1.0 the characters were exclusively enumerated using a specific version of the  Unicode  standard (Unicode 2.0 to Unicode 3.2.) The fifth edition substitutes the mechanism of XML 1.1, which is more future-proof but reduces  redundancy . The approach taken in the fifth edition of XML 1.0 and in all editions of XML 1.1 is that only certain characters are forbidden in names, and everything else is allowed, in order to accommodate the use of suitable name characters in future versions of Unicode. In the fifth edition, XML names may contain characters in the  Balinese ,  Cham , or  Phoenician  scripts among many others which have been added to Unicode since Unicode 3.2.   [ 33 ]    \n Almost any Unicode code point can be used in the character data and attribute values of an XML 1.0 or 1.1 document, even if the character corresponding to the code point is not defined in the current version of Unicode. In character data and attribute values, XML 1.1 allows the use of more  control characters  than XML 1.0, but, for \"robustness\", most of the control characters introduced in XML 1.1 must be expressed as numeric character references (and #x7F through #x9F, which had been allowed in XML 1.0, are in XML 1.1 even required to be expressed as numeric character references   [ 35 ]   ). Among the supported control characters in XML 1.1 are two line break codes that must be treated as whitespace. Whitespace characters are the only control codes that can be written directly. \n There has been discussion of an XML 2.0, although no organization has announced plans for work on such a project. XML-SW (SW for  skunkworks ), written by one of the original developers of XML,   [ 36 ]    contains some proposals for what an XML 2.0 might look like: elimination of DTDs from syntax, integration of  namespaces ,  XML Base  and  XML Information Set  ( infoset ) into the base standard. \n The World Wide Web Consortium also has an XML Binary Characterization Working Group doing preliminary research into use cases and properties for a binary encoding of the XML infoset. The working group is not chartered to produce any official standards. Since XML is by definition text-based, ITU-T and ISO are using the name   Fast Infoset   for their own binary infoset to avoid confusion (see ITU-T Rec. X.891 | ISO/IEC 24824-1). \n  Criticism   [  edit  ]   \n XML and its extensions have regularly been criticized for verbosity and complexity.   [ 37 ]    Mapping the basic tree model of XML to  type systems  of programming languages or databases can be difficult, especially when XML is used for exchanging highly structured data between applications, which was not its primary design goal. Other criticisms attempt to refute the claim that XML is a  self-describing  language   [ 38 ]    (though the XML specification itself makes no such claim).  JSON ,  YAML , and  S-Expressions  are frequently proposed as alternatives (see  Comparison of data serialization formats );   [ 39 ]    which focus on representing highly structured data rather than documents, which may contain both highly structured and relatively unstructured content. \n  See also   [  edit  ]   \n \n  List of XML markup languages  \n  List of XML schemas  \n  Comparison of layout engines (XML)  \n  Binary XML  \n  EBML  \n  WBXML  \n  Category:XML  \n  Category:XML-based standards  \n  Billion laughs  (a denial-of-service attack on XML parsers) \n  XML Protocol  \n  Comparison of data serialization formats  \n \n  Notes   [  edit  ]   \n \n \n    ^     i.e., embedded quote characters would be a problem  \n    ^     A common example of this would be for  CSS  class or identifier names.  \n \n \n  References   [  edit  ]   \n \n \n    ^       \"XML Media Types, RFC 3023\" . Internet Engineering Task Force. January 2001. pp.\u00a09\u201311 . Retrieved 2010-01-04 .   \u00a0    \n    ^       \"XML Media Types, RFC 3023\" . Internet Engineering Task Force. January 2001. pp.\u00a07\u20139 . Retrieved 2010-01-04 .   \u00a0    \n    ^       \"XML 1.0 Specification\" . World Wide Web Consortium . Retrieved 2010-08-22 .   \u00a0    \n    ^       \"XML and Semantic Web W3C Standards Timeline\"  (PDF). 2012-02-04.   \u00a0    \n    ^       \"W3C DOCUMENT LICENSE\" .   \u00a0    \n  ^     a         b         \"XML 1.0 Origin and Goals\"  . Retrieved July 2009 .   \u00a0    \n    ^      Fennell, Philip (June 2013).  \"Extremes of XML\" .  XML London 2013 : 80\u201386.  doi : 10.14337/XMLLondon13.Fennell01 .  ISBN \u00a0 978-0-9926471-0-0 .   \u00a0    Cite uses deprecated parameters ( help )   \n    ^       \"XML Applications and Initiatives\" .   \u00a0    \n    ^       \"Extensible Markup Language (XML) 1.0 (Fifth Edition)\" . World Wide Web Consortium. 2008-11-26 . Retrieved 2012-11-23 .   \u00a0    \n    ^       \"Extensible Markup Language (XML) 1.1 (Second Edition)\" . World Wide Web Consortium . Retrieved 2010-08-22 .   \u00a0    \n    ^       \"Characters vs. Bytes\" .   \u00a0    \n    ^       \"Autodetection of Character Encodings\" .   \u00a0    \n    ^     It is allowed, but not recommended, to use \"&lt;\" in XML entity values:  Extensible Markup Language (XML) 1.0 (Fifth Edition): EntityValue definition   \n    ^       \"W3C I18N FAQ: HTML, XHTML, XML and Control Codes\" .   \u00a0    \n    ^      Pilgrim, Mark (2004).  \"The history of draconian error handling in XML\"  . Retrieved 18 July 2013 .   \u00a0    \n    ^       \"There are no exceptions to Postel\u2019s Law [dive into mark]\" . Web.archive.org. Archived from  the original  on 2011-05-14 . Retrieved 2013-04-22 .   \u00a0    \n    ^      M. Murata, D. Kohn, and C. Lilley (2009-09-24).  \"Internet Drafts: XML Media Types\" . Internet Engineering Task Force . Retrieved 2012-02-29 .   \u00a0    \n    ^      Push, Pull, Next!  by Bob DuCharme, at XML.com  \n    ^       \"XML Serialization in the .NET Framework\" . Msdn.microsoft.com . Retrieved 2009-07-31 .   \u00a0    \n    ^       \"Processing XML with E4X\" .  Mozilla Developer Center . Mozilla Foundation.   \u00a0    \n    ^       \"XML Shell: Core Syntax\" . xmlsh. 2010-05-13 . Retrieved 2010-08-22 .   \u00a0    \n    ^       \"Resource Description Framework (RDF): Concepts and Abstract Syntax\" . W3.org . Retrieved 2010-08-22 .   \u00a0    \n    ^       ISO/IEC 19757-3 .  ISO / IEC . 1 June 2006. p.\u00a0vi   \u00a0    \n    ^      Bray, Tim (February 2005).  \"A conversation with Tim Bray: Searching for ways to tame the world's vast stores of information\" . Association for Computing Machinery's \"Queue site\" . Retrieved April 16, 2006 .   \u00a0    Cite uses deprecated parameters ( help )   \n    ^      edited by Sueann Ambron and Kristina Hooper\u00a0; foreword by John Sculley. (1988). \"Publishers, multimedia, and interactivity\".  Interactive multimedia . Cobb Group.  ISBN \u00a0 1-55615-124-1 .   \u00a0    \n    ^      Eliot Kimber (2006).  \"XML is 10\" .   \u00a0    \n    ^     The working group was originally called the \"Editorial Review Board.\" The original members and seven who were added before the first edition was complete, are listed at the end of the first edition of the XML Recommendation, at  http://www.w3.org/TR/1998/REC-xml-19980210 .  \n    ^       \"Reports From the W3C SGML ERB to the SGML WG And from the W3C XML ERB to the XML SIG\" . W3.org . Retrieved 2009-07-31 .   \u00a0    \n    ^     Jon Bosak:  The Birth of XML   \n    ^       \"Extensible Markup Language (XML)\" . W3.org. 1996-11-14 . Retrieved 2009-07-31 .   \u00a0    \n    ^      Jon Bosak, Sun Microsystems (2006-12-07).  \"Closing Keynote, XML 2006\" . 2006.xmlconference.org . Retrieved 2009-07-31 .   \u00a0    \n    ^       \"Extensible Markup Language (XML) 1.0 (Third Edition)\" . W3.org . Retrieved 2010-08-22 .   \u00a0    \n  ^     a         b         \"Extensible Markup Language (XML) 1.1 (Second Edition)\u00a0\u2013 Rationale and list of changes for XML 1.1\" . W3C . Retrieved 2012-01-20 .   \u00a0    \n    ^      Harold, Elliotte Rusty (2004).   Effective XML  . Addison-Wesley. pp.\u00a010\u201319.  ISBN \u00a0 0-321-15040-6 .   \u00a0    \n    ^       \"Extensible Markup Language (XML) 1.1 (Second Edition)\" . W3.org . Retrieved 2010-08-22 .   \u00a0    \n    ^     Tim Bray:   Extensible Markup Language - SW (XML-SW) .  2002-02-10  \n    ^     Jeff Atwood (2009):  XML: The Angle Bracket Tax   \n    ^       \"The Myth of Self-Describing XML\"  (PDF). 2003-09.   \u00a0    Check date values in:  |date=  ( help )   \n    ^     Stackoverflow:  What usable alternatives to XML syntax do you know?   \n \n \n  Further reading   [  edit  ]   \n \n Annex A of ISO 8879:1986 (SGML) \n  Lawrence A. Cunningham (2005). \"Language, Deals and Standards: The Future of XML Contracts\".  Washington University Law Review .  SSRN \u00a0 900616 .   \u00a0   \n  Bosak, Jon; Tim Bray (May 1999). \"XML and the Second-Generation Web\".  Scientific American .   \u00a0    Cite uses deprecated parameters ( help )  Online at  XML and the Second-Generation Web . \n  Kelly, Sean (February 6, 2006).  \"Making Mistakes with XML\" .  Developer.com  . Retrieved 2010-10-26 .   \u00a0   \n  St. Laurent, Simon (February 12, 2003).  \"Five years later, XML..\" .  O'Reilly XML Blog .  O'Reilly Media  . Retrieved 2010-10-26 .   \u00a0   \n   \"W3C XML is Ten!\" .  World Wide Web Consortium . 12 February 2008 . Retrieved 2010-10-26 .   \u00a0   \n   \"Introduction to XML\" .  Course Slides .  Pierre Geneves . October 2012.   \u00a0   \n \n  External links   [  edit  ]   \n \n \n   \n Wikimedia Commons has media related to    XML   . \n \n \n \n \n   \n Wikibooks has a book on the topic of:    Subject:XML    \n \n \n \n  W3C XML homepage  \n  XML 1.0 Specification  \n  Retrospective on Extended Reference Concrete Syntax  by  Rick Jelliffe  \n   XML, Java and the Future of the Web   (1997) by  Jon Bosak  \n  http://validator.w3.org/  The Official [W3C] Markup Validation Service \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  World Wide Web Consortium  \n \n \n \n  \n \n \n Products and \nstandards \n \n  \n \n \n \n  Recommendations  \n \n \n \n \n  Canonical XML  \n  CDF  \n  CSS  \n  DOM  \n  Geolocation API  \n  HTML  \n  ITS  \n  MathML  \n  OWL  \n  P3P  \n  PLS  \n  RDF  \n  RDF Schema  \n  SISR  \n  SKOS  \n  SMIL  \n  SOAP  \n  SRGS  \n  SSML  \n  SVG  \n  SPARQL  \n  Timed Text  \n  VoiceXML  \n  WSDL  \n  XForms  \n  XHTML  \n  XHTML+RDFa  \n  XInclude  \n  XLink  \n  XML  \n  XML Base  \n  XML Encryption  \n  XML Events  \n  XML Information Set  \n  XML namespace  \n  XML Schema  \n  XML Signature  \n  XOP  \n  XPath   1.0 ,  2.0  \n  XPointer  \n  XProc  \n  XQuery  \n  XSL  \n  XSL-FO  \n  XSLT   ( elements )  \n \n \n \n \n \n  \n \n \n \n Notes \n \n \n \n \n  XAdES  \n  XHTML+SMIL  \n  XUP  \n \n \n \n \n \n  \n \n \n \n Working drafts \n \n \n \n \n  CCXML  \n  CURIE  \n  HTML5  \n  InkML  \n  JSON-LD  \n  RIF  \n  SCXML  \n  SMIL Timesheets  \n  sXBL  \n  WICD  \n  XFDL  \n  XFrames  \n  XBL  \n  XMLHttpRequest  \n \n \n \n \n \n  \n \n \n \n Guidelines \n \n \n \n \n  Web Content Accessibility Guidelines  \n \n \n \n \n \n  \n \n \n \n Initiative \n \n \n \n \n  Multimodal Interaction Activity  \n  Markup Validation Service  \n  Web Accessibility Initiative  \n  WebPlatform  \n \n \n \n \n \n  \n \n \n \n Deprecated \n \n \n \n \n  C-HTML  \n  HDML  \n  JSSS  \n  PGML  \n  VML  \n  XHTML+MathML+SVG  \n \n \n \n \n \n \n \n \n  \n \n \n Organizations \n \n \n \n  World Wide Web Foundation  \n  SVG Working Group  \n  CSS Working Group  \n  HTML Working Group  \n  WebOnt  \n  W3C Device Description Working Group  \n  WHATWG  \n \n \n \n \n \n  \n \n \n Software \n \n \n \n  Agora  \n  Argo  \n  Arena  \n  Amaya  \n  CERN httpd  \n  Libwww  \n  Line Mode Browser  \n \n \n \n \n \n  \n \n \n Conference-related \n \n \n \n  IW3C2  \n  World Wide Web Conference  \n  WWW1  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Web browsers  \n \n \n \n  \n \n \n \n \n \n  Comparison  \n  History  \n  List \n \n  for Unix  \n \n \n  Timeline  \n  Usage share  \n \n \n \n \n \n  \n \n \n \n  \n \n \n Features \n \n \n \n  Ad filtering  \n  Augmented browsing  \n  Bookmarks \n \n  Bookmarklet  \n  Live bookmark  \n  Smart Bookmarks  \n \n \n  Browser extension  \n  Browser security  \n  Browser synchronizer \n \n  comparison  \n \n \n  Cookies  \n  Download manager  \n  Favicon  \n  Incremental search  \n  Plug-in  \n  Privacy mode  \n  Tabs  \n  Universal Edit Button  \n \n \n \n \n \n  \n \n \n Web standards \n \n \n \n  Acid tests  \n  Cascading Style Sheets  \n  HTML  \n  HTML5  \n  JavaScript  \n  MathML  \n  OCSP  \n  SVG  \n  WebGL  \n  XHTML  \n \n \n \n \n \n  \n \n \n Related topics \n \n \n \n  BrowserChoice.eu  \n  CRL  \n  HTTP  \n  HTTPS  \n  iLoo  \n  Internet suite  \n  Man-in-the-browser  \n  Mobile Web  \n  Offline reader  \n  PAC  \n  Pwn2Own  \n  Rich Internet application  \n  Site-specific browser  \n  SPDY  \n  SSL/TLS  \n  WebSocket  \n  Widget  \n  World Wide Web  \n  WPAD  \n  XML  \n \n \n \n \n \n \n \n \n  \n \n \n \n  \n \n \n  \u00a0 \n  Desktop  \n \n \n \n  \n \n \n \n  \n \n \n  WebKit -based \n \n \n \n   Arora   \n  Avant  \n  Chromium \n \n  Chrome  \n  Dragon  \n  Epic  \n  Opera  \n  SRWare Iron  \n  Torch  \n  Yandex.Browser  \n \n \n  Dooble  \n   Flock   \n  Fluid  \n  iCab  \n  Konqueror  \n  Lunascape  \n  Maxthon  \n  Midori  \n  OmniWeb  \n  Origyn Web Browser  \n  QupZilla  \n  rekonq  \n  Safari  \n   Shiira   \n  Sleipnir  \n  Uzbl  \n  Web  \n  WebPositive  \n  xombrero  \n \n \n \n \n \n  \n \n \n  Trident -based \n \n \n \n   AOL Explorer   \n  Avant  \n   Deepnet Explorer   \n  GreenBrowser  \n  Internet Explorer  \n  Lunascape  \n  Maxthon  \n   MediaBrowser   \n  MenuBox  \n   NeoPlanet   \n   NetCaptor   \n  Sleipnir  \n  SlimBrowser  \n   SpaceTime   \n   UltraBrowser   \n  WebbIE  \n  ZAC Browser  \n \n \n \n \n \n  \n \n \n  Gecko -based \n \n \n \n   AT&amp;T Pogo   \n  Avant  \n   Camino   \n  Firefox \n \n  Conkeror  \n  GNU IceCat  \n  IceDragon  \n  Pale Moon  \n  Pentadactyl  \n   Swiftfox   \n   Swiftweasel   \n  TenFourFox  \n  Timberwolf  \n  Vimperator  \n   xB Browser   \n \n \n   Galeon   \n   Ghostzilla   \n   K-Meleon   \n   Kazehakase   \n  Kirix Strata  \n   Lotus Symphony   \n  Lunascape  \n   Mozilla  \n \n   Beonex Communicator   \n  Classilla  \n   Netscape   \n  SeaMonkey  \n \n \n \n \n \n \n \n  \n \n \n  Text -based \n \n \n \n  ELinks  \n   Emacs/W3   \n   Line Mode Browser   \n  Links  \n  Lynx  \n   Net-Tamer   \n  w3m  \n \n \n \n \n \n  \n \n \n Other \n \n \n \n  abaco  \n  Amaya  \n   Arachne   \n   Arena   \n  Charon  \n  Dillo  \n  Gazelle  \n   IBM Home Page Reader   \n   IBrowse   \n  KidZui  \n   Mosaic   \n   Mothra   \n   NetPositive   \n  NetSurf  \n \n \n \n \n \n \n \n \n \n \n \n  \n \n \n \n  \n \n \n  \u00a0 \n  Mobile  \n \n \n \n  \n \n \n \n  \n \n \n  WebKit -based \n \n \n \n  Android Browser  \n  BOLT  \n  Chrome  \n  Dolphin Browser  \n  Nintendo 3DS Internet Browser  \n  Rockmelt  \n  S60 web browser  \n  Safari  \n  Silk  \n  Steel  \n \n \n \n \n \n  \n \n \n  Gecko -based \n \n \n \n  Firefox for mobile  \n   MicroB   \n   Minimo   \n \n \n \n \n \n  \n \n \n  Presto -based \n \n \n \n  Nintendo DS &amp; DSi Browser  \n  Opera Mini  \n  Opera Mobile  \n \n \n \n \n \n  \n \n \n Other \n \n \n \n  BlackBerry  \n  Blazer  \n   Deepfish   \n   Galio   \n  ibisBrowser  \n  Internet Explorer Mobile  \n  Iris Browser  \n  Konqueror Embedded  \n  NetFront  \n  Obigo Browser  \n  Skweezer  \n  Skyfire  \n  Teashark  \n  ThunderHawk  \n  uZard Web  \n  Vision  \n  WinWAP  \n \n \n \n \n \n \n \n \n \n \n \n  \n \n \n \n  \n \n \n  \u00a0 \n  Television  and  video game console  \n \n \n \n  \n \n \n \n  \n \n \n  WebKit -based \n \n \n \n  Google TV  \n  NetFront  \n  Steam overlay  \n  Wii U Internet Browser  \n \n \n \n \n \n  \n \n \n  Gecko -based \n \n \n \n  Kylo  \n \n \n \n \n \n  \n \n \n  Presto -based \n \n \n \n  Internet Channel  \n \n \n \n \n \n  \n \n \n Other \n \n \n \n   Galio   \n  MSN TV  (WebTV) \n \n \n \n \n \n \n \n \n \n \n \n  \n \n \n \n \n \n Software no longer in development shown in  italics  \n \n \n    Category  \n    Commons  \n      Internet portal  \n      Software portal  \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Web development", "rank": -0.0118411277484888, "url": "http://en.wikipedia.org/wiki/Web_development", "links": ["http://en.wikipedia.org/wiki/Web_site", "http://en.wikipedia.org/wiki/World_Wide_Web", "http://en.wikipedia.org/wiki/Intranet", "http://en.wikipedia.org/wiki/Plain_text", "http://en.wikipedia.org/wiki/Internet_application", "http://en.wikipedia.org/wiki/Electronic_business", "http://en.wikipedia.org/wiki/Social_network_service", "http://en.wikipedia.org/wiki/Web_design", "http://en.wikipedia.org/wiki/Web_content_development", "http://en.wikipedia.org/wiki/Client-side_scripting"], "body": "  \n \n \n     \n \n  This article  needs additional citations for  verification  .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and removed.    (December 2012)    \n \n \n \n \n \n     \n \n  This article  may need to be rewritten entirely to comply with Wikipedia's  quality standards  .   You can help . The  discussion page  may contain suggestions.    (May 2009)    \n \n \n  Web development  is a broad term for the work involved in developing a  web site  for the Internet ( World Wide Web ) or an  intranet  (a private network). Web development can range from developing the simplest static single page of  plain text  to the most complex web-based  internet applications ,  electronic businesses , and  social network services . A more comprehensive list of tasks to which web development commonly refers, may include  web design ,  web content development , client liaison,  client-side / server-side   scripting ,  web server  and  network security  configuration, and  e-commerce  development. Among web professionals, \"web development\" usually refers to the main non-design aspects of building web sites: writing  markup  and  coding . \n For larger organizations and businesses, web development teams can consist of hundreds of people ( web developers ). Smaller organizations may only require a single permanent or contracting  webmaster , or secondary assignment to related job positions such as a  graphic designer  and/or  information systems  technician. Web development may be a collaborative effort between departments rather than the domain of a designated department. \n  \n \n \n Contents \n \n \n   1   Web development as an industry   \n   2   Typical areas  \n \n   2.1   Client side coding   \n   2.2   Server side coding   \n   2.3   Client side + server side   \n   2.4   Database technology   \n \n \n   3   Practical web development  \n \n   3.1   Basic   \n   3.2   Advanced   \n \n \n   4   Security considerations   \n   5   Timeline   \n   6   See also   \n   7   References   \n \n \n  \n  Web development as an industry   [  edit  ]   \n Since the  commercialization of the web , web development has been a growing  industry . The growth of this industry is being pushed especially by businesses wishing to sell products and services to online customers.   [ 1 ]    \n For tools and platforms, the public can use many  open source  systems to aid in web development. A popular example, the  LAMP  ( Linux ,  Apache ,  MySQL ,  PHP ) stack is available for download online free of charge. This has kept the cost of learning web development to a minimum. Another contributing factor to the growth of the industry has been the rise of easy-to-use  WYSIWYG  web-development software, most prominently  Adobe Dreamweaver ,  WebDev , and  Microsoft Expression Studio . Using such software, virtually anyone can relatively quickly learn to develop a very basic web page. Knowledge of HyperText Markup Language ( HTML ) or of programming languages is still required to use such software, but the basics can be learned and implemented quickly with the help of help files, technical books, internet tutorials, or face-to-face training. \n An ever growing set of tools and technologies have helped developers build more dynamic and interactive websites. Web developers now help to deliver applications as web services which were traditionally only available as applications on a desk-based computer. \n Instead of running executable  code  on a local computer, users can interact with online applications to create new content. This has created new methods in communication [   citation needed   ]  and allowed for many opportunities to decentralize information and media distribution. Users can interact with applications from many locations, instead of being tied to a specific workstation for their application environment. \n Examples of dramatic transformation in communication and commerce led by web development include e-commerce. Online auction-sites such as  eBay  have changed the way consumers find and purchase goods and services. Online retailers such as  Amazon.com  and  Buy.com  (among many others) have transformed the shopping and bargain-hunting experience for many consumers. Another good example of transformative communication led by web development is the  blog . Web applications such as  WordPress  and  Movable Type  have created easily-implemented blog-environments for individual web sites. The popularity of open-source  content management systems  such as  Joomla! ,  Drupal ,  XOOPS , and  TYPO3  and  enterprise content management  systems such as  Alfresco  have extended web development's impact at online interaction and communication. \n Web development has also impacted personal networking and marketing. Websites are no longer simply tools for work or for  commerce , but serve more broadly for communication and  social networking . Websites such as  Facebook  and  Twitter  provide users with a platform to communicate and organizations with a more personal and interactive way to engage the public. \n  Typical areas   [  edit  ]   \n Web Development can be split into many areas and a typical and basic web development hierarchy might consist of: \n  Client side coding   [  edit  ]   \n \n  Ajax  Asynchronous JavaScript provides new methods of using JavaScript, and other languages to improve the user experience. \n  Flash  Adobe  Flash Player  is a ubiquitous browser plugin ready for  RIAs .  Flex 2  is also deployed to the Flash Player (version 9+). \n  JavaScript  JavaScript is a ubiquitous client side platform for creating and delivering rich web applications that can also run across a wide variety of devices. It is a dialect of the scripting language  ECMAScript . \n  jQuery  Cross-browser JavaScript library designed to simplify and speed up the client-side scripting of HTML. \n  Microsoft Silverlight  Microsoft's browser plugin that enables animation, vector graphics and high-definition video playback, programmed using  XAML  and .NET programming languages. \n  HTML5  and  CSS3  Latest HTML proposed standard combined with the latest proposed standard for CSS natively supports much of the client-side functionality provided by other frameworks such as Flash and Silverlight \n \n Looking at these items from an \"umbrella approach\", client side coding such as  XHTML  is executed and stored on a local client (in a web browser) whereas server side code is not available to a client and is executed on a  web server  which generates the appropriate XHTML which is then sent to the client. The nature of client side coding allows one to alter the HTML on a local client and refresh the pages with updated content (locally),  web designers  must bear in mind the importance and relevance to security with their server side scripts. If a server side script accepts content from a locally modified client side script, the web development of that page is poorly sanitized with relation to  security . \n  Server side coding   [  edit  ]   \n \n  ASP  (Microsoft proprietary) \n  ColdFusion  (Adobe proprietary, formerly Macromedia, formerly Allaire) \n  CGI  \n  Erlang , with  Linux ,  Yaws ,  Mnesia ,  Erlang  (LYME)  solution stack  \n  Groovy , using the  Grails framework  \n  Java , e.g.  Java Servlets ,  JSP  or  WebObjects  \n  Lotus Domino  \n  Node.js  \n  Perl , e.g.  Catalyst ,  Dancer  or  Mojolicious  (all open source) \n  PHP  (open source) \n  Python , e.g.  Django (web framework)  (open source) \n  Ruby , e.g.  Ruby on Rails  (open source) \n  SSJS  Server-Side JavaScript, e.g.  Aptana  Jaxer,  Mozilla Rhino  \n  .NET  and .NET MVC Frameworks (Microsoft proprietary) \n \n The World Wide Web has become a major delivery platform for web development a variety of complex and sophisticated enterprise applications in several domains. In addition to their inherent multifaceted functionality, these web applications exhibit complex behavior and place some unique demands on their usability, performance, security and ability to grow and evolve. However, a vast majority of these applications continue to be developed in an ad-hoc way, contributing to problems of usability, maintainability, quality and reliability.(1)(2) While web development can benefit from established practices from other related disciplines, it has certain distinguishing characteristics that demand special considerations. In recent years of web development there have been some developments towards addressing these problems and requirements. As an emerging discipline, web engineering actively promotes systematic, disciplined and quantifiable approaches towards successful development of high-quality, ubiquitously usable web-based systems and applications.(3)(4) In particular, web engineering focuses on the methodologies, techniques and tools that are the foundation of web application development and which support their design, development, evolution, and evaluation. Web application development has certain characteristics that make it different from traditional software, information system, or computer application development. \n Web engineering is multidisciplinary and encompasses contributions from diverse areas: systems analysis and design, software engineering, hypermedia/hypertext engineering, requirements engineering, human-computer interaction, user interface, information engineering, information indexing and retrieval, testing, modelling and simulation, project management, and graphic design and presentation. Web engineering is neither a clone, nor a subset of software engineering, although both involve programming and software development. While web engineering uses software engineering principles, web development encompasses new approaches, methodologies, tools, techniques, and guidelines to meet the unique requirements for web-based applications. \n  Client side + server side   [  edit  ]   \n \n  Google Web Toolkit  provides tools to create and maintain complex  JavaScript  front-end applications in  Java . \n  Dart  provides tools to create and maintain complex  JavaScript  front-end applications as well as supporting server-side code in  Dart (programming language) . \n  Opa  is a high-level language in which both the client and the server parts are implemented. The compiler then decides which parts run on the client (and are translated automatically to  JavaScript ) and which parts run on the server. The developer can tune those decisions with simple directives. (open source) \n  Pyjamas  is a tool and framework for developing Ajax applications and  Rich Internet Applications  in Python. \n  Tersus  is a platform for the development of rich web applications by visually defining user interface, client side behavior and server side processing. (open source) \n \n However languages like  Ruby  and  Python  are often paired with database servers other than  MySQL  (the M in LAMP). Below are example of other databases currently in wide use on the web. For instance some developers prefer a LAPR (Linux/Apache/PostgreSQL/Ruby on Rails) setup for development. \n  Database technology   [  edit  ]   \n \n  FileMaker  \n  Apache Derby  * \n  IBM DB2  \n  Firebird  * \n  Microsoft SQL Server  \n  MySQL  * \n  MariaDB  * \n  Oracle  \n  PostgreSQL  * \n  SQLite  * \n  Sybase  \n  WebDNA  \n  Redis  * \n  MongoDB  * \n  CouchDB  * \n  Mark_Logic  \n \n \n * open source / public domain \n \n  Practical web development   [  edit  ]   \n  Basic   [  edit  ]   \n In practice, many  web developers  will have basic  interdisciplinary  skills / roles, including: \n \n  Graphic design  /  web design  \n  Information architecture  and  copywriting / copyediting  with web  usability ,  accessibility  and  search engine optimization  in mind \n \n The above list is a simple website development hierarchy and can be extended to include all client side and server side aspects. It is still important to remember that web development is generally split up into client side coding, covering aspects such as the layout and design, and server side coding, which covers the website's functionality and back-end systems. \n  Advanced   [  edit  ]   \n Some more advanced web developers will also have these  interdisciplinary  skills / roles: \n \n  GUI  (Graphic User Interface) design \n Audio, Video and Animation processing and encoding (for web usage) \n  Flash  Capabilities (animation, audio, video, scripting) \n  Web content management system  Deployment and/or Content management infrastructure design, development and integration \n  Web applications  development, integration and deployment \n Web server stress testing (how much traffic can a web server running a specific application endure before collapsing) \n Web site  security  analysis &amp; testing \n Web site code optimization (which is an important aspect of  search engine optimization ) \n  Project management ,  QA  and other aspects common to  IT development  \n \n  Security considerations   [  edit  ]   \n Web development takes into account many security considerations, such as data entry error checking through forms, filtering output, and encryption.   [ 2 ]    Malicious practices such as  SQL injection  can be executed by users with ill intent yet with only primitive knowledge of web development as a whole. Scripts can be used to exploit websites by granting unauthorized access to malicious users that try to collect information such as email addresses, passwords and protected content like credit card numbers. \n Some of this is dependent on the server environment (most commonly  Apache  or  Microsoft IIS ) on which the scripting language, such as  PHP ,  Ruby ,  Python ,  Perl  or  ASP  is running, and therefore is not necessarily down to the web developer themselves to maintain. However, stringent testing of web applications before public release is encouraged to prevent such exploits from occurring. If some contact form is provided in a website it should include a captcha field in it which prevents computer programs from automatically filling forms and also mail spamming. \n Keeping a web server safe from intrusion is often called  Server Port Hardening . Many technologies come into play to keep information on the internet safe when it is transmitted from one location to another. For instance  Secure Socket Layer  Encryption ( SSL ) Certificates are issued by certificate authorities to help prevent  internet fraud . Many developers often employ different forms of  encryption  when transmitting and storing sensitive information. A basic understanding of  information technology  security concerns is often part of a web developer's knowledge. \n Because new security holes are found in web applications even after testing and launch, security patch updates are frequent for widely used applications. It is often the job of web developers to keep applications up to date as security patches are released and new security concerns are discovered. \n  Timeline   [  edit  ]   \n     \n  See also   [  edit  ]   \n \n  Cross-browser  \n  Web design  \n  Website builder  \n \n  References   [  edit  ]   \n \n \n    ^      Bureau of Labor Statistics, U.S. Department of Labor.  \"Information Security Analysts, Web Developers, and Computer Network Architects\" .  Occupational Outlook Handbook, 2012-13 Edition  . Retrieved 2013-01-17 .   \u00a0    \n    ^       \"Web Application Security\" . DocForge. 22 February 2010 . Retrieved 17 December 2008 .   \u00a0    \n \n \n \n \n    "}, {"title": "Client-side", "rank": -0.07104243378292989, "url": "http://en.wikipedia.org/wiki/Client-side", "links": ["http://en.wikipedia.org/wiki/Client_(computing)", "http://en.wikipedia.org/wiki/Client%E2%80%93server", "http://en.wikipedia.org/wiki/Computer_network", "http://en.wikipedia.org/wiki/Computer_application", "http://en.wikipedia.org/wiki/Web_browser", "http://en.wikipedia.org/wiki/User_(computing)", "http://en.wikipedia.org/wiki/Computer", "http://en.wikipedia.org/wiki/Workstation_(computer_hardware)", "http://en.wikipedia.org/wiki/Server_(computing)", "http://en.wikipedia.org/wiki/Bandwidth_(computing)"], "body": "  \n \n \n     \n \n  This article  does not  cite  any  references or sources  .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and  removed .    (February 2008)    \n \n \n  Client-side  refers to operations that are performed by the  client  in a  client\u2013server  relationship in a  computer network . \n Typically, a client is a  computer application , such as a  web browser , that runs on a  user 's local  computer  or  workstation  and connects to a  server  as necessary. Operations may be performed client-side because they require access to information or functionality that is available on the client but not on the server, because the user needs to observe them or provide input, or because the server lacks the processing power to perform the operations in a timely manner for all of the clients it serves. Additionally, if operations can be performed by the client, without sending data over the network, they may take less time, use less  bandwidth , and incur a lesser  security  risk. \n When the server serves data in a commonly used manner, for example according to the  HTTP  or  FTP   protocols , users may have their choice of a number of client programs (most modern web browsers can request and receive data using both of those protocols). In the case of more specialized applications,  programmers  may write their own server, client, and  communications protocol , that can only be used with one another. \n Programs that run on a user's local computer without ever sending or receiving data over a network are not considered clients, and so the operations of such programs would not be considered client-side operations. \n  Example   [  edit  ]   \n  Distributed computing  projects such as  SETI@home  or  NAGAR  and popular applications like  Google Earth  rely primarily on client-side operations. The SETI@home client initiates a connection with the server and requests some data. The server selects a data set (a  server-side  operation) and sends it back to the client. The client then analyzes the data (a client-side operation), and, when the analysis is complete, transmits its results back to the server. \n  See also   [  edit  ]   \n \n  Client-side scripting  \n  Server-side  \n  Client-side prediction  \n \n \n \n    "}, {"title": "Asynchronous I/O", "rank": -0.07104243378292989, "url": "http://en.wikipedia.org/wiki/Asynchronous_I/O", "links": ["http://en.wikipedia.org/wiki/Input/output", "http://en.wikipedia.org/wiki/Process_(computing)", "http://en.wikipedia.org/wiki/Data_transmission", "http://en.wikipedia.org/wiki/Orders_of_magnitude", "http://en.wikipedia.org/wiki/Gigahertz", "http://en.wikipedia.org/wiki/System_resources", "http://en.wikipedia.org/wiki/Asynchronous", "http://en.wikipedia.org/wiki/Operating_systems", "http://en.wikipedia.org/wiki/Polling_(computer_science)", "http://en.wikipedia.org/wiki/CP/M"], "body": "  \n \n \n     \n \n  This article  does not  cite  any  references or sources  .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and  removed .    (December 2011)    \n \n \n In computer science,  Asynchronous I/O , or  non-blocking I/O  is a form of  input/output  processing that permits other  processing  to continue before the  transmission  has finished. \n Input and output (I/O) operations on a computer can be extremely slow compared to the processing of data. An I/O device can incorporate mechanical devices that must physically move, such as a hard drive seeking a track to read or write; this is often  orders of magnitude  slower than the switching of electric current. For example, during a disk operation that takes ten milliseconds to perform, a processor that is clocked at one  gigahertz  could have performed ten million instruction-processing cycles. \n A simple approach to I/O would be to start the access and then wait for it to complete. But such an approach (called  synchronous I/O  or  blocking I/O ) would block the progress of a program while the communication is in progress, leaving  system resources  idle. When a program makes many I/O operations, this means that the processor can spend almost all of its time idle waiting for I/O operations to complete. \n Alternatively, it is possible to start the communication and then perform processing that does not require that the I/O has completed. This approach is called  asynchronous  input/output. Any task that actually depends on the I/O having completed (this includes both using the input values and critical operations that claim to assure that a write operation has been completed) still needs to wait for the I/O operation to complete, and thus is still blocked, but other processing that does not have a dependency on the I/O operation can continue. \n Many operating system functions exist to implement asynchronous I/O at many levels. In fact, one of the main functions of all but the most rudimentary of  operating systems  is to perform at least some form of basic asynchronous I/O, though this may not be particularly apparent to the operator or programmer. In the simplest software solution, the hardware device status is  polled  at intervals to detect whether the device is ready for its next operation. (For example the  CP/M  operating system was built this way. Its  system call  semantics did not require any more elaborate I/O structure than this, though most implementations were more complex, and thereby more efficient.)  Direct memory access (DMA)  can greatly increase the efficiency of a polling-based system, and  hardware interrupts  can eliminate the need for polling entirely.  Multitasking  operating systems can exploit the functionality provided by hardware interrupts, whilst hiding the complexity of interrupt handling from the user.  Spooling  was one of the first forms of multitasking designed to exploit asynchronous I/O. Finally,  multithreading  and explicit asynchronous I/O  APIs  within user processes can exploit asynchronous I/O further, at the cost of extra software complexity. \n Asynchronous I/O is used to improve throughput, latency, and/or responsiveness. \n  \n \n \n Contents \n \n \n   1   Forms  \n \n   1.1   Process   \n   1.2   Polling   \n   1.3   Select(/poll) loops   \n   1.4   Signals (interrupts)   \n   1.5   Callback functions   \n   1.6   Light-weight processes or threads   \n   1.7   Completion queues/ports   \n   1.8   Event flags   \n \n \n   2   Implementation  \n \n   2.1   Synthesis   \n \n \n   3   See also   \n   4   References   \n   5   External links   \n \n \n  \n  Forms   [  edit  ]   \n All forms of asynchronous I/O open applications up to potential resource conflicts and associated failure. Careful programming (often using  mutual exclusion ,  semaphores , etc.) is required to prevent this. \n When exposing asynchronous I/O to applications there are a few broad classes of implementation. The form of the  API  provided to the application does not necessarily correspond with the mechanism actually provided by the operating system; emulations are possible. Furthermore, more than one method may be used by a single application, depending on its needs and the desires of its programmer(s). Many operating systems provide more than one of these mechanisms, it is possible that some may provide all of them. \n  Process   [  edit  ]   \n Available in early Unix. In a  multitasking  operating system, processing can be distributed across different processes, which run independently, have their own memory, and process their own I/O flows; these flows are typically connected in  pipelines . Processes are fairly expensive to create and maintain [   citation needed   ] , so this solution only works well if the set of processes is small and relatively stable. It also assumes that the individual processes can operate independently, apart from processing each other's I/O; if they need to communicate in other ways, coordinating them can become difficult [   citation needed   ] . \n An extension of this approach is  dataflow programming , which allows more complicated networks than just the chains that pipes support. \n  Polling   [  edit  ]   \n Variations: \n \n Error if it cannot be done yet (reissue later) \n Report when it can be done without blocking (then issue it) \n \n Available in traditional Unix and  Windows . Its major problem is that it can waste CPU time polling repeatedly when there is nothing else for the issuing process to do, reducing the time available for other processes. Also, because a polling application is essentially single-threaded it may be unable to fully exploit I/O parallelism that the hardware is capable of. \n  Select(/poll) loops   [  edit  ]   \n Available in  BSD   Unix , and almost anything else with a  TCP/IP  protocol stack that either utilizes or is modeled after the BSD implementation. A variation on the theme of polling, a select loop uses the   select   system call to  sleep  until a condition occurs on a  file descriptor  (e.g., when data is available for reading), a  timeout  occurs, or a  signal  is received (e.g., when a child process dies). By examining the return parameters of the  select  call, the loop finds out which file descriptor has changed and executes the appropriate code. Often, for ease of use, the select loop is implemented as an  event loop , perhaps using  callback functions ; the situation lends itself particularly well to  event-driven programming . \n While this method is reliable and relatively efficient, it depends heavily on the  Unix  paradigm that \" everything is a file \"; any blocking I/O that does not involve a file descriptor will block the process. The select loop also relies on being able to involve all I/O in the central  select  call; libraries that conduct their own I/O are particularly problematic in this respect. An additional potential problem is that the select and the I/O operations are still sufficiently decoupled that select's result may effectively be a lie: if two processes are reading from a single file descriptor (arguably bad design) the select may indicate the availability of read data that has disappeared by the time that the read is issued, thus resulting in blocking; if two processes are writing to a single file descriptor (not that uncommon) the select may indicate immediate writability yet the write may still block, because a buffer has been filled by the other process in the interim, or due to the write being too large for the available buffer or in other ways unsuitable to the recipient. \n The select loop doesn't reach the ultimate system efficiencies possible with, say, the  completion queues  method, because the semantics of the  select  call, allowing as it does for per-call tuning of the acceptable event set, consumes some amount of time per invocation traversing the selection array. This creates little overhead for user applications that might have open one file descriptor for the windowing system and a few for open files, but becomes more of a problem as the number of potential event sources grows, and can hinder development of many-client server applications; other asynchronous methods may be noticeably more efficient in such cases. Some Unixes provide system-specific calls with better scaling; for example,   epoll   in  Linux  (that fills the return selection array with only those event sources on which an event has occurred),   kqueue   in  FreeBSD , and  /dev/poll  in  Solaris . \n  SVR3   Unix  provided the  poll  system call. Arguably better-named than  select , for the purposes of this discussion it is essentially the same thing. SVR4 Unixes (and thus  POSIX ) offer both calls. \n  Signals (interrupts)   [  edit  ]   \n Available in  BSD  and  POSIX  Unix. I/O is issued asynchronously, and when it is complete a  signal  ( interrupt ) is generated. As in low-level kernel programming, the facilities available for safe use within the signal handler are limited, and the main flow of the process could have been interrupted at nearly any point, resulting in inconsistent data structures as seen by the signal handler. The signal handler is usually not able to issue further asynchronous I/O by itself. \n The  signal  approach, though relatively simple to implement within the OS, brings to the application program the unwelcome baggage associated with writing an operating system's kernel interrupt system. Its worst characteristic is that  every  blocking (synchronous) system call is potentially interruptible; the programmer must usually incorporate retry code at each call [   citation needed   ] . \n  Callback functions   [  edit  ]   \n Available in  Mac OS  (pre- Mac OS X ),  VMS  and  Windows . Bears many of the characteristics of the  signal  method as it is fundamentally the same thing, though rarely recognized as such. The difference is that each I/O request usually can have its own completion function, whereas the  signal  system has a single callback. \n A potential problem is that stack depth can grow unmanageably, as an extremely common thing to do when one I/O is finished is to schedule another. If this should be satisfied immediately, the first  callback  is not 'unwound' off the stack before the next one is invoked. Systems to prevent this (like 'mid-ground' scheduling of new work) add complexity and reduce performance. In practice, however, this is generally not a problem because the new I/O will itself usually return as soon as the new I/O is started allowing the stack to be 'unwound'. The problem can also be prevented by avoiding any further callbacks, by means of a queue, until the first callback returns. \n  Light-weight processes or threads   [  edit  ]   \n  Light-weight processes  (LWPs) or  threads  are available in more modern Unixes, originating in  Plan 9  [   citation needed   ] . Like the  process  method, but without the data isolation that hampers coordination of the flows. This lack of isolation introduces its own problems, usually requiring kernel-provided synchronization mechanisms and  thread-safe  libraries. Each LWP or thread itself uses traditional blocking synchronous I/O. The requisite separate per-thread stack may preclude large-scale implementations using very large numbers of threads. The separation of textual (code) and time (event) flows provides fertile ground for errors. \n This approach is also used in the  Erlang  programming language runtime system. The Erlang  virtual machine  uses asynchronous I/O using a small pool of only a few threads or sometimes just one process, to handle I/O from up to millions of Erlang processes. I/O handling in each process is written mostly using blocking synchronous I/O. This way high performance of asynchronous I/O is merged with simplicity of normal I/O. Many I/O problems in Erlang are mapped to message passing, which can be easily processed using built-in selective receive. \n  Completion queues/ports   [  edit  ]   \n Available in  Microsoft Windows ,  Solaris  and  DNIX . I/O requests are issued asynchronously, but notifications of completion are provided via a synchronizing queue mechanism in the order they are completed. Usually associated with a  state-machine  structuring of the main process ( event-driven programming ), which can bear little resemblance to a process that does not use asynchronous I/O or that uses one of the other forms, hampering code reuse. Does not require additional special synchronization mechanisms or  thread-safe  libraries, nor are the textual (code) and time (event) flows separated. \n  Event flags   [  edit  ]   \n Available in  VMS . Bears many of the characteristics of the  completion queue  method, as it is essentially a completion queue of depth one. To simulate the effect of queue 'depth', an additional event flag is required for each potential unprocessed (but completed) event, or event information can be lost. Waiting for the next available event in such a clump requires synchronizing mechanisms that may not scale well to larger numbers of potentially parallel events. \n  Implementation   [  edit  ]   \n The vast majority of general-purpose computing hardware relies entirely upon two methods of implementing asynchronous I/O: polling and interrupts. Usually both methods are used together, the balance depends heavily upon the design of the hardware and its required performance characteristics. ( DMA  is not itself another independent method, it is merely a means by which more work can be done per poll or interrupt.) \n Pure polling systems are entirely possible, small microcontrollers (such as systems using the  PIC ) are often built this way.  CP/M  systems could also be built this way (though rarely were), with or without DMA. Also, when the utmost performance is necessary for only a  few  tasks, at the expense of any other potential tasks, polling may also be appropriate as the overhead of taking interrupts may be unwelcome. (Servicing an interrupt requires time [and space] to save at least part of the processor state, along with the time required to resume the interrupted task.) \n Most general-purpose computing systems rely heavily upon interrupts. A pure interrupt system may be possible, though usually some component of polling is also required, as it is very common for multiple potential sources of interrupts to share a common interrupt signal line, in which case polling is used within the  device driver  to resolve the actual source. (This resolution time also contributes to an interrupt system's performance penalty. Over the years a great deal of work has been done to try to minimize the overhead associated with servicing an interrupt. Current interrupt systems are rather  lackadaisical  when compared to some highly-tuned earlier ones, but the general increase in hardware performance has greatly mitigated this.) \n Hybrid approaches are also possible, wherein an interrupt can trigger the beginning of some burst of asynchronous I/O, and polling is used within the burst itself. This technique is common in high-speed device drivers, such as network or disk, where the time lost in returning to the pre-interrupt task is greater than the time until the next required servicing. (Common I/O hardware in use these days relies heavily upon DMA and large data buffers to make up for a relatively poorly-performing interrupt system. These characteristically use polling inside the driver loops, and can exhibit tremendous throughput. Ideally the per-datum polls are always successful, or at most repeated a small number of times.) \n At one time this sort of hybrid approach was common in disk and network drivers where there was not DMA or significant buffering available. Because the desired transfer speeds were faster even than could tolerate the minimum four-operation per-datum loop (bit-test, conditional-branch-to-self, fetch, and store), the hardware would often be built with automatic  wait state  generation on the I/O device, pushing the data ready poll out of software and onto the processor's fetch or store hardware and reducing the programmed loop to two operations. (In effect using the processor itself as a DMA engine.) The  6502  processor offered an unusual means to provide a three-element per-datum loop, as it had a hardware pin that, when asserted, would cause the processor's Overflow bit to be set directly. (Obviously one would have to take great care in the hardware design to avoid overriding the Overflow bit outside of the device driver!) \n  Synthesis   [  edit  ]   \n Using only these two tools (polling, and interrupts), all the other forms of asynchronous I/O discussed above may be (and in fact, are) synthesized. \n In an environment such as a  Java Virtual Machine  (JVM), asynchronous I/O can be synthesized  even though  the environment the JVM is running in may not offer it at all. This is due to the interpreted nature of the JVM. The JVM may poll (or take an interrupt) periodically to institute an internal flow of control change, effecting the appearance of multiple simultaneous processes, at least some of which presumably exist in order to perform asynchronous I/O. (Of course, at the microscopic level the parallelism may be rather coarse and exhibit some non-ideal characteristics, but on the surface it will appear to be as desired.) \n That, in fact, is the problem with using polling in any form to synthesize a different form of asynchronous I/O. Every CPU cycle that is a poll is wasted, and lost to overhead rather than accomplishing a desired task. Every CPU cycle that is  not  a poll represents an increase in latency of reaction to pending I/O. Striking an acceptable balance between these two opposing forces is difficult. (This is why hardware interrupt systems were invented in the first place.) \n The trick to maximize efficiency is to minimize the amount of work that has to be done upon reception of an interrupt in order to awaken the appropriate application. Secondarily (but perhaps no less important) is the method the application itself uses to determine what it needs to do. \n Particularly problematic (for application efficiency) are the exposed polling methods, including the select/poll mechanisms. Though the underlying I/O events they are interested in are in all likelihood interrupt-driven, the interaction  to  this mechanism is polled and can consume a large amount of time in the poll. This is particularly true of the potentially large-scale polling possible through select (and poll). Interrupts map very well to Signals, Callback functions, Completion Queues, and Event flags, such systems can be very efficient. \n  See also   [  edit  ]   \n \n  IOCP , Input/Output Completion Ports. \n  Asynchronous Transfer Mode  \n  Asynchronous semaphore  \n  C10k problem  \n \n  References   [  edit  ]   \n  \n  External links   [  edit  ]   \n \n   \"Non-blocking communication example using MPI (Message Passing Interface)\" . Hakan Haberdar, University of Houston, Texas, USA . Retrieved October 2012 .   \u00a0   \n  The C10K Problem ; a survey of asynchronous I/O methods with emphasis on scaling \u2013 by Dan Kegel \n Article \" Boost application performance using asynchronous I/O \" by  M. Tim Jones  \n Article \" Lazy Asynchronous I/O For Event-Driven Servers \" by  Willy Zwaenepoel ,  Khaled Elmeleegy ,  Anupam Chanda  and  Alan L. Cox  \n  Perform I/O Operations in Parallel  \n  Description from POSIX standard  \n  Inside I/O Completion Ports  by  Mark Russinovich  \n  Description from .NET Framework Developer's Guide  \n  Asynchronous I/O and The Asynchronous Disk I/O Explorer  \n  IO::AIO is a Perl module offering an asynchronous interface for most I/O operations  \n  ACE Proactor  \n \n \n \n    "}, {"title": "Web application", "rank": -0.08529312031861115, "url": "http://en.wikipedia.org/wiki/Web_application", "links": ["http://en.wikipedia.org/wiki/Rich_Internet_application", "http://en.wikipedia.org/wiki/Google_Calendar", "http://en.wikipedia.org/wiki/Google", "http://en.wikipedia.org/wiki/Horde_(software)", "http://en.wikipedia.org/wiki/Groupware", "http://en.wikipedia.org/wiki/Open_source", "http://en.wikipedia.org/wiki/Computing", "http://en.wikipedia.org/wiki/Application_software", "http://en.wikipedia.org/wiki/Web_browser", "http://en.wikipedia.org/wiki/Programming_language"], "body": "  For applications accessed through the web that are executed client-side, see  Rich Internet application . \n \n \n \n     \n \n  This article  needs additional citations for  verification  .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and removed.    (January 2010)    \n \n \n \n    \n \n     \n Google Calendar  is a contact- and time-management web application offered by  Google . \n \n \n \n    \n \n     \n Horde   groupware  is an  open source  web application. \n \n \n In  computing , a  web-based application  is any  application  that uses a  web browser  as a client.   [ 1 ]      [ 2 ]    The term may also mean a computer software application that is coded in a browser-supported  programming language  (such as  JavaScript , combined with a browser-rendered  markup language  like  HTML ) and reliant on a common web browser to render the application  executable . \n Web applications are popular due to the  ubiquity  of web browsers, and the convenience of using a web browser as a  client , sometimes called a  thin client . The ability to update and maintain web applications without distributing and installing software on potentially thousands of client computers is a key reason for their popularity, as is the inherent support for cross-platform compatibility. Common web applications include  webmail , online retail sales,  online auctions ,  wikis  and many other functions. \n  \n \n \n Contents \n \n \n   1   History   \n   2   Interface   \n   3   Structure   \n   4   Business use   \n   5   Writing web applications   \n   6   Applications   \n   7   Benefits   \n   8   Drawbacks   \n   9   See also   \n   10   References   \n   11   External links   \n \n \n  \n  History   [  edit  ]   \n In earlier computing models, e.g. in client-server, the load for the application was shared between code on the server and code installed on each client locally. In other words, an application had its own client program which served as its  user interface  and had to be separately installed on each user's  personal computer . An upgrade to the server-side code of the application would typically also require an upgrade to the client-side code installed on each user workstation, adding to the  support  cost and decreasing  productivity . \n In contrast, web applications use  web documents  written in a standard format such as  HTML  and  JavaScript , which are supported by a variety of web browsers. Web applications can be considered as a specific variant of client-server software where the client software is downloaded to the client machine when visiting the relevant web page, using standard procedures such as  HTTP . Client web software updates may happen each time the web page is visited. During the session, the web browser interprets and displays the pages, and acts as the  universal  client    [ 3 ]    for any web application. \n In the early days of the  Web  each individual web page was delivered to the client as a static document, but the sequence of pages could provide an interactive experience, as user input is returned through web  form  elements embedded in the page markup. \n In 1995  Netscape  introduced a  client-side scripting  language called  JavaScript  allowing programmers to add some  dynamic elements  to the user interface that ran on the client side. So instead of sending data to the server in order to generate an entire web page, the embedded scripts of the downloaded page can perform various tasks such as input validation or showing/hiding parts of the page. \n In 1996, Macromedia introduced  Flash , a  vector animation  player that could be added to browsers as a  plug-in  to embed animations on the web pages. It allowed the use of a scripting language to program interactions on the client side with no need to communicate with the server. \n In 1999, the \"web application\" concept was introduced in the Java language in the Servlet Specification version 2.2. [2.1?].   [ 4 ]      [ 5 ]    At that time both  JavaScript  and  XML  had already been developed, but  Ajax  had still not yet been coined and the  XMLHttpRequest  object had only been recently introduced on Internet Explorer 5 as an ActiveX object.   [ 6 ]    \n In 2005, the term  Ajax  was coined, and applications like  Gmail  started to make their client sides more and more interactive. A web page script is able to contact the server for storing/retrieving data without downloading an entire web page. \n In 2011,  HTML5  was finalized, which provides graphic and multimedia capabilities without the need of client side  plugins . HTML5 also enriched the semantic content of documents. The APIs and  document object model (DOM)  are no longer afterthoughts, but are fundamental parts of the HTML5 specification.  WebGL  API paved the way for advanced 3D graphics based on HTML5 canvas and JavaScript language. These have significant importance in creating truly platform and browser independent  rich web applications . \n  Interface   [  edit  ]   \n Through  Java ,  JavaScript ,  DHTML ,  Flash ,  Silverlight  and other technologies, application-specific methods such as drawing on the screen, playing audio, and access to the keyboard and mouse are all possible. Many services have worked to combine all of these into a more familiar interface that adopts the appearance of an operating system. General purpose techniques such as  drag and drop  are also supported by these technologies. Web developers often use client-side scripting to add functionality, especially to create an interactive experience that does not require page reloading. Recently, technologies have been developed to coordinate client-side scripting with server-side technologies such as  PHP .  Ajax , a web development technique using a combination of various technologies, is an example of technology which creates a more interactive experience. \n  Structure   [  edit  ]   \n Applications are usually broken into logical chunks called \"tiers\", where every tier is assigned a role.   [ 7 ]    Traditional applications consist only of 1 tier, which resides on the client machine, but web applications lend themselves to an n-tiered approach by nature.   [ 7 ]    Though many variations are possible, the most common structure is the  three-tiered  application.   [ 7 ]    In its most common form, the three tiers are called  presentation ,  application  and  storage , in this order. A web browser is the first tier (presentation), an engine using some dynamic Web content technology (such as  ASP ,  ASP.NET ,  CGI ,  ColdFusion ,  JSP/Java ,  PHP ,  Perl ,  Python ,  Ruby on Rails  or  Struts2 ) is the middle tier (application logic), and a database is the third tier (storage).   [ 7 ]    The web browser sends requests to the middle tier, which services them by making queries and updates against the database and generates a user interface. \n For more complex applications, a 3-tier solution may fall short, and it may be beneficial to use an n-tiered approach, where the greatest benefit is breaking the business logic, which resides on the application tier, into a more fine-grained model.   [ 7 ]    Another benefit may be adding an integration tier that separates the data tier from the rest of tiers by providing an easy-to-use interface to access the data.   [ 7 ]    For example, the client data would be accessed by calling a \"list_clients()\" function instead of making an SQL query directly against the client table on the database. This allows the underlying database to be replaced without making any change to the other tiers.   [ 7 ]    \n There are some who view a web application as a two-tier architecture. This can be a \"smart\" client that performs all the work and queries a \"dumb\" server, or a \"dumb\" client that relies on a \"smart\" server.   [ 7 ]    The client would handle the presentation tier, the server would have the database (storage tier), and the business logic (application tier) would be on one of them or on both.   [ 7 ]    While this increases the scalability of the applications and separates the display and the database, it still doesn't allow for true specialization of layers, so most applications will outgrow this model.   [ 7 ]    \n  Business use   [  edit  ]   \n An emerging strategy for application software companies is to provide web access to software previously distributed as local applications. Depending on the type of application, it may require the development of an entirely different browser-based interface, or merely adapting an existing application to use different presentation technology. These programs allow the user to pay a monthly or yearly fee for use of a software application without having to install it on a local hard drive. A company which follows this strategy is known as an  application service provider  (ASP), and ASPs are currently receiving much attention in the software industry. \n Security breaches on these kinds of applications are a major concern because it can involve both enterprise information and private customer data. Protecting these assets is an important part of any web application and there are some key operational areas that must be included in the development process.   [ 8 ]    This includes processes for authentication, authorization, asset handling, input, and logging and auditing. Building security into the applications from the beginning can be more effective and less disruptive in the long run. \n In  cloud computing  model web applications are  software as a service  (SaaS). There are business applications provided as SaaS for enterprises for fixed or usage dependent fee. Other web applications are offered free of charge, often generating income from advertisements shown in web application interface. \n Many businesses are enabled by open source web applications such as e-commerce software that facilitates easily creating an online retail store. Most businesses today do not need to buy data center hardware such as servers because they are affordably rented on a short term basis from a plethora of hosting companies that provide turnkey implementations of web applications. It is common for hosting providers to also offer packages of hardware and all necessary software to support the business needs of a company. Innovations in all aspects of web applications are providing tremendous economic value by increasing competition by reducing barriers to entry for new companies. \n  Writing web applications   [  edit  ]   \n Main article:  Web application development  \n Writing of web applications is often simplified by  open source software  such as  Django ,  Ruby on Rails  or  Symfony  called  web application frameworks . These frameworks facilitate  rapid application development  by allowing a development team to focus on the parts of their application which are unique to their goals without having to resolve common development issues such as user management.   [ 9 ]    While many of these frameworks are open source, this is by no means a requirement. \n The use of web application frameworks can often reduce the number of errors in a program, both by making the code simpler, and by allowing one team to concentrate on the framework while another focuses on a specified use case. In applications which are exposed to constant  hacking  attempts on the Internet, security-related problems can be caused by errors in the program. Frameworks can also promote the use of best practices   [ 10 ]    such as  GET after POST . \n In addition, there is potential for the development of applications on  Internet operating systems , although currently there are not many viable platforms that fit this model. \n  Applications   [  edit  ]   \n Examples of browser applications are simple office software ( word processors ,  online spreadsheets , and  presentation tools ), but can also include more advanced applications such as project management,  computer-aided design ,  video editing  and point-of-sale. \n  Benefits   [  edit  ]   \n \n \n \n   \n \n  This article  possibly contains  original research  .  Please  improve it  by  verifying  the claims made and adding  inline citations . Statements consisting only of original research may be removed.    (April 2011)    \n \n \n \n Web applications do not require any complex \"roll out\" procedure to deploy in large organizations. A compatible web browser is all that is needed; \n Browser applications typically require little or no disk space on the client; \n They require no upgrade procedure since all new features are implemented on the server and automatically delivered to the users; \n Web applications integrate easily into other server-side web procedures, such as email and searching. \n They also provide cross-platform compatibility in most cases (i.e., Windows, Mac, Linux, etc.) because they operate within a web browser window. \n With the advent of  HTML5 , programmers can create richly interactive environments natively within browsers. Included in the list of new features are native audio, video and animations, as well as improved error handling. \n Modern web applications support greater interactivity and greatly improved usability through technologies such as AJAX that efficiently exchange data between the browser and the server. \n Web applications allow for easier introduction of new user devices (e.g. smartphones, tablets) because they have built-in browsers. \n \n  Drawbacks   [  edit  ]   \n \n \n \n   \n \n  This article  possibly contains  original research  .  Please  improve it  by  verifying  the claims made and adding  inline citations . Statements consisting only of original research may be removed.    (April 2011)    \n \n \n \n In practice, web interfaces, compared to thick clients, typically force significant sacrifice to user experience and basic usability. \n Web applications absolutely require compatible web browsers. If a browser vendor decides not to implement a certain feature, or abandons a particular platform or operating system version, this may affect a huge number of users; \n Standards compliance is an issue with any non-typical office document creator, which causes problems when file sharing and collaboration becomes critical; \n Browser applications rely on application files accessed on remote servers through the Internet. Therefore, when connection is interrupted, the application is no longer usable. However, if it uses  HTML5  API's such as Offline Web application caching,   [ 11 ]    it can be downloaded and installed locally, for offline use.  Google Gears , although no longer in active development, is a good example of a third party plugin for web browsers that provides additional functionality for creating web applications; \n Since many web applications are not  open source , there is also a loss of flexibility, making users dependent on third-party servers, not allowing customizations on the software and preventing users from running applications  offline  (in most cases). However, if  licensed ,  proprietary software  can be customized and run on the preferred server of the rights owner; \n They depend entirely on the availability of the server delivering the application. If a company goes bankrupt and the server is shut down, the users have little recourse. Traditional installed software keeps functioning even after the demise of the company that produced it (though there will be no updates or customer service); \n Likewise, the company has much greater control over the software and functionality. They can roll out new features whenever they wish, even if the users would like to wait until the bugs have been worked out before upgrading. The option of simply skipping a weak software version is often not available. The company can foist unwanted features on the users or cut costs by reducing bandwidth. Of course, companies will try to keep the good will of their customers, but the users of web applications have fewer options in such cases unless a competitor steps in and offers a better product and easy migration; \n The company can theoretically track anything the users do. This can cause privacy problems. \n According to  Jonathan Zittrain , the online applications like  Facebook  and  Google Apps  have made the Internet become far more  proprietary  than early versions of  Microsoft Windows .   [ 12 ]    \n \n  See also   [  edit  ]   \n \n  Software as a service (SaaS)  \n  Web 2.0  \n  Web Engineering  \n  Web services  \n  Web Sciences  \n  Web widget  \n  Single-page application  \n  Ajax (programming)  \n \n  References   [  edit  ]   \n \n \n    ^     What is a Web Application?  [1]  by Daniel Nations, former About.com Guide  \n    ^     What is a Web Application?  [2]  by Daniel Nations, former About.com Guide  \n    ^     Comprehensive solutions for managing your data- Web Applications  http://www.meddb.be/webapplications.aspx  by MedDb  \n    ^      Alex Chaffee (2000-08-17).  \"What is a web application (or \"webapp\")?\"  . Retrieved 2008-07-27 .   \u00a0    \n    ^      James Duncan Davidson, Danny Coward (1999-12-17).   Java Servlet Specification (\"Specification\") Version: 2.2 Final Release  .  Sun Microsystems . pp.\u00a043\u201346 . Retrieved 2008-07-27 .   \u00a0    \n    ^       \"Dynamic HTML and XML: The XMLHttpRequest Object\" . Apple Inc . Retrieved 2008-06-25 .   \u00a0    \n  ^     a         b         c         d         e         f         g         h         i         j        Jeremy Petersen.  \"Benefits of using the n-tiered approach for web applications\" .   \u00a0    \n    ^       \"Top Tips for Secure App Development\" . Dell.com . Retrieved 2012-06-22 .   \u00a0    \n    ^      Multiple (wiki).  \"Web application framework\" .  Docforge  . Retrieved 2010-03-06 .   \u00a0    \n    ^      Multiple (wiki).  \"Framework\" .  Docforge  . Retrieved 2010-03-06 .   \u00a0    \n    ^      Multiple.  \"Offline Web applications - HTML5\" .  WHATWG  . Retrieved 2010-08-09 .   \u00a0    \n    ^      Brian Braiker (2008-05-02).  \"A Killer Product: Will closed devices like Apple's iPhone murder the Web?\"  . Retrieved 2009-06-16 . \"Through historical accident, we've ended up with a global network that pretty much allows anybody to communicate with anyone else at any time. Devices could be reprogrammed by them at any time, including code written by other people, so you don't have to be a nerd to get the benefits of reprogramming it. [But] this is an historical accident. Now, I see a movement away from that framework--even though it doesn't feel like a movement away. [For example,] an iPhone can only be changed by Steve Jobs or soon, with the software development kit, by programmers that he personally approves that go through his iPhone apps store. Or whimsical applications that run on the Facebook platform or the new Google apps. These are controllable by their vendors in ways that Bill Gates never dreamed of controlling Windows applications. [...] That's the ironic thing. Bill Gates is Mr. Proprietary. But for my purposes, even under the standard Windows operating system from 1990, 1991, you write the code, you can hand it to somebody else and they can run it. Bill Gates has nothing to say about it. So it's funny to think that by moving in Steve Jobs's direction it actually ends up far more proprietary.\"   \u00a0    \n \n \n  External links   [  edit  ]   \n \n \n   \n Wikimedia Commons has media related to    Internet applications   . \n \n \n \n  HTML5 Draft recommendation , changes to HTML and related APIs to ease authoring of web-based applications. \n  The Other Road Ahead  \u2014 An article arguing that the future lies on the server, not rich interfaces on the client \n  Web Applications  on the  Open Directory Project  \n  Web Applications Working Group  at the  World Wide Web Consortium  (W3C) \n \n \n \n    "}, {"title": "Web server", "rank": 0.09199815252814941, "url": "http://en.wikipedia.org/wiki/Web_server", "links": ["http://en.wikipedia.org/wiki/Dell_PowerEdge", "http://en.wikipedia.org/wiki/Rack_mount", "http://en.wikipedia.org/wiki/Sun_Microsystems", "http://en.wikipedia.org/wiki/Sun_Fire", "http://en.wikipedia.org/wiki/Computer_hardware", "http://en.wikipedia.org/wiki/Software", "http://en.wikipedia.org/wiki/Web_content", "http://en.wikipedia.org/wiki/Internet", "http://en.wikipedia.org/wiki/Website", "http://en.wikipedia.org/wiki/Online_game"], "body": "  \n \n \n     \n \n  This article  needs additional citations for  verification  .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and removed.    (March 2009)    \n \n \n \n    \n \n     \nThe inside and front of a  Dell PowerEdge  web server, a computer designed for  rack mounting  \n \n \n \n    \n \n     \nMultiple web servers may be used for a high traffic website, here four  Sun   Fire  X4200 servers are installed together \n \n \n The term  web server  can refer to either the  hardware  (the computer) or the  software  (the computer application) that helps to deliver  web content  that can be accessed through the  Internet .   [ 1 ]    \n The most common use of web servers is to host  websites , but there are other uses such as  gaming , data storage or running  enterprise applications . \n  \n \n \n Contents \n \n \n   1   Overview   \n   2   History   \n   3   Common features   \n   4   Path translation   \n   5   Kernel-mode and user-mode web servers   \n   6   Load limits  \n \n   6.1   Causes of overload   \n   6.2   Symptoms of overload   \n   6.3   Anti-overload techniques   \n \n \n   7   Market share   \n   8   See also   \n   9   References   \n   10   External links   \n \n \n  \n  Overview   [  edit  ]   \n The primary function of a web server is to deliver  web pages  to  clients . The communication between client and server takes place using the  Hypertext Transfer Protocol (HTTP) . Pages delivered are most frequently  HTML documents , which may include  images ,  style sheets  and  scripts  in addition to text content. \n A  user agent , commonly a  web browser  or  web crawler , initiates communication by making a  request  for a specific resource using HTTP and the server responds with the content of that resource or an  error message  if unable to do so. The resource is typically a real file on the server's  secondary storage , but this is not necessarily the case and depends on how the web server is  implemented . \n While the primary function is to serve content, a full implementation of HTTP also includes ways of receiving content from clients. This feature is used for submitting  web forms , including  uploading  of files. \n Many generic web servers also support  server-side scripting  using  Active Server Pages  (ASP),  PHP , or other  scripting languages . This means that the behaviour of the web server can be scripted in separate files, while the actual server software remains unchanged. Usually, this function is used to create HTML documents  dynamically  (\"on-the-fly\") as opposed to returning  static documents . The former is primarily used for retrieving and/or modifying information from  databases . The latter is typically much faster and more easily  cached  but cannot deliver  dynamic content . \n Web servers are not always used for serving the  World Wide Web . They can also be found  embedded  in devices such as  printers ,  routers ,  webcams  and serving only a  local network . The web server may then be used as a part of a system for monitoring and/or administering the device in question. This usually means that no additional software has to be installed on the client computer, since only a web browser is required (which now is included with most  operating systems ). \n  History   [  edit  ]   \n \n    \n \n     \nThe world's first web server, a  NeXT Computer  workstation with Ethernet, 1990, the case label reads: \"This machine is a server. DO NOT POWER IT DOWN!!\" \n \n \n In 1989  Tim Berners-Lee  proposed a new project to his employer  CERN , with the goal of easing the exchange of information between scientists by using a  hypertext  system. The project resulted in Berners-Lee writing two programs in 1990: \n \n A  browser  called  WorldWideWeb . \n The world's first web server, later known as  CERN httpd , which ran on  NeXTSTEP  \n \n Between 1991 and 1994, the simplicity and effectiveness of early technologies used to surf and exchange data through the World Wide Web helped to port them to many different operating systems and spread their use among scientific organizations and universities, and then to industry. \n In 1994 Tim Berners-Lee decided to constitute the  World Wide Web Consortium  (W3C) to regulate the further development of the many technologies involved ( HTTP ,  HTML , etc.) through a standardization process. \n  Common features   [  edit  ]   \n \n  Virtual hosting  to serve many web sites using one  IP address  \n  Large file support  to be able to serve files whose size is greater than 2\u00a0GB on 32 bit  OS  \n  Bandwidth throttling  to limit the speed of responses in order to not saturate the network and to be able to serve more clients \n  Server-side scripting  to generate  dynamic web pages , still keeping web server and website implementations separate from each other \n \n  Path translation   [  edit  ]   \n Web servers are able to map the path component of a  Uniform Resource Locator  ( URL ) into: \n \n A local file system resource (for static requests) \n An internal or external program name (for dynamic requests) \n \n For a  static request  the URL path specified by the client is relative to the web server's root directory. \n Consider the following URL as it would be requested by a client: \n \nhttp://www.example.com/path/file.html\n \n The client's  user agent  will translate it into a connection to  www.example.com  with the following HTTP 1.1 request: \n \nGET /path/file.html HTTP/1.1\nHost: www.example.com\n \n The web server on  www.example.com  will append the given path to the path of its root directory. On an  Apache server , this is commonly  /home/www  (On  Unix  machines, usually  /var/www ). The result is the local file system resource: \n \n/home/www /path/file.html \n \n The web server then reads the file, if it exists and sends a response to the client's web browser. The response will describe the content of the file and contain the file itself or an error message will return saying that the file does not exist or is unavailable. \n  Kernel-mode and user-mode web servers   [  edit  ]   \n A web server can be either implemented into the  OS   kernel , or in  user space  (like other regular applications). \n An  in-kernel web server  (like Microsoft  IIS  on Windows or  TUX  on GNU/Linux) will usually work faster, because, as part of the system, it can directly use all the hardware resources it needs, such as non-paged memory, CPU time-slices, network adapters, or buffers. \n Web servers that run in  user-mode  have to ask the system for permission to use more memory or more CPU resources. Not only do these requests to the kernel take time, but they are not always satisfied because the system reserves resources for its own usage and has the responsibility to share hardware resources with all the other running applications. Executing in user mode can also mean useless buffer copies which are another handicap for user-mode web servers. \n  Load limits   [  edit  ]   \n A web server (program) has defined load limits, because it can handle only a limited number of concurrent client connections (usually between 2 and 80,000, by default between 500 and 1,000) per  IP address  (and TCP port) and it can serve only a certain maximum number of requests per second depending on: \n \n its own settings, \n the HTTP request type, \n whether the content is static or dynamic, \n whether the content is  cached , and \n the  hardware  and  software  limitations of the OS of the computer on which the web server runs. \n \n When a web server is near to or over its limit, it becomes unresponsive. \n  Causes of overload   [  edit  ]   \n At any time web servers can be overloaded because of: \n \n Too much legitimate web traffic. Thousands or even millions of clients connecting to the web site in a short interval, e.g.,  Slashdot effect ; \n  Distributed Denial of Service  attacks. A denial-of-service attack (DoS attack) or distributed denial-of-service attack (DDoS attack) is an attempt to make a computer or network resource unavailable to its intended users; \n  Computer worms  that sometimes cause abnormal traffic because of millions of infected computers (not coordinated among them); \n  XSS viruses  can cause high traffic because of millions of infected browsers and/or web servers; \n  Internet bots  Traffic not filtered/limited on large web sites with very few resources (bandwidth, etc.); \n  Internet  (network) slowdowns, so that client requests are served more slowly and the number of connections increases so much that server limits are reached; \n Web servers ( computers ) partial unavailability. This can happen because of required or urgent maintenance or upgrade, hardware or software failures,  back-end  (e.g.,  database ) failures, etc.; in these cases the remaining web servers get too much traffic and become overloaded. \n \n  Symptoms of overload   [  edit  ]   \n The symptoms of an overloaded web server are: \n \n Requests are served with (possibly long) delays (from 1 second to a few hundred seconds). \n The web server returns an  HTTP error code , such as 500, 502, 503, 504, 408, or even  404 , which is inappropriate for an overload condition. \n The web server refuses or resets (interrupts)  TCP  connections before it returns any content. \n In very rare cases, the web server returns only a part of the requested content. This behavior can be considered a  bug , even if it usually arises as a symptom of overload. \n \n  Anti-overload techniques   [  edit  ]   \n To partially overcome above average load limits and to prevent overload, most popular web sites use common techniques like: \n \n Managing network traffic, by using:\n \n  Firewalls  to block unwanted traffic coming from bad IP sources or having bad patterns \n HTTP traffic managers to drop, redirect or rewrite requests having bad  HTTP  patterns \n  Bandwidth management  and  traffic shaping , in order to smooth down peaks in network usage \n \n \n Deploying  web cache  techniques \n Using different  domain names  to serve different (static and dynamic) content by separate web servers, i.e.:\n \n http://images.example.com \n http://www.example.com \n \n \n Using different domain names and/or computers to separate big files from small and medium sized files; the idea is to be able to fully  cache  small and medium sized files and to efficiently serve big or huge (over 10 - 1000 MB) files by using different settings \n Using many web servers (programs) per computer, each one bound to its own  network card  and  IP address  \n Using many web servers (computers) that are grouped together behind a  load balancer  so that they act or are seen as one big web server \n Adding more hardware resources (i.e.  RAM ,  disks ) to each computer \n Tuning OS parameters for hardware capabilities and usage \n Using more efficient  computer programs  for web servers, etc. \n Using other  workarounds , especially if dynamic content is involved \n \n  Market share   [  edit  ]   \n \n    \n \n     \nThe  LAMP (software bundle)  (here additionally with  Squid ), composed entirely of  free and open-source software , is a high performance and high-availability heavy duty solution for a hostile environment \n \n \n \n    \n \n     \nMarket share of major web servers \n \n \n For more details on HTTP server programs, see  Category:Web server software . \n Below is the latest statistics of the market share of the top web servers on the internet by  Netcraft   Survey May, June, July 2013 . \n \n \n Product \n Vendor \n May 2013 \n Percent \n \n \n  Apache  \n  Apache  \n 359,441,468 \n 53.42% \n \n \n  IIS  \n  Microsoft  \n 112,303,412 \n 16.69% \n \n \n  nginx  \n  NGINX, Inc.  \n 104,411,087 \n 15.52% \n \n \n  GWS  \n  Google  \n 23,029,260 \n 3.42% \n \n \n \n \n Product \n June 2013 \n Percent \n July 2013 \n Percent \n Change \n \n \n Apache \n 358,974,045 \n 53.34% \n 364,696,792 \n 52.19% \n -1.15% \n \n \n IIS \n 115,920,681 \n 17.22% \n 137,351,211 \n 19.65% \n +2.43% \n \n \n nginx \n 97,991,191 \n 14.56% \n 95,017,255 \n 13.60% \n -0.96% \n \n \n GWS \n 26,036,616 \n 3.87% \n 27,406,059 \n 3.92% \n +0.05% \n \n \n   \n  See also   [  edit  ]   \n \n  Application server  \n  Comparison of lightweight web servers  \n  Comparison of web server software  \n  HTTP compression  \n  Open source web application  \n  SSI ,  CGI ,  SCGI ,  FastCGI ,  PHP ,  Java Servlet ,  JavaServer Pages ,  ASP ,  ASP.NET ,  SAPI  \n  Variant object  \n  Virtual hosting  \n  Web hosting service  \n  Web service  \n \n  References   [  edit  ]   \n \n \n    ^       \"What is web server?'\" .  webdevelopersnotes . 2010-11-23 . Retrieved 2010-11-23 .   \u00a0    \n \n \n  External links   [  edit  ]   \n \n  RFC 2616 , the  Request for Comments  document that defines the  HTTP  1.1 protocol. \n  C64WEB.COM \u00a0\u2014  Commodore 64  running as a web server using  Contiki  \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n Website management \n \n \n \n  \n \n \n Concepts \n \n \n \n  Overselling  \n  Web document  \n  Web content  \n  Web content lifecycle  \n  Web hosting service  \n  Web server  \n  Webmaster  \n  Website governance  \n \n \n \n \n \n  \n \n \n  Web hosting control panels  ( comparison ) \n \n \n \n  AlternC  \n  Baifox  \n  cPanel  \n  DirectAdmin  \n  Domain Technologie Control  \n  Froxlor  \n  GNUPanel  \n  H-Sphere  \n  i-MSCP  \n  InterWorx  \n  ISPConfig  \n  ispCP  \n  Kloxo  \n  Plesk  \n  SysCP  \n  Usermin  \n  Webmin  \n \n \n \n \n \n  \n \n \n  Domain name  managers and  registrars  \n \n \n \n  Afilias  \n  AusRegistry  \n  CZ.NIC  \n  CIRA  \n  CNNIC  \n  DENIC  \n  DNS Belgium  \n  Domainz  \n  Dynadot  \n [[ EnCirca ]] \n  eNom  \n  Gandi  \n  Go Daddy  \n  Hover  \n  Melbourne IT  \n  Museum Domain Management Association  \n  Name.com  \n  Namecheap  \n  Network Solutions  \n  Net4  \n  Neustar  \n  NIC M\u00e9xico  \n  OLM.net  \n  Register.com  \n  Tucows  \n  UK2  \n  Web.com  \n \n \n \n \n \n  \n \n \n  Web content management system  \n \n \n \n  Conference management system  \n  Document management system  \n  Wiki software  \n  Blog software  \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "XMLHttpRequest", "rank": 1.5817723148085612e-07, "url": "http://en.wikipedia.org/wiki/XMLHttpRequest", "links": ["http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol", "http://en.wikipedia.org/wiki/HTTP_persistent_connection", "http://en.wikipedia.org/wiki/HTTP_compression", "http://en.wikipedia.org/wiki/HTTP_Secure", "http://en.wikipedia.org/wiki/OPTIONS_(HTTP)", "http://en.wikipedia.org/wiki/HEAD_(HTTP)", "http://en.wikipedia.org/wiki/POST_(HTTP)", "http://en.wikipedia.org/wiki/PUT_(HTTP)", "http://en.wikipedia.org/wiki/DELETE_(HTTP)", "http://en.wikipedia.org/wiki/TRACE_(HTTP)"], "body": "  \n \n  HTTP  \n \n \n \n \n  Persistence  \n  Compression  \n  HTTPS  \n \n \n \n \n  Request methods  \n \n \n \n \n  OPTIONS  \n  GET  \n  HEAD  \n  POST  \n  PUT  \n  DELETE  \n  TRACE  \n  CONNECT  \n  PATCH  \n \n \n \n \n  Header fields  \n \n \n \n \n  Cookie  \n  ETag  \n  Location  \n  HTTP referer  \n  DNT  \n  X-Forwarded-For  \n \n \n \n \n  Status codes  \n \n \n \n \n  301 Moved Permanently  \n  302 Found  \n  303 See Other  \n  403 Forbidden  \n  404 Not Found  \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n \n \n \n  XMLHttpRequest  ( XHR ) is an  API  available to  web browser   scripting languages  such as  JavaScript . It is used to send  HTTP  or  HTTPS  requests to a  web server  and load the server response data back into the script.   [ 1 ]    Development versions of all major browsers support  URI schemes  beyond http: and https:, in particular,  blob : URLs are supported.   [ 2 ]    \n The name was standardized to  XMLHttpRequest  for compatibility. It may be misleading, in particular because any textual data may be received from the server, not just  XML .   [ 3 ]    Data are also commonly received as  JSON ,   [ 4 ]     HTML , or as  plain text .   [ 5 ]    Data from the response can be used to alter the current document in the browser window without loading a new  web page . The response data can also be  evaluated  by client-side scripting. For example, if it was formatted as  JSON  by the web server, it can be converted into a client-side data  object  for further use. \n XMLHttpRequest has an important role in the  Ajax  web development technique. It is currently used by many websites to implement responsive and dynamic  web applications . \n XMLHttpRequest is subject to the browser's  same-origin policy : for security reasons, requests will only succeed if they are made to the same server that served the original web page. \n  \n \n \n Contents \n \n \n   1   History and support  \n \n   1.1   Support in Internet Explorer versions 5, 5.5, and 6   \n \n \n   2   HTTP request  \n \n   2.1   The  open  method   \n   2.2   The  setRequestHeader  method   \n   2.3   The  send  method   \n   2.4   The  onreadystatechange  event listener   \n   2.5   The  abort  method   \n   2.6   The HTTP response   \n \n \n   3   Cross-domain requests   \n   4   See also   \n   5   References   \n   6   External links  \n \n   6.1   Specifications   \n   6.2   Browsers   \n   6.3   Other   \n \n \n \n \n  \n  History and support   [  edit  ]   \n The concept behind the  XMLHttpRequest  object was originally created by the developers of  Outlook Web Access  (by Microsoft) for  Microsoft Exchange Server 2000 .   [ 6 ]    An  interface  called  IXMLHTTPRequest  was developed and implemented into the second version of the  MSXML  library using this concept.   [ 6 ]      [ 7 ]    The second version of the MSXML library was shipped with  Internet Explorer 5.0  in March 1999, allowing access, via  ActiveX , to the  IXMLHTTPRequest  interface using the   XMLHTTP    wrapper  of the MSXML library.   [ 8 ]    \n The  Mozilla  project developed and implemented an interface called  nsIXMLHttpRequest  into the  Gecko  layout engine. This interface was modeled to work as closely to Microsoft's  IXMLHTTPRequest  interface as possible.   [ 9 ]      [ 10 ]    Mozilla created a wrapper to use this interface through a JavaScript object which they called   XMLHttpRequest  .   [ 11 ]    The  XMLHttpRequest  object was accessible as early as Gecko version 0.6 released on December 6 of 2000,   [ 12 ]      [ 13 ]    but it was not completely functional until as late as version 1.0 of Gecko released on June 5, 2002.   [ 12 ]      [ 13 ]    The  XMLHttpRequest  object became a   de facto  standard  in other major web clients, implemented in  Safari  1.2 released in February 2004,   [ 14 ]     Konqueror ,  Opera  8.0 released in April 2005,   [ 15 ]    and  iCab  3.0b352 released in September 2005.   [ 16 ]    \n The  World Wide Web Consortium  published a  Working Draft  specification for the  XMLHttpRequest  object on April 5, 2006,  edited  by Anne van Kesteren of  Opera Software  and Dean Jackson of W3C.   [ 17 ]    Its goal is \"to document a minimum set of interoperable features based on existing implementations, allowing Web developers to use these features without platform-specific code.\" The last revision to the XMLHttpRequest object specification was on November 19 of 2009, being a last call working draft.   [ 18 ]       [ 19 ]    \n Microsoft added the  XMLHttpRequest  object identifier to its scripting languages in  Internet Explorer 7.0  released in October 2006.   [ 8 ]    \n With the advent of cross-browser JavaScript libraries such as  jQuery  and the  Prototype JavaScript Framework , developers can invoke XMLHttpRequest functionality without coding directly to the API. Prototype provides an asynchronous requester object called  Ajax.Request  that wraps the browser's underlying implementation and provides access to it.   [ 20 ]    jQuery objects represent or wrap  elements  from the current client-side DOM. They all have a  .load()  method that takes a URI parameter and makes an XMLHttpRequest to that URI, then by default places any returned HTML into the HTML element represented by the jQuery object.   [ 21 ]      [ 22 ]    \n The W3C has since published another  Working Draft  specification for the  XMLHttpRequest  object, \"XMLHttpRequest Level 2\", on February 25 of 2008.   [ 23 ]    Level 2 consists of extended functionality to the   XMLHttpRequest   object, including, but not currently limited to, progress events, support for cross-site requests, and the handling of byte streams. The latest revision of the XMLHttpRequest Level 2 specification is that of 16 August 2011, which is still a working draft.   [ 24 ]    \n As of 5\u00a0December\u00a02011 \u00a0( 2011-12-05 )   [update]  , XMLHttpRequest   [ 25 ]    version 2 has been merged into the main XMLHttpRequest specification, and there is no longer a version 1 and a version 2. \n  Support in Internet Explorer versions 5, 5.5, and 6   [  edit  ]   \n Internet Explorer versions 5 and 6 did not define the XMLHttpRequest object identifier in their scripting languages as the XMLHttpRequest identifier itself was not standard at the time of their releases.   [ 8 ]     Backward compatibility  can be achieved through object detection if the XMLHttpRequest identifier does not exist.   [ 26 ]    \n Web pages that use XMLHttpRequest or XMLHTTP can mitigate the current minor differences in the implementations either by encapsulating the XMLHttpRequest object in a  JavaScript  wrapper, or by using an existing framework that does so. In either case, the wrapper should detect the abilities of current implementation and work within its requirements. \n Until 8 April 2014 Microsoft will support Windows XP and so Internet Explorer 6 - a JavaScript encapsulation example is provided below. \n \n \n \n /*\n   Provide the XMLHttpRequest constructor for Internet Explorer 5.x-6.x:\n   Other browsers (including Internet Explorer 7.x-9.x) do not redefine\n   XMLHttpRequest if it already exists.\n \n   This example is based on findings at:\n   http://blogs.msdn.com/xmlteam/archive/2006/10/23/using-the-right-version-of-msxml-in-internet-explorer.aspx\n*/ \n if   (  typeof  XMLHttpRequest  ===   \"undefined\"  )   { \n  XMLHttpRequest  =   function   (  )   { \n     try   {   return   new  ActiveXObject (  \"Msxml2.XMLHTTP.6.0\"  )  ;   } \n     catch   ( e )   {  } \n     try   {   return   new  ActiveXObject (  \"Msxml2.XMLHTTP.3.0\"  )  ;   } \n     catch   ( e )   {  } \n     try   {   return   new  ActiveXObject (  \"Microsoft.XMLHTTP\"  )  ;   } \n     catch   ( e )   {  } \n     throw   new  Error (  \"This browser does not support XMLHttpRequest.\"  )  ; \n   }  ; \n } \n  \n \n  HTTP request   [  edit  ]   \n \n \n \n     \n \n  This section  does not  cite  any  references or sources  .  Please help improve this section by  adding citations to reliable sources . Unsourced material may be challenged and  removed .    (October 2010)    \n \n \n The following sections demonstrate how a request using the XMLHttpRequest object functions within a conforming user agent based on the W3C Working Draft. As the W3C standard for the XMLHttpRequest object is still a draft, user agents may not abide by all the functionings of the W3C definition and any of the following is subject to change. Extreme care should be taken into consideration when scripting with the XMLHttpRequest object across multiple user agents. This article will try to list the inconsistencies between the major user agents. \n  The  open  method   [  edit  ]   \n \n \n \n   \n \n  This article  may be  confusing or unclear  to readers .  Please help us  clarify the article ; suggestions may be found on the  talk page .    (October 2010)    \n \n \n The  HTTP  and  HTTPS  requests of the XMLHttpRequest object must be initialized through the   open    method . This method must be  invoked  prior to the actual sending of a request to validate and resolve the request method,  URL , and  URI  user information to be used for the request. This method does not assure that the URL exists or the user information is correct. This method can accept up to five  parameters , but requires only two, to initialize a request. \n \nopen( Method, URL, Asynchronous, UserName, Password )\n \n The first parameter of the method is a  text string  indicating the HTTP request method to use. The request methods that must be supported by a conforming  user agent , defined by the  W3C  draft for the XMLHttpRequest object, are currently listed as the following.   [ 27 ]    \n \n  GET  (Supported by  Internet Explorer 7  (and later),  Mozilla 1+ ) \n  POST  (Supported by Internet Explorer 7 (and later), Mozilla 1 (and later)) \n  HEAD  (Supported by Internet Explorer 7 (and later)) \n  PUT  \n  DELETE  \n  OPTIONS  (Supported by Internet Explorer 7 (and later)) \n \n However, request methods are not limited to the ones listed above. The W3C draft states that a browser may support additional request methods at their own discretion. \n The second parameter of the method is another  text string , this one indicating the  URL  of the HTTP request. The W3C recommends that browsers should raise an error and not allow the request of a  URL  with either a different  port  or  ihost   URI  component from the current document.   [ 28 ]    \n The third parameter, a  boolean  value indicating whether or not the request will be asynchronous, is not a required parameter by the W3C draft. The default value of this parameter should be assumed to be true by a W3C conforming user agent if it is not provided. An asynchronous request (\"true\") will not wait on a server response before continuing on with the execution of the current script. It will instead  invoke  the onreadystatechange  event listener  of the XMLHttpRequest object throughout the various stages of the request. A synchronous request (\"false\") however will block execution of the current script until the request has been completed, thus not invoking the   onreadystatechange   event listener. \n The fourth and fifth parameters are the  username  and  password , respectively. These parameters, or just the username, may be provided for authentication and authorization if required by the server for this request. \n  The  setRequestHeader  method   [  edit  ]   \n Upon successful initialization of a request, the   setRequestHeader   method of the XMLHttpRequest object can be invoked to send  HTTP headers  with the request. \n \nsetRequestHeader( Name, Value )\n \n The first parameter of this method is the text string name of the header. The second parameter is the text string value. This method must be invoked for each header that needs to be sent with the request. Any headers attached here will be removed the next time the  open  method is invoked in a W3C conforming user agent. \n  The  send  method   [  edit  ]   \n To send an HTTP request, the   send   method of the XMLHttpRequest must be invoked. This method accepts a single parameter containing the content to be sent with the request. \n \nsend( Data )\n \n This parameter may be omitted if no content needs to be sent. The W3C draft states that this parameter may be any type available to the scripting language as long as it can be turned into a text string, with the exception of the DOM   document   object. If a user agent cannot serialise the parameter, then the parameter should be ignored. Firefox 3.0.x and previous versions will however throw an exception if  send  is called without an argument.   [ 29 ]    \n If the parameter is a DOM  document  object, a user agent should assure the document is turned into well-formed XML using the encoding indicated by the  inputEncoding  property of the  document  object. If the  Content-Type  request header was not added through  setRequestHeader  yet, it should automatically be added by a conforming user agent as \"application/xml;charset= charset ,\" where  charset  is the encoding used to encode the document. \n If the user agent is configured to use a  proxy server , then the XMLHttpRequest object will modify the request appropriately so as to connect to the proxy instead of the origin server, and send  Proxy-Authorization  headers as configured. \n  The  onreadystatechange  event listener   [  edit  ]   \n If the  open  method of the XMLHttpRequest object was invoked with the third parameter set to  true  for an asynchronous request, the  onreadystatechange  event listener will be automatically invoked for each of the following actions that change the  readyState  property of the XMLHttpRequest object. \n State changes work like this: \n \n After the  open  method has been invoked successfully, the  readyState  property of the XMLHttpRequest object should be assigned a value of 1. \n After the  send  method has been invoked and the HTTP response headers have been received, the  readyState  property of the XMLHttpRequest object should be assigned a value of 2. \n Once the HTTP response content begins to load, the  readyState  property of the XMLHttpRequest object should be assigned a value of 3. \n Once the HTTP response content has finished loading, the  readyState  property of the XMLHttpRequest object should be assigned a value of 4. \n \n The listener will only respond to state changes which occur after the listener is defined. To detect states 1 and 2, the listener must be defined before the open method is invoked. The open method must be invoked before the send method is invoked. \n \n \n \nxmlhttp. onreadystatechange   =   function  (  )   { \n     if   ( xmlhttp. readyState   ===   4  )  { \n        alert ( xmlhttp. readyState  )  ; \n     } \n }  ; \nxmlhttp. open  (  'GET'  ,   'somepage.xml'  ,   true  )  ; \nxmlhttp. setRequestHeader  (  'X-Requested-With'  ,   'XMLHttpRequest'  )  ;    // Tells server that this call is made for ajax purposes. \n                                                                  // Most libraries like jQuery/Prototype/Dojo do this \nxmlhttp. send  (  null  )  ;    // No data need to send along with the request. \n  \n \n  The  abort  method   [  edit  ]   \n This method aborts the request if the  readyState  of the XMLHttpRequest object has not yet become 4.   [ 30 ]    The  abort  method ensures that the callback handler does not get invoked in an asynchronous request. \n \nabort( )\n \n Some AJAX libraries use the  abort  method to cancel potential duplicate or out-of-order requests.   [ 31 ]    \n  The HTTP response   [  edit  ]   \n After a successful and completed call to the  send  method of the XMLHttpRequest, if the server response was  valid XML  and the   Content-Type   header sent by the server is understood by the user agent as an  Internet media type  for XML, the   responseXML   property of the XMLHttpRequest object will contain a DOM document object. Another property,   responseText   will contain the response of the server in plain text by a conforming user agent, regardless of whether or not it was understood as XML. \n  Cross-domain requests   [  edit  ]   \n In the early development of the  World Wide Web , it was found possible to breach users' security by the use of JavaScript to exchange information from one web site with that from another less reputable one. All modern browsers therefore implement a  same origin policy  that prevents many such attacks, such as  cross-site scripting . XMLHttpRequest data is subject to this security policy, but sometimes web developers want intentionally to circumvent its restrictions. This is sometimes due to the legitimate use of subdomains as, for example, making an XMLHttpRequest from a page created by  foo.example.com  for information from  bar.example.com  will normally fail. \n Various alternatives exist to circumvent this security feature, including using  JSONP ,  Cross-Origin Resource Sharing  (CORS) or alternatives with plugins such as Flash or Silverlight. Cross-origin XMLHttpRequest is specified in W3C's XMLHttpRequest Level 2 specification   [ 32 ]    and it is supported by all modern browsers (desktop and mobile).   [ 33 ]    \n Internet Explorer did not implement CORS until version 10. The two previous versions (8 and 9) offered similar functionality through the XDomainRequest API. This API has several restrictions, including but not limited to: denial of setting custom request headers and omission of  cookies . Further, only the GET and POST  request methods  are supported. In practice, the POST method is barely useful, because the only allowed value for the Content-Type request header is \"text/plain\", while many server-side frameworks require \"application/x-www-urlencoded\" to function properly.   [ 34 ]    \n  See also   [  edit  ]   \n \n  WebSocket  \n  Hypertext Transfer Protocol  (HTTP) \n  Representational State Transfer  (REST) \n  Ajax  \n \n  References   [  edit  ]   \n \n \n    ^       \"XMLHttpRequest object explained by the W3C Working Draft\" . W3.org . Retrieved 2009-07-14 .   \u00a0    \n    ^      http://dev.w3.org/2006/webapi/FileAPI/   \n    ^       \"The responseXML attribute of the XMLHttpRequest object explained by the W3C Working Draft\" . W3.org . Retrieved 2009-07-14 .   \u00a0    \n    ^       \"Response entity body of XMLHttpRequest, W3C Editor's Draft\" . W3.org. 2012-02-06 . Retrieved 2012-02-05 .   \u00a0    \n    ^       \"The responseText attribute of the XMLHttpRequest object explained by the W3C Working Draft\" . W3.org . Retrieved 2009-07-14 .   \u00a0    \n  ^     a         b         \"Article on the history of XMLHTTP by an original developer\" . Alexhopmann.com. 2007-01-31 . Retrieved 2009-07-14 .   \u00a0    \n    ^       \"Specification of the IXMLHTTPRequest interface from the Microsoft Developer Network\" . Msdn.microsoft.com . Retrieved 2009-07-14 .   \u00a0    \n  ^     a         b         c        Dutta, Sunava (2006-01-23).  \"Native XMLHTTPRequest object\" .  IEBlog . Microsoft . Retrieved 2006-11-30 .   \u00a0    \n    ^       \"Specification of the nsIXMLHttpRequest interface from the Mozilla Developer Center\" . Developer.mozilla.org. 2008-05-16 . Retrieved 2009-07-14 .   \u00a0    \n    ^       \"Specification of the nsIJSXMLHttpRequest interface from the Mozilla Developer Center\" . Developer.mozilla.org. 2009-05-03 . Retrieved 2009-07-14 .   \u00a0    \n    ^       \"Specification of the XMLHttpRequest object from the Mozilla Developer Center\" . Developer.mozilla.org. 2009-05-03 . Retrieved 2009-07-14 .   \u00a0    \n  ^     a         b         \"Version history for the Mozilla Application Suite\" . Mozilla.org . Retrieved 2009-07-14 .   \u00a0    \n  ^     a         b         \"Downloadable, archived releases for the Mozilla browser\" . Archive.mozilla.org . Retrieved 2009-07-14 .   \u00a0    \n    ^       \"Archived news from Mozillazine stating the release date of Safari 1.2\" . Weblogs.mozillazine.org . Retrieved 2009-07-14 .   \u00a0    \n    ^       \"Press release stating the release date of Opera 8.0 from the Opera website\" . Opera.com. 2005-04-19 . Retrieved 2009-07-14 .   \u00a0    \n    ^      Soft-Info.org.  \"Detailed browser information stating the release date of iCab 3.0b352 from\" . Soft-Info.com . Retrieved 2009-07-14 .   \u00a0    \n    ^       \"Specification of the XMLHttpRequest object from the Level 1 W3C Working Draft released on April 5th, 2006\" . W3.org . Retrieved 2009-07-14 .   \u00a0    \n    ^       \"XMLHttpRequest W3C Working Draft 19 November 2009\" . W3.org . Retrieved 2009-12-17 .   \u00a0    \n    ^       \"W3C Process Document, Section 7.4.2 Last Call Announcement\" . W3.org . Retrieved 2009-12-17 .   \u00a0    \n    ^      Porteneuve, Christophe (2007). \"9\". In Daniel H Steinberg. Raleigh, North Carolina: Pragmatic Bookshelf. p.\u00a0183.  ISBN \u00a0 1-934356-01-8 .   \u00a0     |accessdate=  requires  |url=  ( help )   \n    ^      Chaffer, Jonathan; Karl Swedberg (2007).  Learning jQuery . Birmingham: Packt Publishing. p.\u00a0107.  ISBN \u00a0 978-1-84719-250-9 .   \u00a0    Cite uses deprecated parameters ( help );    |accessdate=  requires  |url=  ( help )   \n    ^      Chaffer, Jonathan; Karl Swedberg (2007).  jQuery Reference Guide . Birmingham: Packt Publishing. p.\u00a0156.  ISBN \u00a0 978-1-84719-381-0 .   \u00a0    Cite uses deprecated parameters ( help );    |accessdate=  requires  |url=  ( help )   \n    ^       \"Specification of the XMLHttpRequest object from the Level 2 W3C Working Draft released on February 25th, 2008\" . W3.org . Retrieved 2009-07-14 .   \u00a0    \n    ^       \"XMLHttpRequest Level 2, W3C Working Draft (Latest Version)\" . W3.org . Retrieved 2010-11-19 .   \u00a0    \n    ^       \"XMLHttpRequest Editor's Draft 5 December 2011\" . w3.org . Retrieved 5 December 2011 .   \u00a0    \n    ^       \"Ajax Reference (XMLHttpRequest object)\" . JavaScript Kit. 2008-07-22 . Retrieved 2009-07-14 .   \u00a0    \n    ^       \"Dependencies of the XMLHttpRequest object explained by the W3C Working Draft\" . W3.org . Retrieved 2009-07-14 .   \u00a0    \n    ^       \"The \"open\" method of the XMLHttpRequest object explained by the W3C Working Draft\" . W3.org . Retrieved 2009-10-13 .   \u00a0    \n    ^     Test-Driven JavaScript Development, Christian Johansen, ADDISON-WESLEY, 2010, p. 270  \n    ^       \"XMLHttpRequest - Document Object Model (DOM)\" . Mozilla . Retrieved 2013-04-05 .   \u00a0    \n    ^       \"In-Order AJAX Handling\" . Antradar Software. 2012-03-10 . Retrieved 2013-04-20 .   \u00a0    \n    ^       \"XMLHttpRequest Level 2\"  . Retrieved 2013-11-14 .   \u00a0    \n    ^       \"Can I use Cross-Origin Resource Sharing?\"  . Retrieved 2013-11-14 .   \u00a0    \n    ^       \"XDomainRequest - Restrictions, Limitations and Workarounds\"  . Retrieved 2013-11-14 .   \u00a0    \n \n \n  External links   [  edit  ]   \n \n \n   \n Wikibooks has a book on the topic of:    XMLHttpRequest    \n \n \n  Specifications   [  edit  ]   \n \n  XMLHttpRequest (level 1) specification  from W3C (abandoned Candidate Recommendation) \n  XMLHttpRequest level 2 specification  from W3C (Working Draft)\n \n  Cross-Origin Resource Sharing  \n  Progress Events 1.0  \n \n \n \n  Browsers   [  edit  ]   \n \n MSDN Library\n \n  Specification of the XMLHttpRequest object for Microsoft developers  \n  XDomainRequest  \n \n \n  Specification of the XMLHttpRequest object for Mozilla developers  \n  Specification of the XMLHttpRequest object for Opera developers  \n \n  Other   [  edit  ]   \n \n  New Tricks in XMLHttpRequest2 , online tutorial by Eric Bidelman (Developer Relations, Google) \n  \"Attacking AJAX Applications\" , a presentation given at the  Black Hat  security conference. Discusses several issues involving XHR and the future of cross-domain Ajax. \n  [1]  Support end of Windows XP \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Internet Explorer  \n \n \n \n  \n \n \n  Versions  \n \n  \n \n \n \n Main \n \n \n \n \n  1  \n  2  \n  3  \n  4  \n  5  \n  6  \n  7  \n  8  \n  9  \n  10  \n  11  \n \n \n \n \n \n  \n \n \n \n Other \n \n \n \n \n  Mobile  \n   for Mac   \n  for UNIX  \n  IEs4Linux  \n \n \n \n \n \n \n \n     \n \n \n \n  \n \n \n Overview \n \n \n \n  History  \n  Add-ons  \n  Box model  \n  Browser Helper Object (BHO)  \n  Easter eggs  \n  Extensions  \n  Removal  \n  Shells  \n \n \n \n \n \n  \n \n \n Technologies \n \n \n \n  Accelerator  \n  ActiveX  \n  Dynamic HTML \n \n  HTA  \n  HTML Components  \n \n \n  favicon.ico  \n  HTML+TIME  \n  Index.dat  \n  JScript  \n  MHTML  \n  MSXML  \n  RSS Platform  \n  Smart tags  \n  Temporary Internet Files  \n  Vector Markup Language  \n  Web Slice  \n  WPAD  \n  XHR/XDomainRequest  \n \n \n \n \n \n  \n \n \n Software &amp; engines \n \n \n \n  Administration Kit  \n  Developer Tools  \n  Integrated Windows Authentication  \n  Tasman  \n  Trident \n \n  Chakra  \n \n \n \n \n \n \n \n  \n \n \n Implementations \n \n \n \n  Active Channel  \n  Active Desktop  \n  ActiveMovie  \n  Channel Definition Format (.cdf)  \n  Comic Chat/Chat 2.0  \n  DirectX Media  \n  Internet Mail and News  \n  Microsoft Java Virtual Machine (MSJVM)  \n  MSN Explorer  \n  MSN for Mac OS X  \n  NetMeeting  \n  NetShow  \n  Outlook Express  \n  Server Gated Cryptography (SGC)  \n  Spyglass  \n  Windows Address Book  \n  Windows Desktop Update  \n \n \n \n \n \n  \n \n \n Events \n \n \n \n  First browser war  \n  Second browser war  \n  Download.ject  \n   Eolas v. Microsoft   \n   Sun v. Microsoft   \n   United States v. Microsoft Corp.   \n \n \n \n \n \n  \n \n \n People \n \n \n \n  Tantek \u00c7elik  \n  Dean Hachamovitch  \n  Scott Isaacs  \n \n \n \n \n \n  \n \n \n \n \n \n    Category  \n    Commons  \n      Microsoft portal  \n      Internet portal  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  World Wide Web Consortium  \n \n \n \n  \n \n \n Products and \nstandards \n \n  \n \n \n \n  Recommendations  \n \n \n \n \n  Canonical XML  \n  CDF  \n  CSS  \n  DOM  \n  Geolocation API  \n  HTML  \n  ITS  \n  MathML  \n  OWL  \n  P3P  \n  PLS  \n  RDF  \n  RDF Schema  \n  SISR  \n  SKOS  \n  SMIL  \n  SOAP  \n  SRGS  \n  SSML  \n  SVG  \n  SPARQL  \n  Timed Text  \n  VoiceXML  \n  WSDL  \n  XForms  \n  XHTML  \n  XHTML+RDFa  \n  XInclude  \n  XLink  \n  XML  \n  XML Base  \n  XML Encryption  \n  XML Events  \n  XML Information Set  \n  XML namespace  \n  XML Schema  \n  XML Signature  \n  XOP  \n  XPath   1.0 ,  2.0  \n  XPointer  \n  XProc  \n  XQuery  \n  XSL  \n  XSL-FO  \n  XSLT   ( elements )  \n \n \n \n \n \n  \n \n \n \n Notes \n \n \n \n \n  XAdES  \n  XHTML+SMIL  \n  XUP  \n \n \n \n \n \n  \n \n \n \n Working drafts \n \n \n \n \n  CCXML  \n  CURIE  \n  HTML5  \n  InkML  \n  JSON-LD  \n  RIF  \n  SCXML  \n  SMIL Timesheets  \n  sXBL  \n  WICD  \n  XFDL  \n  XFrames  \n  XBL  \n  XMLHttpRequest  \n \n \n \n \n \n  \n \n \n \n Guidelines \n \n \n \n \n  Web Content Accessibility Guidelines  \n \n \n \n \n \n  \n \n \n \n Initiative \n \n \n \n \n  Multimodal Interaction Activity  \n  Markup Validation Service  \n  Web Accessibility Initiative  \n  WebPlatform  \n \n \n \n \n \n  \n \n \n \n Deprecated \n \n \n \n \n  C-HTML  \n  HDML  \n  JSSS  \n  PGML  \n  VML  \n  XHTML+MathML+SVG  \n \n \n \n \n \n \n \n \n  \n \n \n Organizations \n \n \n \n  World Wide Web Foundation  \n  SVG Working Group  \n  CSS Working Group  \n  HTML Working Group  \n  WebOnt  \n  W3C Device Description Working Group  \n  WHATWG  \n \n \n \n \n \n  \n \n \n Software \n \n \n \n  Agora  \n  Argo  \n  Arena  \n  Amaya  \n  CERN httpd  \n  Libwww  \n  Line Mode Browser  \n \n \n \n \n \n  \n \n \n Conference-related \n \n \n \n  IW3C2  \n  World Wide Web Conference  \n  WWW1  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Web interfaces  \n \n \n \n  \n \n \n  Server-side  \n \n  \n \n \n \n  Protocols  \n \n \n \n \n  CGI  \n  SCGI  \n  FCGI  \n  AJP  \n \n \n \n \n \n  \n \n \n \n  APIs  \n \n \n \n \n  C NSAPI  \n  C ASAPI  \n  C ISAPI  \n  Java Servlet  \n  CIL System.Web.IHttpHandler  \n  Python WSGI  \n  Ruby Rack  \n  JavaScript JSGI  \n  Perl PSGI  \n  Lua WSAPI  \n \n \n \n \n \n  \n \n \n \n  Apache modules  \n \n \n \n \n  mod_jk  \n  mod_lisp  \n  mod_mono  \n  mod_parrot  \n  mod_perl  \n  mod_php  \n  mod_proxy  \n  mod_python  \n  mod_wsgi  \n  mod_ruby  \n  Phusion Passenger  \n \n \n \n \n \n  \n \n \n \n Topics \n \n \n \n \n  Web resource  vs.  Web service  \n  Application server \n \n  comparison  \n \n \n \n \n \n \n \n \n \n \n  \n \n \n  Client-side  \n \n  \n \n \n \n  W3C  \n \n \n \n \n  Audio  \n  Canvas  \n  CORS  \n  File API  \n  Geolocation  \n  IndexedDB  \n  Microdata  \n  SVG  \n  Video  \n  WebRTC  \n  WebSocket  \n  Web messaging  \n  Web storage  \n  Web worker  \n  XMLHttpRequest  \n \n \n \n \n \n  \n \n \n \n  Khronos  \n \n \n \n \n  WebCL  \n  WebGL  \n \n \n \n \n \n  \n \n \n \n Others \n \n \n \n \n  Gears  \n  Web SQL Database  (formerly W3C) \n \n \n \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Object (computer science)", "rank": 1.5817656930299594e-07, "url": "http://en.wikipedia.org/wiki/Object_(computer_science)", "links": ["http://en.wikipedia.org/wiki/Computer_science", "http://en.wikipedia.org/wiki/Value_(computer_science)", "http://en.wikipedia.org/wiki/Identifier", "http://en.wikipedia.org/wiki/Variable_(computer_science)", "http://en.wikipedia.org/wiki/Subroutine", "http://en.wikipedia.org/wiki/Data_structure", "http://en.wikipedia.org/wiki/Object-oriented_programming", "http://en.wikipedia.org/wiki/Class_(computer_science)", "http://en.wikipedia.org/wiki/Database", "http://en.wikipedia.org/wiki/Object-based_language"], "body": "  In  computer science , an  object  is a location in memory having a  value  and referenced by an  identifier . An object can be a  variable ,  function , or  data structure . In the  object-oriented programming  paradigm,\"object,\" refers to a particular instance of a  class . In relational  Database  management an object can be a table or column, or an association between data and a database entity (such as relating a person's age to a specific person).   [ 1 ]    \n  \n \n \n Contents \n \n \n   1   Object-based languages   \n   2   Object-oriented programming   \n   3   Specialized objects   \n   4   Distributed objects   \n   5   Objects and the Semantic Web   \n   6   See also   \n   7   References   \n   8   External links   \n \n \n  \n  Object-based languages   [  edit  ]   \n Main article:  Object-based language  \n An important distinction in programming languages is the difference between an object-oriented language and an object-based language. A language is usually considered object-based if it includes the basic capabilities for an object: identity, properties, and attributes. A language is considered object-oriented if it is object-based and also has the capability of polymorphism and inheritance. Polymorphism refers to the ability to overload the name of a function with multiple behaviors based on which object(s) are passed to it. Conventional message passing discriminates only on the first object and considers that to be \"sending a message\" to that object. However, some OOP languages such as  Flavors  and the  Common Lisp Object System  (CLOS) enable discriminating on more than the first parameter of the function.   [ 2 ]    Inheritance is the ability to subclass an object class, to create a new class that is a subclass of an existing one and inherits all the data constraints and behaviors of it's parents but also changes one or more of them.   [ 3 ]       [ 4 ]    \n  Object-oriented programming   [  edit  ]   \n Main article:  Object-oriented programming  \n Object-Oriented programming is an approach to designing modular reusable software systems. The object-oriented approach is fundamentally a modelling approach.   [ 5 ]    The object-oriented approach is an evolution of good design practices that go back to the very beginning of computer programming. Object-orientation is simply the logical extension of older techniques such as  structured programming  and  abstract data types . An object is an abstract data type with the addition of  polymorphism  and  inheritance . \n Rather than structure programs as code and data an object-oriented system integrates the two using the concept of an \"object\". An object has state (data) and behavior (code). Objects correspond to things found in the real world. So for example, a graphics program will have objects such as  circle ,  square ,  menu . An online shopping system will have objects such as  shopping cart, customer, product, . The shopping system will support behaviors such as  place order ,  make payment , and  offer discount . The objects are designed as class hierarchies. So for example with the shopping system there might be high level classes such as  electronics product ,  kitchen product , and  book . There may be further refinements for example under  electronic products :  CD Player, DVD player , etc. These classes and subclasses correspond to sets and subsets in mathematical logic.    [ 6 ]       [ 7 ]    \n  Specialized objects   [  edit  ]   \n An important concept for objects is the  design pattern . A design pattern provides a reusable template to address a common problem. The following object descriptions are examples of some of the most common design patterns for objects.   [ 8 ]    \n \n  Function object : an object with a single method (in C++, this method would be the function operator, \"operator()\") that acts much like a function (like a C/C++ pointer to a function). \n  Immutable object : an object set up with a fixed state at creation time and which does not change afterward. \n  First-class object : an object that can be used without restriction. \n  Container : an object that can contain other objects. \n  Factory object : an object whose purpose is to create other objects. \n  Metaobject : an object from which other objects can be created (Compare with  class , which is not necessarily an object) \n  Prototype : a specialized metaobject from which other objects can be created by copying \n  God object : an object that knows  too much  or does  too much . The God object is an example of an  anti-pattern . \n  Singleton  object: An object that is the only instance of its class during the lifetime of the program. \n  Filter object  \n \n  Distributed objects   [  edit  ]   \n Main article:  Distributed object  \n The object-oriented approach is not just a programming model. It can be used equally well as an interface definition language for distributed systems. The objects in a distributed computing model tend to be larger grained, longer lasting, and more service oriented than programming objects. \n A standard method to package distributed objects is via an Interface Definition Language (IDL). An IDL shields the client of all of the details of the distributed server object. Details such as which computer the object resides on, what  programming language  it uses, what  operating system , and other platform specific issues. The IDL is also usually part of a distributed environment that provides services such as transactions and persistence to all objects in a uniform manner. Two of the most popular standards for distributed objects are the  Object Management Group's   CORBA  standard and  Microsoft's  DCOM.   [ 9 ]    \n In addition to distributed objects, a number of other extensions to the basic concept of an object have been proposed to enable distributed computing: \n \n  Protocol objects  are components of a  protocol stack  that enclose network communication within an object-oriented interface. \n   Replicated objects   are groups of distributed objects (called  replicas ) that run a distributed multi-party protocol to achieve high consistency between their internal states, and that respond to requests in a coordinated way. Examples include fault-tolerant  CORBA  objects. \n   Live distributed objects   (or simply   live objects  )   [ 10 ]    generalize the  replicated object  concept to groups of replicas that might internally use any distributed protocol, perhaps resulting in only a weak consistency between their local states. \n \n Some of these extensions, such as  distributed objects  and  protocol objects , are domain-specific terms for special types of \"ordinary\" objects used in a certain context (such as  remote invocation  or  protocol composition ). Others, such as  replicated objects  and  live distributed objects , are more non-standard, in that they abandon the usual case that an object resides in a single location at a time, and apply the concept to groups of entities (replicas) that might span across multiple locations, might have only weakly consistent state, and whose membership might dynamically change. \n  Objects and the Semantic Web   [  edit  ]   \n The  Semantic Web  is essentially a distributed objects framework. Two key technologies in the Semantic Web are the Web Ontology Language (OWL) and the Resource Description Framework (RDF). RDF provides the capability to define basic objects: names, properties, attributes, relations, that are accessible via the Internet. OWL adds a richer object model, based on set theory, that provides additional modeling capabilities such as multiple inheritance. \n OWL objects are not like standard large grained  distributed objects  accessed via an Interface Definition Language. Such an approach would not be appropriate for the Internet because the Internet is constantly evolving and standardization on one set of interfaces is difficult to achieve. OWL objects tend to be similar to the kind of objects used to define application domain models in programming languages such as Java and C++. \n However, there are important distinctions between OWL objects and traditional object-oriented programming objects. Where as traditional objects get compiled into static hierarchies usually with single inheritance, OWL objects are dynamic. An OWL object can change it's structure at run time and can become an instance of new or different classes. \n Another critical difference is the way the model treats information that is currently not in the system. Programming objects and most database systems use the  \"closed world assumption\" . If a fact is not known to the system that fact is assumed to be false. Semantic Web objects use the open world assumption, a statement is only considered false if there is actual relevant information that it is false, otherwise it is assumed to be unknown, neither true nor false. \n OWL objects are actually most like objects in artificial intelligence  frame languages  such as  KL-ONE  and Loom. \n The following table contrasts traditional objects from Object-Oriented programming languages such as Java or C++ with with Semantic Web Objects:   [ 11 ]      [ 12 ]    \n \n \n OOP Objects \n Semantic Web Objects \n \n \n Classes are regarded as types for instances. \n Classes are regarded as sets of individuals. \n \n \n Instances can not change their type at runtime. \n Class membership may change at runtime. \n \n \n The list of classes is fully known at compile-time and cannot change after that. \n Classes can be created and changed at runtime. \n \n \n Compilers are used at build-time. Compile-time errors indicate problems. \n Reasoners can be used for classification and consistency checkingat runtime or build-time. \n \n \n Classes encode much of their meaning and behavior through imperative functions and methods. \n Classes make their meaning explicit in terms of OWL statements. No imperative code can be attached. \n \n \n Instances are anonymous insofar that they cannot easily be addressed from outside of an executing program. \n All named RDF and OWL resources have a unique URI under which they can be referenced. \n \n \n Closed world: If there is not enough information to prove a statement true, then it is assumed to be false. \n Open world: If there is not enough information to prove a statement true, then it may be true or false.   [ 13 ]    \n \n \n  See also   [  edit  ]   \n \n  Object lifetime  \n  Object copy  \n  Design pattern (computer science)  \n  Business object (computer science)  \n  Actor model  \n \n  References   [  edit  ]   \n \n \n    ^      Oppel, Andy (2005).  SQL Demystified . McGraw Hill. p.\u00a07.  ISBN \u00a0 0-07-226224-9 .   \u00a0    \n    ^      Gabriel, Richard; Linda G. DeMichie.  \"The Common Lisp Object System: An Overview\" .  Lucid Inc. Technical Report .   \u00a0    Cite uses deprecated parameters ( help )   \n    ^      Wegner, Peter (December 1987). \"Dimensions of Object-Based Language Design\". In Meyrowitz, Norman.  OOPSLA'87 Conference Proceedings   22  (12): 168\u2013\u2013182.   \u00a0    Cite uses deprecated parameters ( help )   \n    ^      Barbey, S; M. Kempe, and A. Strohmeier. (1993).  \"Object-Oriented Programming with Ada 9X\" .  Draft Technical Report  (Swiss Federal Institute of Technology in Lausanne Software Engineering Laboratory) . Retrieved 15 December 2013 . \"Ada 83 itself is generally not considered to be object-oriented; rather, according to the terminology of Wegner [Weg 87], it is said to be object-based, since it provides only a restricted form of inheritance and it lacks polymorphism.\"   \u00a0    Cite uses deprecated parameters ( help )   \n    ^      Booch, Grady (1986).   Software Engineering with Ada  . Addison Wesley. p.\u00a0220.  ISBN \u00a0 978-0805306088 . \"Perhaps the greatest strength of an object-oriented approach to development is that it offers a mechanism that captures a model of the real world.\"   \u00a0    \n    ^      Jacobsen, Ivar; Magnus Christerson, Patrik Jonsson, Gunnar Overgaard (1992).  Object Oriented Software Engineering . Addison-Wesley ACM Press.  ISBN \u00a0 0-201-54435-0 .   \u00a0    Cite uses deprecated parameters ( help )   \n    ^       \"What is an Object?\" .  oracle.com . Oracle Corporation . Retrieved 13 December 2013 .   \u00a0    \n    ^       Martin, Robert C. .  \"Design Principles and Design Patterns\"  . Retrieved 2000 .   \u00a0    \n    ^      Orfali, Robert (1996).  The Essential Client/Server Survival Guide . New York: Wiley Computer Publishing. pp.\u00a0399\u2013403.  ISBN \u00a0 0-471-15325-7 .   \u00a0    \n    ^     Ostrowski, K., Birman, K., Dolev, D., and Ahnn, J. (2008). \"Programming with Live Distributed Objects\",  Proceedings of the 22nd European Conference on Object-Oriented Programming , Paphos, Cyprus, July 07 - 11, 2008, J. Vitek, Ed.,  Lecture Notes In Computer Science , vol. 5142, Springer-Verlag, Berlin, Heidelberg, 463-489,  http://portal.acm.org/citation.cfm?id=1428508.1428536 .  \n    ^      Berners-Lee, Tim; James Hendler and Ora Lassila (May 17, 2001).  \"The Semantic Web A new form of Web content that is meaningful to computers will unleash a revolution of new possibilities\" .  Scientific American .   \u00a0    Cite uses deprecated parameters ( help )   \n    ^      Knublauch, Holger; Oberle, Daniel; Tetlow, Phil; Evan (2006-03-09).  \"A Semantic Web Primer for Object-Oriented Software Developers\" .  W3C  . Retrieved 2008-07-30 .   \u00a0    \n    ^     Table excerpted from tables in:  http://www.w3.org/2001/sw/BestPractices/SE/ODSD/   \n \n \n  External links   [  edit  ]   \n \n   What Is an Object?   from  The Java Tutorials  \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Software engineering  \n \n \n \n  \n \n \n Fields \n \n \n \n  Computer programming  \n  Software Requirements  \n  Software deployment  \n  Software design  \n  Software maintenance  \n  Software testing  \n  Systems analysis  \n  Formal methods  \n \n \n \n \n \n  \n \n \n Concepts \n \n \n \n  Data modeling  \n  Enterprise architecture  \n  Functional specification  \n  Modeling language  \n  Orthogonality  \n  Programming paradigm  \n  Software  \n  Software architecture  \n  Software development methodology  \n  Software development process  \n  Software quality  \n  Software quality assurance  \n  Software archaeology  \n  Structured analysis  \n \n \n \n \n \n  \n \n \n Orientations \n \n \n \n  Agile  \n  Aspect-oriented  \n  Object orientation  \n  Ontology  \n  Service orientation  \n  SDLC  \n \n \n \n \n \n  \n \n \n Models \n \n  \n \n \n \n Developmental \n \n \n \n \n  Agile  \n  EUP  \n  Executable UML  \n  Incremental model  \n  Iterative model  \n  RUP  \n  Scrum  \n  Prototype model  \n  Spiral model  \n  V-Model  \n  Waterfall model  \n  XP  \n \n \n \n \n \n  \n \n \n \n Other \n \n \n \n \n  SPICE  \n  CMMI  \n  Data model  \n  ER model  \n  Function model  \n  Information model  \n  Metamodeling  \n  Object model  \n  Systems model  \n  View model  \n \n \n \n \n \n  \n \n \n \n Languages \n \n \n \n \n  IDEF  \n  UML  \n  SysML  \n \n \n \n \n \n \n \n \n  \n \n \n \n Software \nengineers \n \n \n \n \n  Kent Beck  \n  Grady Booch  \n  Fred Brooks  \n  Barry Boehm  \n  Ward Cunningham  \n  Tom DeMarco  \n  Martin Fowler  \n  C. A. R. Hoare  \n  Watts Humphrey  \n  Michael A. Jackson  \n  Ivar Jacobson  \n  Stephen J. Mellor  \n  Bertrand Meyer  \n  David Parnas  \n  Winston W. Royce  \n  James Rumbaugh  \n  Niklaus Wirth  \n  Edward Yourdon  \n  Victor Basili  \n \n \n \n \n \n  \n \n \n Related fields \n \n \n \n  Computer science  \n  Computer engineering  \n  Project management  \n  Systems engineering  \n \n \n \n \n \n  \n \n \n \n \n \n    Category  \n    Commons  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Data types  \n \n \n \n  \n \n \n Uninterpreted \n \n \n \n  Bit  \n  Byte  \n  Trit  \n  Tryte  \n  Word  \n \n \n \n \n \n  \n \n \n Numeric \n \n \n \n  Bignum  \n  Complex  \n  Decimal  \n  Fixed-point  \n  Floating-point  \n  Integer \n \n  signedness  \n \n \n  Interval  \n  Rational  \n \n \n \n \n \n  \n \n \n  Text  \n \n \n \n  Character  \n  String \n \n  null-terminated  \n \n \n \n \n \n \n \n  \n \n \n  Pointer  \n \n \n \n  Address \n \n  physical  \n  virtual  \n \n \n  Reference  \n \n \n \n \n \n  \n \n \n  Composite  \n \n \n \n  Algebraic data type \n \n  generalized  \n \n \n  Array  \n  Associative array  \n  Class  \n  Dependent  \n  Equality  \n  Inductive  \n  List  \n  Object \n \n  metaobject  \n \n \n  Option type  \n  Product  \n  Record  \n  Set  \n  Union \n \n  tagged  \n \n \n \n \n \n \n \n  \n \n \n Other \n \n \n \n  Boolean  \n  Bottom type  \n  Collection  \n  Enumerated type  \n  Exception  \n  Function type  \n  Opaque data type  \n  Recursive data type  \n  Semaphore  \n  Stream  \n  Top type  \n  Type class  \n  Unit type  \n  Void  \n \n \n \n \n \n  \n \n \n Related topics \n \n \n \n  Abstract data type  \n  Data structure  \n  Generic  \n  Kind \n \n  metaclass  \n \n \n  Parametric polymorphism  \n  Primitive data type  \n  Protocol \n \n  interface  \n \n \n  Subtyping  \n  Type constructor  \n  Type conversion  \n  Type system  \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Ajax (mythology)", "rank": 0.034659130229366376, "url": "http://en.wikipedia.org/wiki/Ajax_(mythology)", "links": ["http://en.wikipedia.org/wiki/Achilles", "http://en.wikipedia.org/wiki/Knucklebones", "http://en.wikipedia.org/wiki/Lekythos", "http://en.wikipedia.org/wiki/AIAS_(disambiguation)", "http://en.wikipedia.org/wiki/Ajax_(disambiguation)", "http://en.wikipedia.org/wiki/Ancient_Greek", "http://en.wikipedia.org/wiki/Greek_mythology", "http://en.wikipedia.org/wiki/Telamon", "http://en.wikipedia.org/wiki/Periboea", "http://en.wikipedia.org/wiki/Salamis_Island"], "body": "  \n    \n \n     \n Achilles  and Ajax play a board game with  knucklebones  on this late 6th-century  lekythos , a type of oil-storing vessel associated with funeral rites \n \n \n \n  \"Aias\" redirects here. For other uses of this name, see  AIAS (disambiguation)  and  Ajax (disambiguation) .  \n \n  Ajax  or  Aias  (   /     \u02c8      e\u026a      d\u0292      \u00e6      k      s     /    or    /     \u02c8      a\u026a      .      \u0259      s     /   ;  Ancient\u00a0Greek :  \u0391\u1f34\u03b1\u03c2, gen. \u0391\u1f34\u03b1\u03bd\u03c4\u03bf\u03c2 ) was a  mythological Greek hero , the son of  Telamon  and  Periboea , and king of  Salamis .   [ 1 ]    He plays an important role in  Homer 's   Iliad   and in the  Epic Cycle , a series of  epic poems  about the  Trojan War . To distinguish him from Ajax, son of Oileus ( Ajax the Lesser ), he is called \" Telamonian Ajax ,\" \" Greater Ajax ,\" or \" Ajax the Great \". In  Etruscan mythology , he is known as  Aivas Tlamunus . \n  \n \n \n Contents \n \n \n   1   Family   \n   2   Description   \n   3   Trojan War  \n \n   3.1   Death   \n \n \n   4   Palace   \n   5   See also   \n   6   References   \n   7   Sources   \n   8   External links   \n \n \n  \n  Family   [  edit  ]   \n Ajax is the son of Telamon, who was the son of  Aeacus  and grandson of  Zeus , and his first wife Periboea. He is the cousin of  Achilles , the most remembered Greek warrior, and is the elder  half-brother  of  Teucer . Many illustrious  Athenians , including  Cimon ,  Miltiades ,  Alcibiades  and the historian  Thucydides , traced their descent from Ajax. The Italian scholar Maggiani recently showed that on an Etruscan tomb dedicated to Racvi Satlnei in Bologna (5th century BC) there is a writing that says: \"aivastelmunsl = family of Ajax T\u00e9lamon\". \n  Description   [  edit  ]   \n In Homer's  Iliad  he is described as of great stature, colossal frame and strongest of all the  Achaeans . Known as the \"bulwark of the Achaeans\",   [ 2 ]    he was trained by the  centaur   Chiron  (who had trained Ajax' father Telamon and Achilles' father  Peleus  and would later die of an accidental wound inflicted by  Heracles , whom he was at the time training), at the same time as Achilles. He was described as vicious, fearless, strong and powerful but also with a very high level of combat intelligence. \n After Achilles, Ajax is the most valuable warrior in  Agamemnon 's army (along with Diomedes), though he is not as cunning as  Nestor ,  Diomedes ,  Idomeneus , or  Odysseus , he is much more powerful and just as intelligent. He commands his army wielding a huge shield made of seven cow-hides with a layer of bronze. Most notably, Ajax is not wounded in any of the battles described in the  Iliad , and he is the only principal character on either side who does not receive substantial assistance from any of the gods who take part in the battles, although, in book 13, Poseidon strikes Ajax with his staff, renewing his strength. \n  Trojan War   [  edit  ]   \n In the  Iliad , Ajax is notable for his abundant strength and courage, seen particularly in two fights with  Hector . In Book 7, Ajax is chosen by lot to meet Hector in a duel which lasts most of a whole day. Ajax at first gets the better of the encounter, wounding Hector with his spear and knocking him down with a large stone, but Hector fights on until the  heralds , acting at the direction of Zeus, call a draw: the action ends without a winner and with the two combatants exchanging gifts, Ajax giving Hector a purple sash and Hector giving Ajax a sharp sword. \n The second fight between Ajax and Hector occurs when the latter breaks into the Mycenaean camp, and fights with the Greeks among the ships. In Book 14, Ajax throws a giant rock at Hector which almost kills him. In Book 15, Hector is restored to his strength by  Apollo  and returns to attack the ships. Ajax, wielding an enormous spear as a weapon and leaping from ship to ship, holds off the  Trojan  armies virtually single-handedly. In Book 16, Hector and Ajax duel once again. Hector is set on burning the ships, the only way he feels the Greeks will truly be defeated. Hector is able to disarm Ajax (although Ajax is not hurt) and Ajax is forced to retreat, seeing that Zeus is clearly favoring Hector. Hector and the Trojans succeed in burning one Greek ship, the culmination of an assault that almost finishes the war. Ajax is responsible for the death of many Trojans lords, including  Phorcys . \n Ajax often fought in tandem with his brother Teucer, known for his skill with the bow. Ajax would wield his magnificent shield, as Teucer stood behind picking off enemy Trojans. \n Achilles was absent during these encounters because of his feud with Agamemnon. In Book 9, Agamemnon and the other Mycenaean chiefs send Ajax, Odysseus and  Phoenix  to the tent of Achilles in an attempt to reconcile with the great warrior and induce him to return to the fight. Although Ajax speaks earnestly and is well received, he does not succeed in convincing Achilles. \n When  Patroclus  is killed, Hector tries to steal his body. Ajax, assisted by  Menelaus , succeeds in fighting off the Trojans and taking the body back with his chariot; however, the Trojans had already stripped Patroclus of Achilles' armor. Ajax's prayer to Zeus to remove the fog that has descended on the battle to allow them to fight or die in the light of day has become proverbial. According to  Hyginus , in total, Ajax killed 28 people at Troy.   [ 3 ]    \n  Death   [  edit  ]   \n \n    \n \n     \n Sorrowful Ajax  (Asmus Jacob Carstens, ca. 1791) \n \n \n \n    \n \n     \nA Black-figure Amphora with Ajax Carrying the Dead  Achilles .  Walters Art Museum ,  Baltimore . \n \n \n Like most of the other Greek leaders, Ajax is alive and well as the  Iliad  comes to a close. Later, when Achilles dies, killed by  Paris  (with help from Apollo), Ajax and Odysseus are the heroes who fight against the Trojans to get the body and bury it next to his cousin, Patroclus. Ajax, with his great shield and spear, manages to drive off the Trojans, while Odysseus pulls the body to his chariot, and rides away with it to safety. After the burial, both claim the armor for themselves, as recognition for their efforts. After several days of competition, Odysseus and Ajax are tied for the ownership of the magical armor which was forged on  Mount Olympus  by the god  Hephaestus . It is then that a competition is held to determine who deserves the armor. Ajax argues that because of his strength and the fighting he has done for the Greeks, including saving the ships from Hector, and driving him off with a massive rock, he deserves the armor.   [ 4 ]    However, Odysseus proves to be more eloquent, and the council gives him the armor. Ajax, \"Unconquered\", and furious, falls upon his own sword, \"conquered by his [own] sorrow\".   [ 5 ]    \n In Sophocles' play   Ajax ,  a famous retelling of Ajax's demise takes place\u2014after the armor is awarded to Odysseus the hero Ajax falls to the ground, exhausted. When he wakes up, he is under the influence of a spell from Athena. He goes to a flock of sheep and slaughters them, imagining they are the Achaean leaders, including Odysseus and Agamemnon. When he comes to his senses, covered in blood, and realizes that what he has done has diminished his honor, and he decides that he prefers to kill himself rather than live in shame. He does so with the same sword Hector gave him when they exchanged presents.   [ 6 ]    From his blood sprang a red flower, as at the death of  Hyacinthus , which bore on its leaves the initial letters of his name  Ai,  also expressive of lament.   [ 7 ]    His ashes were deposited in a golden urn on the  Rhoetean  promontory at the entrance of the  Hellespont . \n \n    \n \n     \nThe suicide of Ajax \n \n \n Homer is somewhat vague about the precise manner of Ajax's death but does ascribe it to his loss in the dispute over Achilles' shield; when Odysseus visits  Hades , he begs the soul of Ajax to speak to him, but Ajax, still resentful over the old quarrel, refuses and descends silently back into  Erebus . \n Like Achilles, he is represented (although not by Homer) as living after his death in the  island of Leuke  at the mouth of the  Danube .   [ 8 ]    Ajax, who in the post-Homeric legend is described as the grandson of Aeacus and the great-grandson of Zeus, was the  tutelary hero  of the island of Salamis, where he had a temple and an image, and where a festival called  Aianteia  was celebrated in his honour.   [ 9 ]    At this festival a couch was set up, on which the  panoply  of the hero was placed, a practice which recalls the Roman  Lectisternium . The identification of Ajax with the family of Aeacus was chiefly a matter which concerned the Athenians, after Salamis had come into their possession, on which occasion  Solon  is said to have inserted a line in the   Iliad   (2.557\u2013558), for the purpose of supporting the Athenian claim to the island. Ajax then became an  Attic  hero; he was worshiped at Athens, where he had a statue in the market-place, and the tribe  Aiantis  was named after him. Pausanias also relates that a gigantic skeleton, its kneecap 5 inches (13\u00a0cm) in diameter, appeared on the beach near  Sigeion , on the Trojan coast; these bones were identified as those of Ajax. \n  Palace   [  edit  ]   \n In 2001, Yannos Lolos began excavating a  Mycenaean  palace on the island of Salamis which he supposed to be the home of the mythological Aiacid dynasty. The ruins have been excavated at a site near the village of Kanakia of Salamis, a few miles off the coast of Athens. The multi-story structure covers 750\u00a0m 2  (8,100\u00a0sq\u00a0ft) and had perhaps 30 rooms. The Trojan War is supposed by many [   who?   ]  to have occurred at the height of the Mycenaean civilization (see discussion of  Troy VII ), roughly the point at which this palace appears to have been abandoned.   [ 10 ]    \n  See also   [  edit  ]   \n \n  Corpus vasorum antiquorum  \n  List of suicides in fiction  \n \n  References   [  edit  ]   \n \n \n    ^      \"Salamis The Island\"   Salamis The Island -- Salamina Municipality - Greek Island   \n    ^     Homer,  Iliad   6.5 .  \n    ^     Hyginus,   Fabulae    114 .  \n    ^     Ovid,  Metamorphoses , translated by Rolfe Humphries (Indianapolis: Indiana University, 1955), Book XIII, pp. 305-309)  \n    ^      Metamorphoses , trans. Humphries, p.\u00a0318  \n    ^       Iliad ,  7.303  \n    ^      Pausanias  1.35.4  \n    ^      Pausanias  3.19.11  \n    ^     Pausanias 1.35  \n    ^      Carr, John (2006-03-28).  \"Palace of Homers hero rises out of the myths\" .  The Times  (London).   \u00a0    \n \n \n  Sources   [  edit  ]   \n \n    \u00a0This article\u00a0incorporates text from a publication now in the  public domain :\u00a0 Chisholm, Hugh, ed. (1911).   Encyclop\u00e6dia Britannica   (11th ed.). Cambridge University Press   \u00a0   \n Homer.  Iliad , 7.181\u2013312. \n Homer,  Odyssey   11.543\u201367 . \n   Bibliotheca  .  Epitome  III, 11-V, 7. \n Ovid.  Metamorphoses  12.620\u201313.398. \n  Friedrich Schiller ,   Das Siegerfest  . \n  Pindar 's  Nemeans , 7, 8;  Isthmian 4  \n \n  External links   [  edit  ]   \n \n \n   \n Wikimedia Commons has media related to    Ajax the Great   . \n \n \n \n A translation of the debate and Ajax's death.  http://classics.mit.edu/Ovid/metam.13.thirteenth.html  \n  Paphitis, Nicholas (2006-03-30).  \"Archaeologist links palace to legendary Ajax\" .  MSNBC  . Retrieved 2006-03-31 .   \u00a0   \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Characters in the  Odyssey   \n \n \n \n  \n \n \n \n \n \n  Achilles  \n  Aeolus  \n  Agamemnon  \n  Agelaus  \n  Ajax  \n  Alcinous  \n  Amphimedon  \n  Amphinomus  \n  Anticlea  \n  Antinous  \n  Antiphates  \n  Antiphus  \n  Arete  \n  Aretus  \n  Argos  \n  Calypso  \n  Circe  \n  Clytius  \n  Ctesippus  \n  Demodocus  \n  Demoptolemus  \n  Deucalion  \n  Dolius  \n  Echephron  \n  Echetus  \n  Elpenor  \n  Eumaeus  \n  Eupeithes  \n  Euryalus  \n  Eurycleia  \n  Eurylochus  \n  Eurymachus  \n  Halitherses  \n  Helen  \n  Idomeneus  \n  Irus  \n  Kikonians  \n  La\u00ebrtes  \n  Laodamas  \n  Leodes  \n  Laestrygones  \n  Medon  \n  Melanthius  \n  Melantho  \n  Menelaus  \n  Mentes  \n  Mentor  \n  Nausicaa  \n  Nestor  \n  Odysseus  \n  Peisistratus  \n  Penelope  \n  Perimedes  \n  Phaeacians  \n  Phemius  \n  Philoeteus  \n  Polites  \n  Polydamna  \n  Polyphemus  \n  Scylla and Charybdis  \n  Sirens  \n  Stratichus  \n  Telemachus  \n  Tiresias  \n  Theoclymenus  \n  Thrasymedes  \n  Zeus  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Characters in the  Iliad   \n \n \n \n  \n \n \n Achaeans \n \n \n \n  Acamas  \n  Achilles  \n  Agamemnon  \n  Agapenor  \n  Ajax the Greater  \n  Ajax the Lesser  \n  Alcimus  \n  Anticlus  \n  Antilochus  \n  Arcesilaus  \n  Ascalaphus  \n  Automedon  \n  Balius and Xanthus  \n  Bias  \n  Calchas  \n  Diomedes  \n  Elephenor  \n  Epeius  \n  Eudoros  \n  Euneus  \n  Euryalus  \n  Eurybates  \n  Eurydamas  \n  Guneus  \n  Helen  \n  Ialmenus  \n  Idomeneus  \n  Leitus  \n  Leonteus  \n  Lykomedes  \n  Machaon  \n  Mecisteus  \n  Medon  \n  Meges  \n  Menelaus  \n  Menestheus  \n  Meriones  \n  Neoptolemus  \n  Nestor  \n  Nireus  \n  Odysseus  \n  Palamedes  \n  Patroclus  \n  Peneleos  \n  Philoctetes  \n  Phoenix  \n  Podalirius  \n  Podarces  \n  Polites  \n  Polypoetes  \n  Promachus  \n  Protesilaus  \n  Prothoenor  \n  Schedius  \n  Stentor  \n  Sthenelus  \n  Talthybius  \n  Teucer  \n  Thersites  \n  Thoas  \n  Thrasymedes  \n  Tlepolemus  \n \n \n \n \n \n  \n \n \n Trojans \n \n \n \n  Aeneas  \n  Aesepus  \n  Agenor  \n  Alcathous  \n  Amphimachus  \n  Anchises  \n  Andromache  \n  Antenor  \n  Antiphates  \n  Antiphus  \n  Archelochus  \n  Asius  \n  Asteropaios  \n  Astyanax  \n  Atymnius  \n  Axylus  \n  Briseis  \n  Calesius  \n  Caletor  \n  Cassandra  \n  Chryseis  \n  Chryses  \n  Clytius  \n  Co\u00f6n  \n  Dares Phrygius  \n  Deiphobus  \n  Dolon  \n  Epistrophus  \n  Eteoneus  \n  Euphemus  \n  Euphorbus  \n  Eurypylus  \n  Glaucus  \n  Gorgythion  \n  Halizones  \n  Hector  \n  Hecuba  \n  Helenus  \n  Hyperenor  \n  Hypsenor  \n  Ilioneus  \n  Imbrius  \n  Iphidamas  \n  Kebriones  \n  Laoco\u00f6n  \n  Lycaon  \n  Melanippus  \n  Mentes  \n  Mydon  \n  Mygdon of Phrygia  \n  Othryoneus  \n  Pandarus  \n  Panthous  \n  Paris  \n  Pedasus  \n  Peirous  \n  Phorcys  \n  Polites  \n  Polydamas  \n  Polybus  \n  Polydorus  \n  Priam  \n  Pylaemenes  \n  Pylaeus  \n  Pyraechmes  \n  Rhesus of Thrace  \n  Sarpedon  \n  Theano  \n  Ucalegon  \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Ajax the Lesser", "rank": -0.0261829580980572, "url": "http://en.wikipedia.org/wiki/Ajax_the_Lesser", "links": ["http://en.wikipedia.org/wiki/Ancient_Greek", "http://en.wikipedia.org/wiki/Greek_mythology", "http://en.wikipedia.org/wiki/Oileus", "http://en.wikipedia.org/wiki/Locris", "http://en.wikipedia.org/wiki/Ajax_(mythology)", "http://en.wikipedia.org/wiki/Telamon", "http://en.wikipedia.org/wiki/Locrians", "http://en.wikipedia.org/wiki/Trojan_War", "http://en.wikipedia.org/wiki/Homer", "http://en.wikipedia.org/wiki/Iliad"], "body": "  \n    \n \n     \nAjax the Lesser raping Cassandra \n \n \n  Ajax  ( Ancient\u00a0Greek :  \u0391\u1f34\u03b1\u03c2 ) was a  Greek mythological  hero, son of  Oileus , the king of  Locris . He was called the \"lesser\" or \"Locrian\" Ajax,   [ 1 ]    to distinguish him from  Ajax the Great , son of  Telamon . He was the leader of the  Locrian  contingent during the  Trojan War . He is a significant figure in  Homer 's   Iliad   and is also mentioned in the   Odyssey     [ 2 ]    and  Virgil 's   Aeneid  . In  Etruscan legend , he was known as  Aivas Vilates . \n  \n \n \n Contents \n \n \n   1   Mythology   \n   2   Death   \n   3   Art   \n   4   References   \n   5   Sources   \n \n \n  \n  Mythology   [  edit  ]   \n His mother's name was  Eriopis . According to  Strabo , he was born in Naryx in  Locris ,   [ 3 ]    where  Ovid  calls him  Narycius Heroes .   [ 4 ]    According to the   Iliad  ,   [ 5 ]    he led his  Locrians  in forty ships against  Troy .   [ 6 ]    He is described as one of the great heroes among the Greeks. When the grammatical dual form of Ajax is used in the   Iliad  , it was once believed that it indicated the lesser Ajax fighting side-by-side with Telamonian  Ajax , but now it is generally thought that that usage refers to the Greater Ajax and his brother  Teucer . In battle, he wore a  linen   cuirass  ( \u03bb\u03b9\u03bc\u03bd\u03bf\u03b8\u03ce\u03c1\u03b7\u03be ), was brave and intrepid, especially skilled in throwing the spear and, next to  Achilles , the swiftest of all the Greeks.   [ 7 ]    \n In the funeral games at the  pyre  of  Patroclus , he contended with  Odysseus  and  Antilochus  for the prize in the footrace; but  Athena , who was hostile towards him and favored Odysseus, made him stumble and fall, so that he won only the second prize.   [ 8 ]    On his return from Troy, his vessel was wrecked on the Whirling Rocks ( \u0393\u03c5\u03c1\u03b1\u1f76 \u03c0\u03ad\u03c4\u03c1\u03b1\u03b9 ), but he himself escaped upon a rock through the assistance of  Poseidon  and would have been saved in spite of Athena, but he said that he would escape the dangers of the sea in defiance of the immortals. In punishment for this presumption, Poseidon split the rock with his  trident  and Ajax was swallowed up by the sea.   [ 9 ]    \n In later traditions, this Ajax is called a son of Oileus and the  nymph  Rhene and is also mentioned among the suitors of Helen.   [ 10 ]      [ 11 ]    After the taking of Troy, it is said he rushed into the temple of Athena, where  Cassandra  had taken refuge, and was embracing the statue of the goddess in  supplication . Ajax violently dragged her away to the other captives.   [ 12 ]      [ 13 ]      [ 14 ]      [ 15 ]    According to some writers, he even raped Cassandra inside the temple.   [ 16 ]      [ 17 ]      [ 18 ]    Odysseus, at least, accused him of this crime and Ajax was to be stoned to death, but saved himself by establishing his innocence with an oath.   [ 19 ]    The whole charge was sometimes said to have been an invention of  Agamemnon , who wanted to have Cassandra for himself. \n  Death   [  edit  ]   \n \n    \n \n     \nPoseidon killing Ajax the Lesser \n \n \n Whether or not the accusation that Ajax raped Cassandra was true, Athena still had cause to be indignant, as Ajax had dragged a supplicant from her temple. According to the   Bibliotheca  , no one was aware that Ajax had raped Cassandra until  Calchas , the Greek seer, warned the Greeks that Athena was furious at the treatment of her priestess and she would destroy the Greek ships if they didn't kill him immediately. Despite this, Ajax managed to hide in the altar of an unnamed deity where the Greeks, fearing divine retribution should they kill him and destroy the altar, allowed him to live. When the Greeks left without killing Ajax, despite their sacrifices Athena became so angry that she persuaded  Zeus  to send a storm that sank many of their ships. When Ajax finally left Troy, Athena hit his ship with a thunderbolt, but Ajax still survived, managing to cling onto a rock. He boasted that even the gods could not kill him and  Poseidon , upon hearing this, split the rock with his trident, causing Ajax to eventually drown.  Thetis  buried him when the corpse washed up on Myconos.   [ 20 ]    Other versions depict a different death for Ajax, showing him dying when on his voyage home. In these versions, when Ajax came to the Capharean Rocks on the coast of  Euboea , his ship was wrecked in a fierce storm, he himself was lifted up in a whirlwind and impaled with a flash of rapid fire from Athena in his chest, and his body thrust upon sharp rocks, which afterwards were called the rocks of Ajax.   [ 15 ]      [ 21 ]    \n After his death his spirit dwelt in the island of  Leuce .   [ 22 ]    The  Opuntian  Locrians worshiped Ajax as their national hero, and so great was their faith in him that when they drew up their army in battle, they always left one place open for him, believing that, although invisible to them, he was fighting for and among them.   [ 22 ]      [ 23 ]    The story of Ajax was frequently made use of by ancient poets and artists, and the hero who appears on some Locrian coins with the helmet, shield, and sword is probably this Ajax.   [ 24 ]    \n Other accounts of his death are offered by  Philostratus  and the  scholiast  on  Lycophron .   [ 25 ]      [ 26 ]    \n  Art   [  edit  ]   \n The abduction of Cassandra by Ajax was frequently represented in  Greek  works of art, for instance on the chest of  Cypselus  described by  Pausanias  and in extant works.   [ 27 ]    \n  References   [  edit  ]   \n \n \n    ^      Homer ,   Iliad   ii. 527  \n    ^      Schmitz, Leonhard (1867),  \"Ajax (2)\" , in Smith, William,   Dictionary of Greek and Roman Biography and Mythology    1 , Boston:  Little, Brown and Company , pp.\u00a087\u201388   \u00a0    \n    ^      Strabo , ix. p. 425  \n    ^      Ovid ,   Metamorphoses   xiv. 468  \n    ^      Homer ,   Iliad   ii. 527, &amp;c.  \n    ^      Gaius Julius Hyginus ,  Fabulae  97 gives the number of ships as twenty  \n    ^      Homer ,   Iliad   xiv. 520, &amp;c., xxiii. 789, &amp;c.  \n    ^      Homer ,   Iliad   (xxiii. 754), &amp;c.  \n    ^      Homer ,   Odyssey   iv. 499, &amp;c.  \n    ^      Gaius Julius Hyginus ,  Fabulae  81, 97  \n    ^       Bibliotheca   iii. 10. \u00a7 8  \n    ^      Virgil ,   Aeneid   ii. 403  \n    ^      Euripides ,  Troad.  70, &amp;c.  \n    ^      Dict. Cret.  v. 12  \n  ^     a         b        Gaius Julius Hyginus ,  Fabulae  116  \n    ^      Tryphiodorus , 635  \n    ^      Quintus Smyrnaeus , xiii. 422  \n    ^      Lycophron , 360, with the  Scholion   \n    ^      Pausanias ,  Description of Greece  x. 26. \u00a7 1, 31. \u00a7 1  \n    ^     Apollodore, R. Scott Smith, Stephen Trzaskoma, and Hygin. Apollodorus' Library and Hyginus' Fabulae: Two Handbooks of Greek Mythology. Indianapolis: Hackett Pub., 2007. 84-85. \"5.24-6.6.\" Print.  \n    ^     comp.  Virgil ,   Aeneid   i. 40, &amp;c., xi. 260  \n  ^     a         b        Pausanias ,  Description of Greece  iii. 19. \u00a7 11  \n    ^      Conon   Narrations  18  \n    ^     Th\u00e9odore Edme Mionnet, No. 570, &amp;c.  \n    ^      Philostratus ,  Her.  viii. 3  \n    ^      Scholiast  on  Lycophron   l. c.   \n    ^      Pausanias ,  Description of Greece  v. 17  \n \n \n  Sources   [  edit  ]   \n \n \n   \n Wikimedia Commons has media related to    Ajax the Lesser   . \n \n \n \n    \u00a0This article\u00a0incorporates text from a publication now in the  public domain :\u00a0  Smith, William , ed. (1867). \"   article name needed   \".   Dictionary of Greek and Roman Biography and Mythology  .   \u00a0   \n    \u00a0This article\u00a0incorporates text from a publication now in the  public domain :\u00a0 Chisholm, Hugh, ed. (1911).   Encyclop\u00e6dia Britannica   (11th ed.). Cambridge University Press   \u00a0   \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Characters in the  Iliad   \n \n \n \n  \n \n \n Achaeans \n \n \n \n  Acamas  \n  Achilles  \n  Agamemnon  \n  Agapenor  \n  Ajax the Greater  \n  Ajax the Lesser  \n  Alcimus  \n  Anticlus  \n  Antilochus  \n  Arcesilaus  \n  Ascalaphus  \n  Automedon  \n  Balius and Xanthus  \n  Bias  \n  Calchas  \n  Diomedes  \n  Elephenor  \n  Epeius  \n  Eudoros  \n  Euneus  \n  Euryalus  \n  Eurybates  \n  Eurydamas  \n  Guneus  \n  Helen  \n  Ialmenus  \n  Idomeneus  \n  Leitus  \n  Leonteus  \n  Lykomedes  \n  Machaon  \n  Mecisteus  \n  Medon  \n  Meges  \n  Menelaus  \n  Menestheus  \n  Meriones  \n  Neoptolemus  \n  Nestor  \n  Nireus  \n  Odysseus  \n  Palamedes  \n  Patroclus  \n  Peneleos  \n  Philoctetes  \n  Phoenix  \n  Podalirius  \n  Podarces  \n  Polites  \n  Polypoetes  \n  Promachus  \n  Protesilaus  \n  Prothoenor  \n  Schedius  \n  Stentor  \n  Sthenelus  \n  Talthybius  \n  Teucer  \n  Thersites  \n  Thoas  \n  Thrasymedes  \n  Tlepolemus  \n \n \n \n \n \n  \n \n \n Trojans \n \n \n \n  Aeneas  \n  Aesepus  \n  Agenor  \n  Alcathous  \n  Amphimachus  \n  Anchises  \n  Andromache  \n  Antenor  \n  Antiphates  \n  Antiphus  \n  Archelochus  \n  Asius  \n  Asteropaios  \n  Astyanax  \n  Atymnius  \n  Axylus  \n  Briseis  \n  Calesius  \n  Caletor  \n  Cassandra  \n  Chryseis  \n  Chryses  \n  Clytius  \n  Co\u00f6n  \n  Dares Phrygius  \n  Deiphobus  \n  Dolon  \n  Epistrophus  \n  Eteoneus  \n  Euphemus  \n  Euphorbus  \n  Eurypylus  \n  Glaucus  \n  Gorgythion  \n  Halizones  \n  Hector  \n  Hecuba  \n  Helenus  \n  Hyperenor  \n  Hypsenor  \n  Ilioneus  \n  Imbrius  \n  Iphidamas  \n  Kebriones  \n  Laoco\u00f6n  \n  Lycaon  \n  Melanippus  \n  Mentes  \n  Mydon  \n  Mygdon of Phrygia  \n  Othryoneus  \n  Pandarus  \n  Panthous  \n  Paris  \n  Pedasus  \n  Peirous  \n  Phorcys  \n  Polites  \n  Polydamas  \n  Polybus  \n  Polydorus  \n  Priam  \n  Pylaemenes  \n  Pylaeus  \n  Pyraechmes  \n  Rhesus of Thrace  \n  Sarpedon  \n  Theano  \n  Ucalegon  \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "1953 Iranian coup d'\u00e9tat", "rank": -0.0261829580980572, "url": "http://en.wikipedia.org/wiki/1953_Iranian_coup_d%27%C3%A9tat", "links": ["http://en.wikipedia.org/wiki/Abadan_Crisis", "http://en.wikipedia.org/wiki/Iran", "http://en.wikipedia.org/wiki/Mohammad_Mosaddegh", "http://en.wikipedia.org/wiki/Fazlollah_Zahedi", "http://en.wikipedia.org/wiki/Mohammad_Reza_Shah_Pahlavi", "http://en.wikipedia.org/wiki/Absolute_monarchy", "http://en.wikipedia.org/wiki/Blowback_(intelligence)", "http://en.wikipedia.org/wiki/Iran%E2%80%93United_States_relations", "http://en.wikipedia.org/wiki/Mohammed_Reza_Pahlavi", "http://en.wikipedia.org/wiki/United_States"], "body": "  \n \n 1953 Iranian coup d'\u00e9tat \n \n \n Part of the  Abadan Crisis  \n \n \n     \nTehran men celebrating the coup \n \n \n \n \n \n Date \n 15\u201319 August 1953 \n \n \n Location \n   Iran   \n \n \n Result \n Overthrow of Iranian Prime Minister  Mohammad Mosaddegh \n \n Formation of a military government by General  Fazlollah Zahedi , appointed prime minister by  Mohammad Reza Shah Pahlavi . \n Restoration of  absolute monarchy . \n  Blowback  leading to long term deterioration of  Iran\u2013United States relations . \n \n \n \n \n \n \n \n Belligerents \n \n \n      Mohammed Reza Pahlavi  supporters \n  \u00a0  United States \n \n      CIA  \n \n   \u00a0  United Kingdom  \n \n  MI6  \n \n \n      Mohammad Mosaddegh  supporters \n     National Front  \n \n \n Commanders and leaders \n \n \n        Mohammad Reza Pahlavi  \n       Fazlollah Zahedi  \n       Abol-Ghasem Kashani  (1952\u20131953) \n       Dwight D. Eisenhower  \n       Allen Dulles  \n       Winston Churchill  \n       John Alexander Sinclair  \n        Mohammad Mosaddegh  \n\u00a0\u2022   Hossein Fatemi  \n\u00a0\u2022   Karim Sanjabi  \n\u00a0\u2022   Abol-Ghasem Kashani  (1951\u20131952) \n \n \n Casualties and losses \n \n \n  \n  \n \n \n 300   [ 1 ]   \u2013800   [ 2 ]    killed \n \n \n In the  1953 Iranian coup d'\u00e9tat , known in  Iran  as the  28 Mordad coup , the  Prime Minister of Iran   Mohammad Mosaddegh  was overthrown on 19 August 1953. The  coup d'\u00e9tat  was orchestrated by the  United Kingdom  (under the name ' Operation Boot' ) and the  United States  (under the name   TPAJAX  Project ).   [ 3 ]      [ 4 ]      [ 5 ]      [ 6 ]    \n Mossadegh had sought to reduce the semi-absolute role of the Shah granted by the  Constitution of 1906 , thus making Iran a full  democracy , and to nationalize the Iranian oil industry, consisting of vast oil reserves and the  Abadan Refinery , both owned by the  Anglo-Iranian Oil Company , a British corporation (now  BP ).   [ 7 ]      [ 8 ]      [ 9 ]    A military government under General  Fazlollah Zahedi  was formed which allowed  Mohammad-Rez\u0101 Sh\u0101h Pahlavi , the  Shah  of Iran ( Persian  for an Iranian king),   [ 9 ]    to effectively rule the country as an  absolute monarch  according to the constitution. He relied heavily on United States support to hold on to power until  his own overthrow in February 1979 .   [ 7 ]      [ 8 ]      [ 9 ]      [ 10 ]    In August 2013 the  Central Intelligence Agency  (CIA) admitted that it was involved in both the planning and the execution of the coup, including the bribing of Iranian politicians, security and army high-ranking officials, as well as pro-coup propaganda.   [ 11 ]      [ 12 ]    The CIA is quoted acknowledging the coup was carried out \"under CIA direction\" and \"as an act of U.S. foreign policy, conceived and approved at the highest levels of government.\"    [ 13 ]    \n In 1951, Iran's oil industry was  nationalized  with near-unanimous support of  Iran's parliament  in a bill introduced by Mossadegh who led the nationalist party the  National Front . Iran's oil had been controlled by the British-owned AIOC.   [ 14 ]    Popular discontent with the AIOC began in the late 1940s: a large segment of Iran's public and a number of politicians saw the company as exploitative and a central tool of continued  British imperialism  in Iran.   [ 7 ]      [ 15 ]    Despite Mosaddegh's popular support, Britain was unwilling to negotiate on its single most valuable foreign asset, and instigated a worldwide boycott of Iranian oil to pressure Iran economically.   [ 16 ]    Initially, Britain mobilized its military to seize control of the  Abadan oil refinery , then the world's largest, but Prime Minister  Clement Attlee  opted instead to tighten the economic boycott   [ 17 ]    while using Iranian agents to undermine Mosaddegh's government.   [ 18 ]    With a change to more conservative governments in both Britain and the United States,  Winston Churchill  and the  Eisenhower administration  decided to overthrow Iran's government though the predecessor  Truman administration  had opposed a coup.   [ 19 ]    Classified documents show British intelligence officials played a pivotal role in initiating and planning the coup, and that AIOC contributed $25,000 towards the expense of bribing officials.   [ 20 ]    \n Britain and the U.S. selected Fazlollah Zahedi to be the prime minister of a military government that was to replace Mosaddegh as premier. Subsequently, a royal decree dismissing Mosaddegh and appointing Zahedi was drawn up by the coup plotters and signed by the Shah. The  Central Intelligence Agency  had successfully pressured the weak monarch to participate in the coup, while bribing street thugs, clergy, politicians and  Iranian army  officers to take part in a propaganda campaign against Mosaddegh and his government.   [ 21 ]    At first, the coup appeared to be a failure when on the night of 15\u201316 August, Imperial Guard Colonel  Nematollah Nassiri  was arrested while attempting to arrest Mosaddegh. The Shah fled the country the next day. On 19 August, a pro-Shah mob paid by the CIA, marched on Mosaddegh's residence.   [ 22 ]    According to the CIA's declassified documents and records, some of the most feared mobsters in  Tehran  were hired by the CIA to stage pro-Shah riots on 19 August. Other CIA-paid men were brought into Tehran in buses and trucks, and took over the streets of the city.   [ 23 ]    Between 300   [ 1 ]    and 800 people were killed because of the conflict.   [ 2 ]    Mosaddegh was arrested, tried and convicted of treason by the Shah's military court. On 21 December 1953, he was sentenced to three years in jail, then placed under house arrest for the remainder of his life.   [ 24 ]      [ 25 ]      [ 26 ]    Other Mosaddegh supporters were imprisoned, and several received the death penalty.   [ 9 ]    \n After the coup, the Shah ruled as an  absolute monarch  for the next 26 years (under what he called a \"guided democracy\")   [ 8 ]      [ 9 ]    while significantly modernizing the country using oil revenue, until he was overthrown in the  Iranian Revolution  in 1979.   [ 8 ]      [ 9 ]      [ 27 ]    The tangible benefits the United States reaped from overthrowing Iran's elected government included a share of Iran's oil wealth   [ 28 ]    [   clarification needed   ]  and the prevention of the possibility that the Iranian government might align itself with the Soviet Union, although the latter motivation produces controversy among historians. Washington continually supplied arms to the increasingly unpopular Shah and the CIA-trained  SAVAK , his repressive secret police force;   [ 9 ]    however by the 1979 revolution, his increasingly independent policies resulted in his effective abandonment by his American allies, hastening his downfall.   [ 29 ]    The coup is widely believed to have significantly contributed to  anti-American sentiment in Iran and the Middle East . The 1979 revolution deposed the Shah and replaced the pro-Western absolute monarchy with the largely  anti-Western   authoritarian   theocracy .   [ 30 ]      [ 31 ]    \n  \n \n \n Contents \n \n \n   1   Background  \n \n   1.1   19th century   \n   1.2   Early 20th century   \n   1.3   Constitutional Revolution of 1906   \n   1.4   After World War I   \n   1.5   World War II   \n   1.6   After World War II   \n \n \n   2   Oil Nationalization Crisis  \n \n   2.1   Assassination attempt on the Shah, and the Appointment of Mossadegh as Prime Minister   \n   2.2   Oil Nationalization, the Abadan Crisis, and Rising Tensions   \n   2.3   Final months of Mossadegh's government   \n \n \n   3   Execution of Operation Ajax   \n   4   U.S. role  \n \n   4.1   The coup and CIA records   \n   4.2   U.S. motives   \n   4.3   News Coverage in the United States and Great Britain   \n \n \n   5   Aftermath  \n \n   5.1   Blowback   \n   5.2   Iran   \n   5.3   Internationally   \n \n \n   6   Legacy  \n \n   6.1   Historical viewpoint in the Islamic Republic   \n \n \n   7   See also   \n   8   References   \n   9   Bibliography   \n   10   External links   \n \n \n  \n  Background   [  edit  ]   \n  19th century   [  edit  ]   \n Throughout the 19th century, Iran was caught between two advancing imperial powers, Russia, which was expanding southward into the Caucasus and central Asia, and Britain, which sought to dominate the Persian Gulf, the Red Sea, and India. Between 1801 and 1814 Iran signed treaties with Britain and France with an eye toward blocking Russian expansion. After two wars with czarist Russia, from 1804\u201313 and from 1826\u201328, Iran ceded large tracts of territory to Russia, establishing the modern boundaries between those countries. Britain fought a war with Iran over  Afghanistan  in 1856\u201357 after which Afghanistan became independent. In 1892, the British diplomat  George Curzon  described Iran as \"pieces on a chessboard upon which is being played out a game for the dominion of the world.\"   [ 32 ]    \n In 1872, a representative of  Paul Reuter , founder of the news agency, met with  Naser al-Din Shah Qajar  and agreed to fund the monarch's upcoming lavish visit to Europe in return for exclusive contracts including mining and railway rights.   [ 33 ]    The concession the Shah had given to Reuter was never put into effect because of violent opposition from the Persian people and from Russia.   [ 34 ]    \n \n \n     \n  This section requires  expansion .   (August 2013)    \n \n \n See also:  Tobacco Protest  \n  Early 20th century   [  edit  ]   \n Further information:  Anglo-Persian Oil Company  \n In 1901,  Mozzafar al-Din Shah Qajar , the  Shah of Persia , granted a 60-year petroleum search concession to  William Knox D'Arcy .   [ 35 ]    D'Arcy paid \u00a320,000, according to journalist-turned-historian  Stephen Kinzer , and promised equal ownership shares, with 16% of any future net profit, as calculated by the company.   [ 36 ]    However, the historian L.P. Elwell-Sutton wrote, in 1955, that \"Persia's share was 'hardly spectacular' and no money changed hands.\" \n \n The (Persian) government was promised 20,000  British pounds  in cash and 20,000 in shares in the first company to be formed by the concessionaire. In addition it was to receive 16 per cent of the profits made by this or any other company concerned in the concession. As it turned out D'Arcy did not even have to put his hand in his pocket. The First Exploitation Company was duly formed on 21 May 1903, with an issued capital of 500,000 British pounds in 1 pound shares, 30,000 of which were presented to the (Qajar) Shah and 20,000 to other \"leading personalities\". The additional 30,000 in shares was felt to be adequate to take the place of the promised 20,000 pounds in cash, and so no cash payment was ever made. The remainder of the shares were issued in London.   [ 37 ]    \n \n On 31 July 1907, D'Arcy withdrew from his private holdings in Persia. \"A new agreement was signed under which he transferred to the  Burmah Oil Company  all his shares in the First Exploitation Company, and with them his last direct interest in the exploitation of oil in Persia.\"   [ 38 ]    D'Arcy received 203,067  British pounds  in cash (more than ten times what the Persian monarch was supposed to have received in cash for the concession) and D'Arcy received 900,000 shares in the Burmah Oil Company, which the historian Elwell-Sutton declared was \"a large sum.\"   [ 38 ]    \n In early 1908, the British-owned Burmah Oil Company decided to end its exploration for oil in Persia but on 26 May, oil came in at a depth of 1,180 feet (360\u00a0m), \"a gusher that shot fifty feet or more above the top of the rig,\" Elwell-Sutton wrote. \"So began the industry that was to see the Royal Navy through two world wars, and to cause Persia more trouble than all the political manoeuvrings of the great powers put together.\"   [ 39 ]    \n The company grew slowly until World War I, when Persia's strategic importance led the British government to buy a controlling share in the company, essentially nationalizing British oil production in Iran. \n The British angered the Persians by intervening in their domestic affairs including in the  Persian Constitutional Revolution  (the transition from dynastic to parliamentary government).   [ 40 ]      [ 41 ]      [ 42 ]    \n  Constitutional Revolution of 1906   [  edit  ]   \n Meanwhile in 1905-1906, Persia had the first democratic revolution in Asia.   [ 43 ]    Known as the  Constitutional Revolution , massive popular protests forced Mozzafar-e-din Shah to allow for the  Constitution of 1906 , which limited his powers. It allowed for a democratically elected parliament  Majlis  to make the laws, and a prime minister to sign and carry them out. The PM would be appointed by the shah after a vote of confidence from Parliament. Nevertheless, the new constitution gave the shah many executive powers as well. It allowed for the shah to issue royal decrees ( Farman ), gave him the power to appoint and dismiss prime ministers (upon votes of confidence from Parliament), appoint half of the members of the  Senate  (which was not convened until 1949),   [ 9 ]    and introduce bills to and even dissolve Parliament.   [ 43 ]      [ 43 ]      [ 44 ]    It abolished arbitrary rule, but the shah served an executive, rather than ceremonial role; consequently when a shah was weak, the government was more democratic, but when the shah acted on his own, the democratic aspects of the government could be sidelined. The contradictory aspects of this constitution would cause conflicts in the future.   [ 44 ]    \n The Constitutional Revolution was opposed by the British and Russians, who attempted to subvert it through the backing of  Mohammad Ali Shah Qajar  (the son of Mozzafar-e-din Shah), who tried to break up the democratic government by force. A guerrilla movement led by  Sattar Khan  deposed him in 1910.   [ 43 ]      [ 44 ]    \n  After World War I   [  edit  ]   \n The Persians were dissatisfied with the royalty terms of the British petroleum concession, the  Anglo-Persian Oil Company  (APOC), whereby Persia received 16% of \"net profits\".   [ 45 ]    \n In 1921, after years of severe mismanagement under the  Qajar Dynasty , a coup d'\u00e9tat (allegedly backed by the British) brought a general,  Reza Khan  into the government. By 1923, he had become prime minister, and gained a reputation as an effective politician with a lack of corruption.   [ 43 ]    By 1925 under his influence, Parliament voted to remove  Ahmad Shah Qajar  from the throne, and Reza Khan was crowned  Reza Shah Pahlavi , of the  Pahlavi Dynasty . Reza Shah began a rapid modernization program in Persia (which up until that point had been considered to be among the most impoverished countries in the world). Warlords who had carved up Iran amongst themselves were defeated. Schools and universities were established, women and minorities were granted rights, the literacy rates skyrocketed, for the first time electricity was brought to Iran. Reza Shah's largest achievement was the creation of roads, and the  Trans-Iranian Railway , and according to one source he remains a popular figure in Iran even up to the present day.   [ 43 ]      [ 46 ]    \n Nevertheless, Reza Shah was also a very harsh ruler who did not tolerate dissent. By the 1930s, he had suppressed all opposition, and had sidelined the democratic aspects of the constitution. Opponents were jailed and in some cases even executed. While some agreed with his policies, arguing that it was necessary as Iran was in such turmoil, others argued that is was unjustified.   [ 43 ]    One such opponent was a politician named  Mohammad Mossadegh , who was jailed in 1940. The experience gave him a lasting dislike for authoritarian rule and absolute monarchy, and it helped make Mossadegh a dedicated advocate of complete oil nationalization in Iran.   [ 8 ]    \n Reza Shah attempted to attenuate the power of the colonial forces in Iran and was successful to a large extent. However, he also needed them to help modernize the country. He did so balancing various colonial powers, including Britain and Germany.   [ 43 ]    In the 1930s, Reza Shah tried to terminate the APOC concession that Qajar dynasty had granted, but Iran was still weak and Britain would not allow it. The concession was renegotiated on terms again favorable to the British (although the  D'Arcy Concession  was softened).   [ 43 ]    On 21 March 1935, Reza Shah changed the name of the country from Persia to Iran. The Anglo-Persian Oil Company was then renamed the  Anglo-Iranian Oil Company  (AIOC).   [ 47 ]    \n  World War II   [  edit  ]   \n In 1941, after the  Nazi invasion of the USSR , the British and  Commonwealth of Nations  forces and the  Red Army   invaded Iran . Reza Shah had declared neutrality in World War II and tried to balance between the two major powers, Britain and Nazi Germany.   [ 9 ]      [ 43 ]    By this time, the British were increasingly tired of Iran's independence, and accused them of supporting the Nazis.   [ 43 ]    The primary reason for the invasion was in order to secure Iran's oil fields and the Trans-Iranian Railway in order to deliver supplies to the USSR. Reza Shah was arrested, deposed, and exiled by the British, and some other prominent officials were jailed as well.   [ 9 ]    While the British wanted to install the  Qajar Dynasty  in power again, Reza Shah's 22-year-old son,  Mohammad Reza Pahlavi , became the Shah of Iran.   [ 9 ]    \n The young new Shah, unlike his father, was initially a mild leader and at times indecisive. During the 1940s he did not for most part take an independent role in the government, and much of Reza Shah's authoritarian policies were rolled back. Iranian democracy effectively was restored during this period as a result.   [ 9 ]      [ 43 ]    \n After the invasion, the British secured the oilfields and the seaports.   [ 48 ]    \n During the war, Iran was used as a conduit for  materiel  to the USSR. US forces also entered the country replacing the British in operating the southern part of the  Trans-Iranian Railway .   [ 43 ]    \n  After World War II   [  edit  ]   \n The western Allies withdrew from Iran after the end of the war. The Soviet Union remained and sponsored two \"People's Democratic Republics\" within Iran's borders. The  resulting crisis  was resolved through diplomatic efforts in the new United Nations and US support for the Iranian army to reassert control over the breakaway areas. The Soviet-Iranian oil agreement was not ratified (the Shah's role in resolving the crisis garnered him much popularity among Iranians)   [ 9 ]    \n After the war, nationalist leaders in Iran became influential by seeking a reduction in long-term foreign interventions in their country\u2014especially the oil concession which was very profitable for Britain and not very profitable to Iran. The British-controlled AIOC refused to allow its books to be audited to determine whether the Iranian government was being paid what had been promised. British intransigence irked the Iranian population. \n U.S. objectives in the Middle East remained the same between 1947 and 1952 but its strategy changed. Washington remained \"publicly in solidarity and privately at odds\" with Britain, its World War II ally. Britain's empire was steadily weakening, and with an eye on international crises, the U.S. re-appraised its interests and the risks of being identified with British colonial interests. \"In  Saudi Arabia , to Britain's extreme disapproval, Washington endorsed the arrangement between  ARAMCO  and Saudi Arabia in the 50/50 accord that had reverberations throughout the region.\"   [ 49 ]    \n  Oil Nationalization Crisis   [  edit  ]   \n  Assassination attempt on the Shah, and the Appointment of Mossadegh as Prime Minister   [  edit  ]   \n In 1949, an assassin attempted to kill the Shah. Shocked by the experience and emboldened by public sympathy for his injury, the Shah began to take an increasingly active role in politics. He quickly organized the  Iran Constituent Assembly  to amend the constitution to increase his powers. He established the  Senate of Iran  which had been a part of the Constitution of 1906 but had never been convened. The Shah had the right to appoint half the senators and he chose men sympathetic to his aims.   [ 9 ]    Mossadegh thought this increase in the Shah's political power was not democratic; he believed that the Shah should \"reign, but not rule\" in a manner similar to Europe's  constitutional monarchies . Led by Mossadegh, political parties and opponents of the Shah's policies banded together to form a coalition known as the  National Front .   [ 9 ]    Oil nationalization was a major policy goal for the party. \n By 1951, the National Front had won majority seats for the popularly elected  Majlis  (Parliament of Iran). According to Iran's constitution, the majority elected party in the parliament would give a vote of confidence for its prime minister candidate, after which the Shah would appoint the candidate to power. The Prime Minister  Haj Ali Razmara , who opposed the oil nationalization on technical grounds,   [ 7 ]    was assassinated by the hardline  Fadaiyan e-Islam  (whose spiritual leader the  Ayatollah   Abol-Qassem Kashani , a mentor to the future  Ayatollah Ruhollah Khomeini , had been appointed Speaker of the Parliament by the National Front).   [ 7 ]    After a  vote of confidence  from the National Front dominated Parliament, Mossadegh was appointed  prime minister of Iran  by the Shah (replacing  Hossein Ala , who had replaced Razmara). Under heavy pressure by the National Front, the assassin of Razmara ( Khalil Tahmasebi ) was released and pardoned, thus proving the movement's power in Iranian politics.   [ 7 ]    For the time being, Mossadegh and Kashani were allies of convenience, as Mossadegh saw that Kashani could mobilize the \"religious masses\", while Kashani wanted Mossadegh to create an Islamic state.   [ 7 ]      [ 7 ]      [ 9 ]    Kashani's Fadaiyan mobs often violently attacked the opponents of nationalization and opponents of the National Front government, as well as \"immoral objects\", acting at times as unofficial \"enforcers\" for the movement.   [ 7 ]    However, by 1953 Mossadegh was becoming increasingly opposed to Kashani, as the latter was contributing to mass political instability in Iran. Kashani in turn, berated Mossadegh for not \"Islamizing\" Iran, as the latter was a firm believer in the separation of religion and state.   [ 7 ]    \n The Shah and his prime minister had an antagonistic relationship. Part of the problem stemmed from the fact that Mossadegh was connected by blood to the former royal  Qajar dynasty , and saw the  Pahlavi  king as a usurper to the throne. But the real issue stemmed from the fact that Mossadegh represented a pro-democratic force that wanted to temper the Shah's rule in Iranian politics. He wanted for the Shah to be a  ceremonial monarch  rather than an  ruling monarch , thus giving the elected government power over the un-elected Shah. While the constitution of Iran gave the Shah the power to rule directly, Mossadegh used the united National Front bloc and the widespread popular support for the oil nationalization vote (the latter which the Shah supported as well) in order to block the Shah from being able to act. As a result, the oil nationalization issue became increasingly intertwined with the Mossadegh's pro-democracy movement. The dejected Shah was angered by Mossadegh's \"insolence\" (according to Abbas Milani, he angrily paced in the rooms of his palace at the thought that he would be reduced to a  figurehead ). But Mossadegh and the oil nationalization's popularity prevented the Shah from being able to act against his prime minister (which was allowed under Iran's constitution, something that Mossadegh felt a king had no right to do). In 1952 the Shah dismissed Mossadegh, replacing him with  Ahmad Qavam  (a veteran prime minister). But widespread protests by Mossadegh supporters resulted in the Shah immediately reinstating him.   [ 9 ]    \n  Oil Nationalization, the Abadan Crisis, and Rising Tensions   [  edit  ]   \n Further information:  Abadan Crisis \u00a0and\u00a0 Abadan Crisis timeline  \n \n    \n \n     \nPrime minister  Mohammad Mosaddegh  kissing the hand of  Mohammad-Rez\u0101 Sh\u0101h Pahlavi , the traditional way of greeting a king in Iran \n \n \n In late 1951, Iran's Parliament in a near unanimous vote approved the oil nationalization agreement. The bill was widely popular among most Iranians, and generated a huge wave of nationalism, and immediately put Iran at loggerheads with Britain (the handful of MP's that disagreed with it voted for it as well in the face of overwhelming popular support, and the Fadaiyan's wrath).   [ 7 ]      [ 50 ]    The nationalization made Mossadegh instantly popular among millions of Iranians, cementing him as a national hero, and placing him and Iran at the center of worldwide attention.   [ 7 ]      [ 9 ]      [ 50 ]    Many Iranians felt that for the first time in centuries, they were taking control of the affairs of their country. Many also expected that nationalization would result in a massive increase of wealth for Iranians. \n Britain now faced the newly elected nationalist government in Iran where Mossadegh, with strong backing of the Iranian parliament and people, demanded more favorable concessionary arrangements, which Britain vigorously opposed.   [ 49 ]    \n The U.S.  State Department  not only rejected Britain's demand that it continue to be the primary beneficiary of Iranian oil reserves but \"U.S. international oil interests were among the beneficiaries of the concessionary arrangements that followed nationalization.\"   [ 51 ]    \n However, by 1952 the US was becoming increasingly wary of Iran. U.S. reluctance to overthrow Prime Minister Mossadegh in 1951, when he was elected, faded 28 months later when  Dwight D. Eisenhower  was in the  White House  and  John Foster Dulles  took the helm at the  State Department . \"Anglo-American cooperation on that occasion brought down the Iranian prime minister and reinstated a U.S.-backed shah.\"   [ 51 ]    ( Harry Truman , the previous president, had refused demands by the British and international oil companies to carry out the coup). \n Mohammad Mosaddegh attempted to negotiate with the AIOC, but the company rejected his proposed compromise. Mosaddegh's plan, based on the 1948 compromise between the  Venezuelan  Government of  Romulo Gallegos  and  Creole Petroleum ,   [ 52 ]    would divide the profits from oil 50/50 between Iran and Britain. Against the recommendation of the United States, Britain refused this proposal and began planning to undermine and overthrow the Iranian government.   [ 53 ]    \n That summer, American diplomat  Averell Harriman  went to Iran to negotiate an Anglo-Iranian compromise, asking the Shah's help; his reply was that \"in the face of public opinion, there was no way he could say a word against nationalisation\".   [ 54 ]    Harriman held a press conference in  Tehran , calling for reason and enthusiasm in confronting the \"nationalisation crisis\". As soon as he spoke, a journalist rose and shouted: \"We and the Iranian people all support Premier Mosaddegh and oil nationalisation!\" Everyone present began cheering and then marched out of the room; the abandoned Harriman shook his head in dismay.   [ 54 ]    \n The National Iranian Oil Company suffered decreased production, because of Iranian inexperience and the AIOC's orders that British technicians not work with them, thus provoking the  Abadan Crisis  that was aggravated by the  Royal Navy 's blockading its export markets to pressure Iran to not nationalise its petroleum. The Iranian revenues were greater, because the profits went to Iran's national treasury rather than to private, foreign oil companies. By September 1951, the British had virtually ceased Abadan oil field production, forbidden British export to Iran of key British commodities (including sugar and steel),   [ 55 ]    and had frozen Iran's hard currency accounts in British banks.   [ 56 ]    British Prime Minister  Clement Attlee  considered seizing the Abadan Oil Refinery by force, but instead settled on an embargo by the  Royal Navy , stopping any ship transporting Iranian oil for carrying so-called \"stolen property\". With the re-election of  Winston Churchill  as prime minister, he took an even harder stance against Iran. \"   [ 7 ]      [ 57 ]    \n The United Kingdom took its anti-nationalisation case against Iran to the  International Court of Justice  at  The Hague ; PM Mosaddegh said the world would learn of a \"cruel and imperialistic country\" stealing from a \"needy and naked people\". Representing the AIOC, the UK lost its case. Nevertheless, the British continued to enforce the embargo of Iranian oil. In August 1952, Iranian Prime Minister Mosaddegh invited an American oil executive to visit Iran and the Truman administration welcomed the invitation. However, the suggestion upset Churchill who insisted that the U.S. not undermine his campaign to isolate Mosaddegh: \"Britain was supporting the Americans in Korea, he reminded Truman, and had a right to expect Anglo-American unity on Iran.\"   [ 57 ]    \n In mid-1952, Britain's embargo of Iranian oil was devastatingly effective. British agents in Tehran \"worked to subvert\" the government of Mosaddegh, who sought help from President Truman and then the World Bank but to no avail. \"Iranians were becoming poorer and unhappier by the day\" and Mosaddegh's political coalition was fraying. To make matters worse, the Speaker of the Parliament Ayatollah Kashani, Mossadegh's main clerical supporter, became increasingly opposed to the Prime Minister, because Mossadegh was not turning Iran into an Islamic state. By 1953, he had completely turned on him, and supported the coup, depriving Mossadegh of religious support, while giving it to the Shah.   [ 7 ]    \n In the Majlis election in the spring of 1952, Mosaddegh \"had little to fear from a free vote, since despite the country's problems, he was widely admired as a hero. A free vote, however, was not what others were planning. British agents had fanned out across the country, bribing candidates, and the regional bosses who controlled them. They hoped to fill the Majlis with deputies who would vote to depose Mosaddegh. It would be a coup carried out by seemingly legal means.\"   [ 58 ]    \n While the National Front, which often supported Mosaddegh won handily in the big cities, there was no one to monitor voting in the rural areas. Violence broke out in Abadan and other parts of the country where elections were hotly contested. Faced with having to leave Iran for The Hague where Britain was suing for control of Iranian oil, Mossadegh's cabinet voted to postpone the remainder of the election until after the return of the Iranian delegation from The Hague.   [ 59 ]    \n While Mosaddegh dealt with political challenge, he faced another that most Iranians considered far more urgent. The British blockade of Iranian seaports meant that Iran was left without access to markets where it could sell its oil. The embargo had the effect of causing Iran to spiral into bankruptcy. Tens of thousands had lost their jobs at the Abadan refinery, and although most understood and passionately supported the idea of nationalisation, they naturally hoped that Mosaddegh would find a way to put them back to work. The only way he could do that was to sell oil.\"   [ 60 ]    \n To make matters worse, the Communist Tudeh Party, which supported the  Soviet Union  and had attempted to kill the Shah only four years earlier, began to infiltrate the military   [ 61 ]    and send mobs to \"support Mossadegh\" (but in reality to marginalize all non-Communist opponents). Earlier, the Tudeh had denounced Mossadegh, but by 1953 they changed tack and decided to \"support\" him.   [ 62 ]    The Tudeh violently attacked opponents under the guise of helping the prime minister (the cousin of the future queen of Iran,  Farah Pahlavi , was stabbed at the age of 13 in his school by Tudeh activists),   [ 8 ]    and unwittingly helped cause Mossadegh's reputation to decline, despite the fact that he never officially endorsed them.   [ 9 ]    However, by 1953 he and the Tudeh had formed an unofficial alliance of convenience with them, they were the \"foot soldiers\" for his government, effectively replacing the Fadaiyan in that role, while the Tudeh secretly hoped that Mossadegh would institute communism.   [ 7 ]      [ 9 ]    Pro-Shah mobs also carried out attacks on Mossadegh opponents, and there may have been some CIA coordination.   [ 7 ]    \n Worried about Britain's other interests in Iran, and (thanks to the Tudeh party)   [ 9 ]    believing that Iran's nationalism was really a Soviet-backed plot, Britain persuaded US Secretary of State  John Foster Dulles  that Iran was falling to the Soviets\u2014effectively exploiting the American Cold War mindset. While President  Harry S. Truman  was busy fighting a war in Korea, he did not agree to overthrow the government of Prime Minister Mohammad Mosaddegh. However, in 1953, when  Dwight D. Eisenhower  became president, the UK convinced him to a joint coup d'\u00e9tat.   [ 45 ]    \n  Final months of Mossadegh's government   [  edit  ]   \n By 1953, economic tensions caused by the British embargo and political turmoil began to take a major toll upon Mossadegh's popularity and political power. The people were increasingly blaming him for the economic and political crisis. Political violence was becoming widespread in the form of street clashes between rival political groups.   [ 7 ]      [ 9 ]    Mossadegh was losing popularity and support among the working class which had been his strongest supporters. As he lost support, he became more autocratic.   [ 62 ]      [ 63 ]    As early as August 1952, he began to rely on  emergency powers  to rule, generating controversy among his supporters.   [ 63 ]    After an assassination attempt upon one of his cabinet ministers and himself, he ordered the jailing of dozens of his political opponents. This act created widespread anger among much of the general public, and led to accusations that Mossadegh was becoming a dictator.   [ 7 ]      [ 9 ]    The Tudeh party's unofficial alliance with Mossadegh led to fears of communism, and increasingly it was the communists who were taking part in pro-Mossadegh rallies, and attacking opponents.   [ 7 ]      [ 9 ]    \n By mid-1953 a mass of resignations by Mossadegh's parliamentary supporters reduced the National Front seats in Parliament. A  referendum to dissolve parliament  and give the prime minister power to make law was submitted to voters, and it passed with 99.9 percent approval, 2,043,300 votes to 1300 votes against.   [ 64 ]    The referendum was widely seen by opponents as a dictatorial act, and the Shah and the rest of the government were effectively stripped of their powers to rule. When Mossadegh dissolved the Parliament, his opponents decried this act because he had effectively given himself \"total power\". Ironically, this seemingly un-democratic act by a democratically elected prime minister would result in a chain of events leading to his downfall.   [ 7 ]      [ 9 ]    \n The Shah himself initially opposed the coup plans, and supported the oil nationalization, but he joined after being informed by the CIA that he too would be \"deposed\" if he didn't play along (the experience left him with a lifelong awe of American power, and would contribute to his pro-US policies, while generating a hatred of the British).   [ 9 ]    Mossadegh's decision to dissolve Parliament also contributed to his decision.   [ 9 ]    \n  Execution of Operation Ajax   [  edit  ]   \n \n    \n \n     \nMohammad Mosaddegh, the leader of National Front (Iran) and the democratic Prime Minister of Iran \n \n \n The official pretext for the start of the coup was Mossadegh's decree to dissolve Parliament, giving himself and his cabinet complete power to rule, while effectively stripping the Shah of his powers.   [ 7 ]      [ 8 ]      [ 9 ]    It resulted in him being accused of giving himself \"total and dictatorial powers.\" The Shah, who had been resisting the CIA's demands for the coup, finally agreed to support it.   [ 7 ]      [ 8 ]      [ 9 ]    Having obtained the Shah's concurrence, the CIA executed the coup.   [ 65 ]     Farmans  (royal decrees) dismissing Mosaddegh and appointing  General Fazlollah Zahedi  (a loyalist who had helped Reza Shah reunify Iran decades earlier)   [ 8 ]    were drawn up by the coup plotters and signed by the Shah. On Saturday 15 August, Colonel  Nematollah Nassiri ,   [ 8 ]    the commander of the  Imperial Guard , delivered to Mosaddegh a firman from the Shah dismissing him. Mosaddegh, who had been warned of the plot, probably by the Communist Tudeh party, rejected the firman and had Nassiri arrested.   [ 66 ]    Mosaddegh argued at his trial after the coup that under the Iranian constitutional monarchy, the Shah had no constitutional right to issue an order for the elected Prime Minister's dismissal without Parliament's consent. However, the constitution at the time did allow for such an action, which Mossadegh considered unfair.   [ 9 ]      [ 67 ]    The action was publicized within Iran by the CIA and in the United States by   The New York Times  . Mossadegh's supporters (reduced to mainly the Tudeh by this time) took to the streets in violent protests.   [ 7 ]    The Shah, fearing a backlash, escaped from Iran to Iraq and then to Italy by a plane flown by  Mohammad Khatam .   [ 68 ]    He was accompanied in his escape by his second wife  Soraya Esfandiary-Bakhtiari  and Aboul Fath Atabay.   [ 68 ]    \n After the first coup attempt failed, General Zahedi, declaring that he was the rightful prime minister of Iran, shuttled between multiple  safe houses  attempting to avoid arrest. Mossadegh ordered security forces to round up the coup plotters, and dozens were imprisoned. Believing that he had succeeded, and that he was in full control of the government, Mossadegh erred. Assuming that the CIA coup failed, he asked his supporters to return to their homes and to continue with their lives as normal. The Tudeh party members also returned to their homes, no longer carrying out enforcement duties.   [ 7 ]      [ 8 ]      [ 9 ]    \n However, General Zahedi, who was still on the run, met with the pro-Shah Ayatollah  Mohammad Behbahani  and other Shah supporters in secret. There (using CIA money deridingly known as \"Behbahani dollars\"), they quickly created a new plan. Already, much of the country was in shock from the Shah's flight from Iran, fears of communism, and Mossadegh's arrests of opponents. They capitalized on this sentiment in their plans. The Ayatollah Behbahani also used his influence to rally religious demonstrators against Mossadegh.   [ 7 ]      [ 8 ]      [ 9 ]    \n On August 19, hired infiltrators posing as Tudeh party members began to organize a \"communist revolution\". They came and encouraged real Tudeh members to join in. Soon, the Tudeh members took to the streets attacking virtually any symbols of capitalism, and looting private businesses and destroying shops. Much of southern Tehran's business district, including the bazaars, were vandalized. With sudden mass public revulsion against this act, the next part of Zahedi's plan came into action. From the vandalized bazaars, a second group of paid infiltrators, this time posing as Shah supporters, organized angry crowds of common Iranians who were terrified about a \"communist revolution\" and sickened by the violence.   [ 7 ]      [ 8 ]      [ 9 ]    \n By the middle of the day, large crowds of regular citizens, armed with improvised weapons, took to the streets in mass demonstrations, and beat back the Tudeh party members. Under Zahedi's authority, the army left its barracks and drove off the communist Tudeh and then stormed all government buildings with the support of demonstrators. Mossadegh fled after a tank fired a single shell into his house, but he later turned himself in to the army's custody. To prevent further bloodshed, he refused a last attempt to organize his supporters.   [ 69 ]    By the end of the day, Zahedi and the army were in control of the government.   [ 7 ]      [ 8 ]      [ 9 ]    \n The Shah stayed in Italy until he learned that the coup removed Mossadegh.   [ 65 ]    Alan Dulles, the director of the CIA, flew back with the Shah from Rome to Tehran.   [ 70 ]    Zahedi officially replaced Mosaddegh. Mossadegh was arrested, tried, and originally sentenced to death. But on the Shah's personal orders, his sentence was commuted   [ 8 ]      [ 9 ]      [ 71 ]      [ 72 ]    to three years' solitary confinement in a military prison, followed by house arrest until his death.   [ 73 ]    \n  U.S. role   [  edit  ]   \n As a condition for restoring the Anglo-Iranian Oil Company, in 1954 the U.S. required removal of the AIOC's monopoly; five American petroleum companies,  Royal Dutch Shell , and the  Compagnie Fran\u00e7aise des P\u00e9troles , were to draw Iran's petroleum after the successful coup d'\u00e9tat\u2014Operation Ajax. The Shah declared this to be a \"victory\" for Iranians, with the massive influx of money from this agreement resolving the economic collapse from the last three years, and allowing him to carry out his planned modernization projects.   [ 9 ]    \n As part of that, the CIA organized anti-Communist guerrillas to fight the Tudeh Party if they seized power in the chaos of Operation Ajax.   [ 74 ]    Per released  National Security Archive  documents, Undersecretary of State  Walter Bedell Smith  reported that the CIA had agreed with  Qashqai  tribal leaders, in south Iran, to establish a clandestine safe haven from which U.S.-funded guerrillas and spies could operate.   [ 74 ]      [ 75 ]    \n Operation Ajax's formal leader was senior CIA officer  Kermit Roosevelt, Jr. , while career agent  Donald Wilber  was the operational leader, planner, and executor of the deposition of Mosaddegh. The coup d'\u00e9tat depended on the impotent Shah's dismissing the popular and powerful Prime Minister and replacing him with General  Fazlollah Zahedi , with help from Colonel  Abbas Farzanegan \u2014a man agreed upon by the British and Americans after determining his anti-Soviet politics.   [ 75 ]    \n The CIA sent  Major General   Norman Schwarzkopf, Sr.  to persuade the exiled Shah to return to rule Iran. Schwarzkopf trained the security forces that would become known as  SAVAK  to secure the shah's hold on power.   [ 76 ]    \n  The coup and CIA records   [  edit  ]   \n The coup was carried out by the U.S. administration of  Dwight D. Eisenhower  in a covert action advocated by Secretary of State  John Foster Dulles , and implemented under the supervision of his brother  Allen Dulles , the  Director of Central Intelligence .   [ 77 ]    The coup was organized by the United States'  CIA  and the United Kingdom's  MI6 , two spy agencies that aided royalists and royalist elements of the  Iranian army .   [ 78 ]    Much of the money was channeled through the pro-Shah  Ayatollah Mohammad Behbahani , who drew many religious masses to the plot. Ayatollah Kashani had completely turned on Mossadegh and supported the Shah, by this point.   [ 7 ]    \n According to a heavily redacted CIA document   [ 79 ]    released to the  National Security Archive  in response to a  Freedom of Information  request, \"Available documents do not indicate who authorized CIA to begin planning the operation, but it almost certainly was President  Eisenhower  himself. Eisenhower biographer  Stephen Ambrose  has written that the absence of documentation reflected the President's style.\" \n The CIA document then quotes from the Ambrose biography of Eisenhower: \n \n Before going into the operation, Ajax had to have the approval of the President. Eisenhower participated in none of the meetings that set up Ajax; he received only oral reports on the plan; and he did not discuss it with his Cabinet or the NSC. Establishing a pattern he would hold to throughout his Presidency, he kept his distance and left no documents behind that could implicate the President in any projected coup. But in the privacy of the Oval Office, over cocktails, he was kept informed by Foster Dulles, and he maintained a tight control over the activities of the CIA.   [ 80 ]    \n \n CIA officer  Kermit Roosevelt, Jr. , the grandson of former President  Theodore Roosevelt , carried out the operation planned by CIA agent  Donald Wilber . One version of the CIA history, written by Wilber, referred to the operation as TPAJAX.   [ 81 ]      [ 82 ]    \n \n    \n \n     \n Shaban Jafari , commonly known as Shaban the Brainless ( Shaban Bimokh ), was a notable pro-Shah strongman and thug. He led his men and other bribed street thugs and was a prominent figure during the coup. \n \n \n During the coup, Roosevelt and Wilber, representatives of the Eisenhower administration, bribed Iranian government officials, reporters, and businessmen. They also bribed street thugs to support the Shah and oppose Mosaddegh.   [ 83 ]    The deposed Iranian leader, Mosaddegh, was taken to jail and Iranian General  Fazlollah Zahedi  named himself prime minister in the new, pro-western government. \n Another tactic Roosevelt admitted to using was bribing demonstrators into attacking symbols of the Shah, while chanting pro-Mossadegh slogans. As king, the Shah was largely seen as a symbol of Iran at the time by many Iranians and monarchists. Roosevelt declared that the more that these agents showed their hate for the Shah and attacked his symbols, the more it caused regular people to dislike and distrust Mossadegh.   [ 84 ]    \n \n    \n \n     \n Fazlollah Zahedi  \n \n \n Professor Masoud Kazemzadeh wrote that several \"Iranian fascists and Nazi sympathizers played prominent roles in the coup regime. General Fazlollah Zahedi, who had been arrested and imprisoned by the British during World War II for his attempt to establish a pro-Nazi government, was made Prime Minister on 19 August 1953. The CIA gave Zahedi about $100,000 before the coup and an additional $5\u00a0million the day after the coup to help consolidate support for the coup.\"   [ 85 ]    Kazemzadeh also said \"Bahram Shahrokh, a trainee of Joseph Goebbels and Berlin Radio's Persian-language program announcer during the Nazi rule, became director of propaganda. Mr. Sharif-Emami, who also had spent some time in jail for his pro-Nazi activities in the 1940s, assumed several positions after 1953 coup, including Secretary General of the Oil Industry, President of the Senate, and Prime Minister (twice).\"   [ 85 ]    The US government gave Zahedi a further $28\u00a0million a month later, and that another $40\u00a0million was given in 1954 after the Iran government signed the oil consortium deal.   [ 86 ]    \n The British and American spy agencies returned the monarchy to Iran by installing the pro-western  Mohammad Reza Pahlavi  on the throne where his rule lasted 26 years. The Shah was overthrown in 1979.   [ 45 ]      [ 87 ]    Masoud Kazemzadeh, associate professor of political science at the  Sam Houston State University , wrote that the Shah was directed by the CIA and MI6, and assisted by high-ranking Shia clerics.   [ 85 ]    He wrote that the coup employed mercenaries including \"prostitutes and thugs\" from Tehran's red light district.   [ 85 ]    \n The overthrow of Iran's elected government in 1953 ensured Western control of Iran's petroleum resources and prevented the  Soviet Union  from competing for Iranian oil.   [ 88 ]      [ 89 ]      [ 90 ]      [ 91 ]    Some Iranian clerics cooperated with the western spy agencies because they were dissatisfied with Mosaddegh's secular government.   [ 83 ]    \n While the broad outlines of the operation are known, \"...the C.I.A.'s records were widely thought by historians to have the potential to add depth and clarity to a famous but little-documented intelligence operation,\" reporter Tim Weiner wrote in  The New York Times  29 May 1997.   [ 92 ]    \n \"The Central Intelligence Agency, which has repeatedly pledged for more than five years to make public the files from its secret mission to overthrow the government of Iran in 1953, said today that it had destroyed or lost almost all the documents decades ago.\"   [ 92 ]      [ 93 ]      [ 94 ]    \n \n \"A historian who was a member of the C.I.A. staff in 1992 and 1993 said in an interview today that the records were obliterated by 'a culture of destruction' at the agency. The historian, Nick Cullather, said he believed that records on other major cold war covert operations had been burned, including those on secret missions in  Indonesia  in the 1950s and a successful C.I.A.-sponsored coup in  Guyana  in the early 1960s. 'Iran\u2014there's nothing', Mr. Cullather said. 'Indonesia\u2014very little. Guyana\u2014that was burned. ' \"   [ 92 ]    \n \n  Donald Wilber , one of the CIA officers who planned the 1953 coup in Iran, wrote an account titled,  Clandestine Service History Overthrow of Premier Mossadeq of Iran: November 1952 \u2013 August 1953 . Wilber said one goal of the coup was to strengthen the Shah. \n In 2000,  James Risen  at The   New York Times   obtained the previously secret CIA version of the coup written by Wilber and summarized   [ 95 ]    its contents, which includes the following. \n \n In early August, the C.I.A. stepped up the pressure. Iranian operatives pretending to be Communists threatened Muslim leaders with  savage punishment if they opposed Mossadegh,  seeking to stir anti-Communist sentiment in the religious community. \n In addition, the secret history says, the house of at least one prominent Muslim was bombed by C.I.A. agents posing as Communists. It does not say whether anyone was hurt in this attack. \n The agency was also intensifying its propaganda campaign. A leading newspaper owner was granted a personal loan of about $45,000,  in the belief that this would make his organ amenable to our purposes.  \nBut the shah remained intransigent. In an 1 August meeting with General  Norman Schwarzkopf , he refused to sign the C.I.A.-written decrees firing Mr. Mossadegh and appointing General Zahedi. He said he doubted that the army would support him in a showdown. \n The  National Security Archive  at  George Washington University  contains the full account by Wilber, along with many other coup-related documents and analysis.   [ 96 ]      [ 97 ]      [ 98 ]    \n In a January 1973 telephone conversation made public in 2009, U.S. President  Richard Nixon  told CIA Director  Richard Helms , who was awaiting Senate confirmation to become the new  U.S. Ambassador  to Iran, that Nixon wanted Helms to be a \"regional ambassador\" to Persian Gulf oil states, and noted that Helms had been a schoolmate of  Shah Reza Pahlavi .   [ 99 ]    \n In August 2013, at the sixtieth anniversary of the coup, the CIA released documents showing they were involved in staging the coup. The documents also describe the motivations behind the coup and the strategies used to stage it.   [ 5 ]    The documents also showed that the UK tried to censor information regarding its role in the coup. The Foreign Office said \"it could neither confirm nor deny Britain's involvement in the coup\". Nonetheless, many CIA documents about the coup still remain classified.   [ 12 ]    \n  U.S. motives   [  edit  ]   \n Historians disagree on what motivated the United States to change its policy towards Iran and stage the coup. Middle East historian  Ervand Abrahamian  identified the coup d'\u00e9tat as \"a classic case of nationalism clashing with imperialism in the Third World\". He states that Secretary of State  Dean Acheson  admitted the  \" 'Communist threat' was a smokescreen\" in responding to President Eisenhower's claim that the Tudeh party was about to assume power.   [ 100 ]    \n \n Throughout the crisis, the \"communist danger\" was more of a rhetorical device than a real issue\u2014i.e. it was part of the cold-war discourse ...The Tudeh was no match for the armed tribes and the 129,000-man military. What is more, the British and Americans had enough inside information to be confident that the party had no plans to initiate armed insurrection. At the beginning of the crisis, when the Truman administration was under the impression a compromise was possible, Acheson had stressed the communist danger, and warned if Mosaddegh was not helped, the Tudeh would take over. The (British) Foreign Office had retorted that the Tudeh was no real threat. But, in August 1953, when the Foreign Office echoed the Eisenhower administration's claim that the Tudeh was about to take over, Acheson now retorted that there was no such communist danger. Acheson was honest enough to admit that the issue of the Tudeh was a smokescreen.   [ 100 ]    \n \n Abrahamian states that Iran's oil was the central focus of the coup, for both the British and the Americans, though \"much of the discourse at the time linked it to the Cold War\".   [ 101 ]    Abrahamian wrote, \"If Mosaddegh had succeeded in nationalizing the British oil industry in Iran, that would have set an example and was seen at that time by the Americans as a threat to U.S. oil interests throughout the world, because other countries would do the same.\"   [ 101 ]    Mosaddegh did not want any compromise solution that allowed a degree of foreign control. Abrahamian said that Mosaddegh \"wanted real nationalization, both in theory and practice\".   [ 101 ]    \n Tirman points out that agricultural land owners were politically dominant in Iran, well into the 1960s and the monarch, Reza Shah's aggressive land expropriation policies\u2014to the benefit of himself and his supporters\u2014resulted in the Iranian government being Iran's largest land owner. \"The landlords and oil producers had new backing, moreover, as American interests were for the first time exerted in Iran. The Cold War was starting, and Soviet challenges were seen in every leftist movement. But the reformers were at root nationalists, not communists, and the issue that galvanized them above all others was the control of oil.\"   [ 102 ]    The belief that oil was the central motivator behind the coup has been echoed in the popular media by authors such as  Robert Byrd ,   [ 103 ]     Alan Greenspan ,   [ 104 ]    and  Ted Koppel .   [ 105 ]    \n However, Middle East political scientist  Mark Gasiorowski  states that while, on the face of it, there is considerable merit to the argument that U.S. policymakers helped U.S. oil companies gain a share in Iranian oil production after the coup, \"it seems more plausible to argue that U.S. policymakers were motivated mainly by fears of a communist takeover in Iran, and that the involvement of U.S. companies was sought mainly to prevent this from occurring. The Cold War was at its height in the early 1950s, and the Soviet Union was viewed as an expansionist power seeking world domination. Eisenhower had made the Soviet threat a key issue in the 1952 elections, accusing the Democrats of being soft on communism and of having 'lost China.' Once in power, the new administration quickly sought to put its views into practice.\"   [ 53 ]    \n Gasiorowski further states \"the major U.S. oil companies were not interested in Iran at this time. A glut existed in the world oil market. The U.S. majors had increased their production in Saudi Arabia and Kuwait in 1951 in order to make up for the loss of Iranian production; operating in Iran would force them to cut back production in these countries which would create tensions with Saudi and Kuwaiti leaders. Furthermore, if nationalist sentiments remained high in Iran, production there would be risky. U.S. oil companies had shown no interest in Iran in 1951 and 1952. By late 1952, the Truman administration had come to believe that participation by U.S. companies in the production of Iranian oil was essential to maintain stability in Iran and keep Iran out of Soviet hands. In order to gain the participation of the major U.S. oil companies, Truman offered to scale back a large anti-trust case then being brought against them. The Eisenhower administration shared Truman's views on the participation of U.S. companies in Iran and also agreed to scale back the anti-trust case. Thus, not only did U.S. majors not want to participate in Iran at this time, it took a major effort by U.S. policymakers to persuade them to become involved.\"   [ 53 ]    \n In 2004, Gasiorowski edited a book on the coup   [ 106 ]    arguing that \"the climate of intense cold war rivalry between the superpowers, together with Iran's strategic vital location between the Soviet Union and the Persian Gulf oil fields, led U.S. officials to believe that they had to take whatever steps were necessary to prevent Iran from falling into Soviet hands.\"   [ 106 ]    While \"these concerns seem vastly overblown today\"   [ 106 ]    the pattern of \"the 1945\u201346 Azerbaijan crisis, the consolidation of Soviet control in Eastern Europe, the communist triumph in China, and the  Korean War \u2014and with the  Red Scare  at its height in the United States\"   [ 106 ]    would not allow U.S. officials to risk allowing the Tudeh Party to gain power in Iran.   [ 106 ]    Furthermore, \"U.S. officials believed that resolving the oil dispute was essential for restoring stability in Iran, and after March 1953 it appeared that the dispute could be resolved only at the expense either of Britain or of Mosaddeq.\"   [ 106 ]    He concludes \"it was geostrategic considerations, rather than a desire to destroy Mosaddeq's movement, to establish a dictatorship in Iran or to gain control over Iran's oil, that persuaded U.S. officials to undertake the coup.\"   [ 106 ]    \n Faced with choosing between British interests and Iran, the U.S. chose Britain, Gasiorowski said. \"Britain was the closest ally of the United States, and the two countries were working as partners on a wide range of vitally important matters throughout the world at this time. Preserving this close relationship was more important to U.S. officials than saving Mosaddeq's tottering regime.\" A year earlier, British Prime Minister  Winston Churchill  used Britain's support for the U.S. in the Cold War to insist the United States not undermine his campaign to isolate Mosaddegh. \"Britain was supporting the Americans in Korea, he reminded  Truman , and had a right to expect 'Anglo-American unity' on Iran.\"   [ 107 ]    \n The two main winners of World War II, who had been  Allies  during the war, became superpowers and competitors as soon as the war ended, each with their own spheres of influence and client states. After the 1953 coup, Iran became one of the client states of the United States. In his earlier book,  U.S. Foreign Policy and the Shah: Building a Client State in Iran , Gasiorowski identifies the client states of the United States and of the Soviet Union during 1954\u20131977. Gasiorowski identified Cambodia, Guatemala, Indonesia, Iran, Laos, Nicaragua, Panama, the Philippines, South Korea, South Vietnam, and Taiwan as strong client states of the United States and identified those that were moderately important to the U.S. as Bolivia, Brazil, Colombia, Costa Rica, Dominican Republic, Ecuador, El Salvador, Greece, Haiti, Honduras, Israel, Jordan, Liberia, Pakistan, Paraguay, Thailand, Tunisia, Turkey, and Zaire. He named Argentina, Chile, Ethiopia, Japan, and Peru as \"weak\" client states of the United States.   [ 108 ]    \n Gasiorowski identified Bulgaria, Cuba, Czechoslovakia, East Germany, Hungary, Mongolia, Poland, North Vietnam, and Rumania as \"strong client states\" of the Soviet Union, and Afghanistan, Egypt, Guinea, North Korea, Somalia, and Syria as moderately important client states. Mali and South Yemen were classified as weak client states of the Soviet Union. \n According to Kinzer, for most Americans, the crisis in Iran became just part of the conflict between Communism and \"the Free world\".   [ 109 ]    \"A great sense of fear, particularly the fear of encirclement, shaped American consciousness during this period. ... Soviet power had already subdued Latvia, Lithuania, and Estonia. Communist governments were imposed on Bulgaria and Romania in 1946, Hungary and Poland in 1947, and Czechoslovakia in 1948. Albania and Yugoslavia also turned to communism. Greek communists made a violent bid for power. Soviet soldiers blocked land routes to Berlin for sixteen months. In 1949, the Soviet Union successfully tested a nuclear weapon. That same year, pro-Western forces in China lost their civil war to communists led by Mao Zedong. From Washington, it seemed that enemies were on the march everywhere.\"   [ 109 ]    Consequently, \"the United States, challenged by what most Americans saw as a relentless communist advance, slowly ceased to view Iran as a country with a unique history that faced a unique political challenge.\"   [ 110 ]    Some historians, including  Douglas Little ,   [ 111 ]     Abbas Milani    [ 112 ]    and  George Lenczowski    [ 113 ]    have echoed the view that fears of a communist takeover or Soviet influence motivated the U.S. to intervene. \n Shortly before the overthrow of Mossadegh,  Adolf A. Berle  warned the U.S. State Department that U.S. \"control of the Middle East was at stake, which, with its Persian Gulf oil, meant 'substantial control of the world.'\"   [ 114 ]    \n  News Coverage in the United States and Great Britain   [  edit  ]   \n When Mossadegh called for the dissolution of the Majlis in August 1953, the editors of the  New York Times  gave the opinion that: \"A plebiscite more fantastic and farcical than any ever held under Hitler or Stalin is now being staged in Iran by Premier Mossadegh in an effort to make himself unchallenged dictator of the country.\"   [ 115 ]    \n A year after the coup, the  New York Times  wrote on 6 August 1954, that a new oil \"agreement between Iran and a consortium of foreign oil companies\" was \"good news indeed\".   [ 116 ]    \n \n \"Costly as the dispute over Iranian oil has been to all concerned, the affair may yet be proved worthwhile if lessons are learned from it: Underdeveloped countries with rich resources now have an object lesson in the heavy cost that must be paid by one of their number which goes berserk with fanatical nationalism. It is perhaps too much to hope that Iran's experience will prevent the rise of Mossadeghs in other countries, but that experience may at least strengthen the hands of more reasonable and more far-seeing leaders. In some circles in Great Britain the charge will be pushed that American 'imperialism'\u2014in the shape of the American oil firms in the consortium!\u2014has once again elbowed Britain from a historic stronghold.\"   [ 116 ]    \n \n The British government used the BBC's Persian service for advancing its propaganda against Mosaddegh. Anti-Mosaddegh material were repeatedly aired on the radio channel to the extent that Iranian staff at the BBC Persian radio went on strike to protest the move.   [ 117 ]    The documentary  Cinematograph  aired on 18 August 2011 on the anniversary of the coup. In it, BBC admitted for the first time to the role of BBC Persian radio as the propaganda arm of the British government in Iran. The  Cinematograph  narrator said: \n \n The British government used the BBC Persian radio for advancing its propaganda against Mosaddegh and anti-Mosaddegh material were repeatedly aired on the radio channel to the extent that Iranian staff at the BBC Persian radio went on strike to protest the move. \n \n The documentary quoted a 21 July 1951 classified document in which a Foreign Office official thanked the British ambassador for his proposals that were precisely followed by the BBC Persian radio to strengthen its propaganda against Mosaddegh: \n \n The BBC had already made most of the points which you listed, but they were very glad to have an indication from you of what was likely to be most effective and will arrange their programme accordingly... We should also avoid direct attacks on the 'ruling classes' since it seems probable that we may want to deal with a government drawn from those classes should Mosaddegh fall. \n \n The document further stressed that the Foreign Office \"shall be grateful for [the ambassador's] comments on the propaganda line we have proposed\".   [ 118 ]    \n  Aftermath   [  edit  ]   \n The coup has been said to have \"left a profound and long-lasting legacy.\"   [ 119 ]      [ 120 ]    \n  Blowback   [  edit  ]   \n According to the history based on documents released to the  National Security Archive  and reflected in the book  Mohammad Mosaddeq and the 1953 Coup in Iran,  edited by Mark J. Gasiorowski and Malcolm Byrne, the coup caused long-lasting damage to the U.S. reputation. \n \n \"The '28 Mordad' coup, as it is known by its Persian date [in the  Solar Hijri calendar ], was a watershed for Iran, for the Middle East and for the standing of the United States in the region. The joint U.S.-British operation ended Iran's drive to assert sovereign control over its own resources and helped put an end to a vibrant chapter in the history of the country's nationalist and democratic movements. These consequences resonated with dramatic effect in later years. When the Shah finally fell in 1979, memories of the U.S. intervention in 1953, which made possible the monarch's subsequent, and increasingly unpopular, 25-year reign intensified the anti-American character of the revolution in the minds of many Iranians.\"   [ 121 ]    \n \n The authoritarian monarch appreciated the coup, Kermit Roosevelt wrote in his account of the affair. \"'I owe my throne to God, my people, my army and to you!' By 'you' he [the shah] meant me and the two countries\u2014Great Britain and the United States\u2014I was representing. We were all heroes.\"   [ 84 ]    \n On 16 June 2000,   The New York Times   published the secret CIA report, \"Clandestine Service History, Overthrow of Premier Mossadeq of Iran, November 1952 \u2013 August 1953,\" partly explaining the coup from CIA agent Wilber's perspective. In a related story,  The New York Times  reporter  James Risen  penned a story revealing that Wilber's report, hidden for nearly five decades, had recently come to light. \n In the summer of 2001, Ervand Abrahamian writes in the journal  Science &amp; Society  that Wilber's version of the coup was missing key information some of which was available elsewhere. \n \n  The New York Times  recently leaked a CIA report on the 1953 American-British overthrow of Mosaddeq, Iran's Prime Minister. It billed the report as a secret history of the secret coup, and treated it as an invaluable substitute for the U.S. files that remain inaccessible. But a reconstruction of the coup from other sources, especially from the archives of the British Foreign Office, indicates that this report is highly sanitized. It glosses over such sensitive issues as the crucial participation of the U.S. ambassador in the actual overthrow; the role of U.S. military advisers; the harnessing of local Nazis and Muslim terrorists; and the use of assassinations to destabilize the government. What is more, it places the coup in the context of the Cold War rather than that of the Anglo-Iranian oil crisis\u2014a classic case of nationalism clashing with imperialism in the Third World.   [ 122 ]    \n \n In a review of  Tim Weiner 's  Legacy of Ashes , historian  Michael Beschloss  wrote, \"Mr. Weiner argues that a bad C.I.A. track record has encouraged many of our gravest contemporary problems... A generation of Iranians grew up knowing that the C.I.A. had installed the shah,\" Mr. Weiner notes. \"In time, the chaos that the agency had created in the streets of Tehran would return to haunt the United States.\"   [ 123 ]    \n The administration of  Dwight D. Eisenhower  considered the coup a success, but, given its  blowback , that opinion is no longer generally held, because of its \"haunting and terrible legacy\".   [ 124 ]    In 2000,  Madeleine Albright ,  U.S. Secretary of State , said that intervention by the U.S. in the internal affairs of Iran was a setback for democratic government.   [ 125 ]      [ 126 ]    The coup is widely believed to have significantly contributed to the 1979  Iranian Revolution , which deposed the \"pro-Western\" Shah and replaced the monarchy with an \"anti-Western\"  Islamic Republic .   [ 31 ]    \n \"For many Iranians, the coup demonstrated duplicity by the United States, which presented itself as a defender of freedom but did not hesitate to use underhanded methods to overthrow a democratically elected government to suit its own economic and strategic interests\", the Agence France-Presse reported.   [ 127 ]    \n  United States Supreme Court Justice   William O. Douglas , who visited Iran both before and after the coup, wrote that \"When Mossadegh and Persia started basic reforms, we became alarmed. We united with the British to destroy him; we succeeded; and ever since, our name has not been an honored one in the Middle East.\"   [ 128 ]    \n  Iran   [  edit  ]   \n When the Shah returned to Iran after the coup, he was greeted by a cheering crowd. He wrote in his memoirs that while he had been a king for over a decade, for the first time he felt that the people had \"elected\" and \"approved\" of him, and that he had a \"legitimate\" popular mandate in order to carry out his reforms (although some in the crowd may have been bribed). The Shah however, never was able to remove the reputation of being a \"foreign imposed\" ruler among non-royalist Iranians. However the Shah throughout his rule continued to assume that he was supported by virtually everybody in Iran, and sank into deep dejection when in 1978 massive mobs demanded his ouster. The incident left him in awe of American power, while it also gave him a deep hatred of the British.   [ 9 ]    When the Shah attempted during the 1970s to once again control the oil prices (through  OPEC ), and cancel the same oil consortium agreement that caused the 1953 coup, it resulted in a massive decline in US support for the Shah, helping to ironically hasten his downfall.   [ 29 ]    \n An immediate consequence of the coup d'\u00e9tat was the suppression of all republicanist    [ 9 ]    political dissent, especially the liberal and nationalist opposition umbrella group  National Front  as well as the (Communist)  Tudeh  party, and concentration of political power in the Shah and his courtiers.   [ 129 ]    \n The minister of Foreign Affairs and the closest associate of Mosaddegh,  Hossein Fatemi , was executed by order of the Shah's military court by firing squad on 10 November 1954.   [ 130 ]    According to Kinzer, \"The triumphant Shah [Pahlavi] ordered the execution of several dozen military officers and student leaders who had been closely associated with Mohammad Mossadegh\"   [ 131 ]    \n As part of the post-coup d'\u00e9tat political repression between 1953 and 1958, the Shah outlawed the National Front, and arrested most of its leaders.   [ 132 ]    The Shah personally spared Mossadegh the death penalty, and he was given 3 years in prison, followed by house arrest for life.   [ 9 ]    \n The Communist Tudeh, however, bore the main brunt of the crackdown.   [ 133 ]    The Shah's security forces arrested 4,121 Tudeh political activists including 386 civil servants, 201 college students, 165 teachers, 125 skilled workers, 80 textile workers, 60 cobblers, and 11 housewives [   clarification needed   ] .   [ 134 ]    Forty were executed (primarily for murder, such as  Khosrow Roozbeh ),   [ 8 ]      [ 9 ]    another 14 died under torture and over 200 were sentenced to life imprisonment.   [ 132 ]    The Shah's post-coup dragnet also captured 477 Tudeh members (\"22 colonels, 69 majors, 100 captains, 193 lieutenants, 19 noncommissioned officers, and 63 military cadets\") who were in the Iranian armed forces.   [ 135 ]    After their presence was revealed, some National Front supporters complained that this Communist Tudeh military network could have saved Mosaddegh. However, few Tudeh officers commanded powerful field units, especially tank divisions that might have countered the coup. Most of the captured Tudeh officers came from the military academies, police and medical corps.   [ 135 ]      [ 136 ]    At least eleven of the captured army officers were tortured to death between 1953 and 1958.   [ 134 ]    Nevertheless, the Shah's response was exceedingly mild compared to the typical reaction that the future Islamic Republic would usually give to its opponents, or even other contemporary autocracies.   [ 9 ]      [ 137 ]      [ 138 ]      [ 139 ]      [ 140 ]    \n After the 1953 coup, the Shah's government formed the  SAVAK  (secret police), many of whose agents were trained in the United States. The SAVAK monitored dissidents, and carried out censorship. After the 1971  Siahkal Incident , it was given a \"loose leash\" to torture suspected dissidents with \"brute force\" that, over the years, \"increased dramatically\", and nearly 100 people were executed for political reasons during the last 20 years of the Shah's rule.   [ 138 ]      [ 141 ]    Nevertheless, the Shah generally dealt with dissent in a relatively mild manner compared to most autocratic leaders.   [ 9 ]      [ 137 ]    After the revolution, SAVAK was officially abolished, but was in reality \"drastically expanded\" into a  new organization  that killed over 8,000-12,000 prisoners between 1981-1985 alone, and 20,000-30,000 in total, with one prisoner who served time under both the Shah and the Islamic Republic declaring that \"four months under (Islamic Republic's) warden  Asadollah Lajevardi  took the toll of four years under SAVAK\".   [ 138 ]      [ 139 ]      [ 140 ]    \n Another effect was sharp improvement of Iran's economy; the British-led oil embargo against Iran ended, and oil revenue increased significantly beyond the pre-nationalisation level. Despite Iran not controlling its national oil, the Shah agreed to replacing the Anglo-Iranian Oil Company with a consortium\u2014British Petroleum and eight European and American oil companies; in result, oil revenues increased from $34\u00a0million in 1954\u20131955 to $181\u00a0million in 1956\u20131957, and continued increasing,   [ 142 ]    and the United States sent development aid and advisers. The Shah's government attempted to solve the issue of oil nationalization through this method, and Iran began to develop rapidly under his rule. The Shah later in his memoirs declared that Mossadegh was a \"dictator\" that was \"damaging\" Iran through his \"stubbornness\", while he (the Shah) \"followed\" the smarter option.   [ 9 ]    By the 1970s, Iran was wealthier than all of its surrounding neighbors, and economists frequently predicted that it would become a major global economic power, and a  developed country .   [ 9 ]    \n In the 1970s the Shah's government increased taxes that foreign companies were obliged to pay from 50% to 80% and royalty payments from 12.5% to 20%. At the same time the price of oil reverted to Iranian control. Oil companies now only earned 22 cents per barrel of oil.   [ 143 ]    By 1973, the Shah helped engineer an oil crisis which resulted in a massive influx of oil revenue and rapid socio-economic expansion of the country. The Shah even declared that he would not renew the 1954 oil consortium at all when it expired in 1979. The Shah was becoming increasingly independent of the United States. By the mid 1970s the United States, the Shah's \"ally\" became increasingly wary of him, and President  Jimmy Carter  withdrew American support of him almost completely when Khomeini's mobs raged throughout Iran in 1978, helping to seal the Shah's and Iran's fate. The rapid expansion of the country's economy created unexpected tensions as the social fabric was being changed, resulting in the  Iranian Revolution .   [ 9 ]      [ 29 ]    \n  Jacob G. Hornberger , founder and president, of  The Future of Freedom Foundation , said, \"U.S. officials, not surprisingly, considered the operation one of their greatest foreign policy successes\u2014until, that is, the enormous convulsion that rocked Iranian society with the violent ouster of the Shah and the installation of a virulently anti-American Islamic regime in 1979\".   [ 144 ]    According to him, \"the coup, in essence, paved the way for the rise to power of the  Ayatollah Ruhollah Khomeini  and all the rest that's happened right up to 9/11 and beyond\".   [ 144 ]    \n  Internationally   [  edit  ]   \n Kinzer wrote that the 1953 coup d'\u00e9tat was the first time the U.S. used the CIA to overthrow a democratically elected, civil government.   [ 145 ]    The Eisenhower administration viewed Operation Ajax as a success, with \"immediate and far-reaching effect. Overnight, the CIA became a central part of the American foreign policy apparatus, and covert action came to be regarded as a cheap and effective way to shape the course of world events\"\u2014a coup engineered by the CIA called  Operation PBSUCCESS  toppling the duly elected  Guatemalan  government of  Jacobo Arbenz Guzm\u00e1n , which had nationalised farm land owned by the  United Fruit Company , followed the next year.   [ 146 ]    \n A pro-American government in Iran doubled the United States' geographic and strategic advantage in the Middle East, as  Turkey , also bordering the USSR, was part of  NATO .   [ 147 ]    \n In 2000 U.S. Secretary of State Madeleine K. Albright, acknowledged the coup's pivotal role in the troubled relationship and \"came closer to apologizing than any American official ever has before\". \n \n The Eisenhower administration believed its actions were justified for strategic reasons. ... But the coup was clearly a setback for Iran's political development. And it is easy to see now why many Iranians continue to resent this intervention by America in their internal affairs.   [ 148 ]      [ 149 ]      [ 150 ]    \n \n In June 2009, the U.S. President  Barack Obama   in a speech  in  Cairo , Egypt, talked about the United States' relationship with Iran, mentioning the role of the U.S. in 1953 Iranian coup saying: \n \n This issue has been a source of tension between the United States and the Islamic Republic of Iran. For many years, Iran has defined itself in part by its opposition to my country, and there is indeed a tumultuous history between us. In the middle of the Cold War, the United States played a role in the overthrow of a democratically elected Iranian government. Since the Islamic Revolution, Iran has played a role in acts of hostage-taking and violence against U.S. troops and civilians. This history is well known. Rather than remain trapped in the past, I have made it clear to Iran's leaders and people that my country is prepared to move forward.   [ 151 ]    \n \n  Legacy   [  edit  ]   \n \n \n  Covert United States foreign regime \nchange actions  \n \n \n  1893 Overthrow of the Kingdom of Hawaii  \n \n \n  1948 Italian general election  \n \n \n  1949 Syrian coup d'\u00e9tat  \n \n \n  1953 Iranian coup d'\u00e9tat  \n \n \n  1954 Guatemalan coup d'\u00e9tat  \n \n \n  1959 Tibetan uprising  \n \n \n  1961 Cuba, Bay of Pigs Invasion  \n \n \n  1963 South Vietnamese coup  \n \n \n  1964 Brazilian coup d'\u00e9tat  \n \n \n  1967 Greek coup d'\u00e9tat  \n \n \n  1970 Cambodian coup  \n \n \n  1973 Chilean coup d'\u00e9tat  \n \n \n  1976 Argentine coup d'\u00e9tat  \n \n \n  1979-89 Afghanistan, Operation Cyclone  \n \n \n  1980 Turkish coup d'\u00e9tat  \n \n \n  1981-87 Nicaragua, Contras  \n \n \n  2002 Venezuelan coup d'\u00e9tat attempt  \n \n \n  2011 Libyan uprising  \n \n \n  2011-present Syrian uprising  \n \n \n \n \n \n   view   \n   talk   \n   edit   \n \n \n \n \n \n  Historical viewpoint in the Islamic Republic   [  edit  ]   \n Men associated with Mossadegh and his ideals dominated Iran's first post-revolutionary government. The first prime minister after the Iranian revolution was  Mehdi Bazargan , a close associate of Mossadegh. But with the subsequent rift between the conservative Islamic establishment and the secular liberal forces, Mossadegh's work and legacy has been largely ignored by the Islamic Republic establishment.   [ 152 ]    However, Mosaddegh remains a popular historical figure among Iranian opposition factions. Mosaddegh's image is one of the symbols of Iran's opposition movement, also known as the  Green Movement .   [ 153 ]    Kinzer writes that Mosaddegh \"for most Iranians\" is \"the most vivid symbol of Iran's long struggle for democracy\" and that modern protesters carrying a picture of Mosaddegh is the equivalent of saying \"We want democracy\" and \"No foreign intervention\".   [ 153 ]    \n In the Islamic Republic, remembrance of the coup is quite different than that of history books published in the West, and follows the precepts of Ayatollah Khomeini that Islamic jurists must guide the country to prevent \"the influence of foreign powers\".   [ 154 ]    According to historian  Ervand Abrahamian , the government tries to ignore Mosaddegh as much as possible and allocates him only two pages in high school textbooks. \"The mass media elevate Ayatollah  Abol-Ghasem Kashani  as the real leader of the oil nationalization campaign, depicting Mosaddegh as merely the ayatollah's hanger-on.\" This is despite the fact that Kashani came out against Mosaddegh by mid-1953 and \"told a foreign correspondent that Mosaddegh had fallen because he had forgotten that the shah enjoyed extensive popular support.\"   [ 155 ]    A month later, Kashani \"went even further and declared that Mosaddegh deserved to be executed because he had committed the ultimate offense: rebelling against the shah, 'betraying' the country, and repeatedly violating the sacred law.\"   [ 156 ]    \n In the Islamic Republic of Iran, Kinzer's book   All the Shah's Men : An American Coup and the Roots of Middle East Terror  has been censored of descriptions of  Ayatollah Abol-Ghasem Kashani 's activities during the Anglo-American coup d'\u00e9tat. Mahmood Kashani, the son of Abol-Ghasem Kashani, \"one of the top members of the current, ruling \u00e9lite\"   [ 157 ]    whom the Iranian  Council of Guardians  has twice approved to run for the presidency, denies there was a coup d'\u00e9tat in 1953, saying Mosaddegh was obeying British plans to undermine the role of  Shia  clerics.   [ 157 ]    \n This allegation also is posited in the book  Khaterat-e Arteshbod-e Baznesheshteh Hossein Fardoust  (The Memoirs of Retired General Hossein Fardoust), published in the Islamic Republic and allegedly written by  Hossein Fardoust , a former  SAVAK  officer. It claims that rather than being a mortal enemy of the British, Mohammad Mosaddegh always favored them, and his nationalisation campaign of the Anglo-Iranian Oil Company was inspired by \"the British themselves\".   [ 158 ]    Scholar  Ervand Abrahamian  suggests that the fact that Fardoust's death was announced before publication of the book may be significant, as the Islamic Republic authorities may have forced him into writing such statements under duress.   [ 158 ]    \n  See also   [  edit  ]   \n \n \n \n     \n  Iran portal  \n \n \n \n \n  Asadollah Rashidian  \n  CIA activities in Iran  \n  CIA sponsored regime change  \n  Divide and rule  \n  Iran and state terrorism  \n  Iran crisis of 1946  \n  List of modern conflicts in the Middle East  \n  Special Activities Division  \n  United States and state terrorism  \n  White Revolution  \n \n  References   [  edit  ]   \n \n \n  ^     a         b        Steven R. Ward (2009).   Immortal: A Military History of Iran and Its Armed Forces  . Georgetown University Press. p.\u00a0140.  ISBN \u00a0 978-1-58901-587-6  . Retrieved 16 July 2013 .   \u00a0    \n  ^     a         b         \"CSP\u2014Major Episodes of Political Violence, 1946\u20132008\" . Systemic Peace . Retrieved 22 September 2011 .   \u00a0    \n    ^      CLANDESTINE SERVICE HISTORY: OVERTHROW OF PREMIER MOSSADEQ OF IRAN , Mar. 1954: p iii.  \n    ^        Ends of British Imperialism: The Scramble for Empire, Suez, and Decolonization  . I.B.Tauris. 2007. pp.\u00a0775 of 1082.  ISBN \u00a0 9781845113476 .   \u00a0    \n  ^     a         b        Bryne, Malcolm (18 August 2013).  \"CIA Admits It Was Behind Iran's Coup\" .  Foreign Policy .   \u00a0    \n    ^     The CIA's history of the 1953 coup in Iran is made up of the following documents: a historian's note, a summary introduction, a lengthy narrative account written by Dr. Donald N. Wilber, and, as appendicies, five planning documents he attached. Published June 18, 2000 by The New York Times.  http://www.nytimes.com/library/world/mideast/041600iran-cia-index.html   \n  ^     a         b         c         d         e         f         g         h         i         j         k         l         m         n         o         p         q         r         s         t         u         v         w         x         y         z         aa         ab        Kressin, Wolfgang K. (May 1991).  \"Prime Minister Mossadegh and Ayatullah Kashani From Unity to Enmity: As Viewed from the American Embassy in Tehran, June 1950 \u2013 August 1953\" . University of Texas at Austin.   \u00a0    Cite uses deprecated parameters ( help )   \n  ^     a         b         c         d         e         f         g         h         i         j         k         l         m         n         o         p        Milani, Abbas (2008-11-01).   Eminent Persians  .  ISBN \u00a0 9780815609070 .   \u00a0    \n  ^     a         b         c         d         e         f         g         h         i         j         k         l         m         n         o         p         q         r         s         t         u         v         w         x         y         z         aa         ab         ac         ad         ae         af         ag         ah         ai         aj         ak         al         am         an         ao         ap         aq         ar         as        Milani, Abbas (2011-01-04).   The Shah  .  ISBN \u00a0 9780230115620 .   \u00a0    \n    ^      U.S. foreign policy in perspective: clients, enemies and empire . David Sylvan, Stephen Majeski, p. 121.  \n    ^      CIA finally admits it masterminded Iran\u2019s 1953 coup   RT News   \n  ^     a         b        Saeed Kamali Dehghan; Richard Norton-Taylor (19 August 2013).  \"CIA admits role in 1953 Iranian coup\" .  The Guardian  . Retrieved 20 August 2013 .        "}, {"title": "Ajax (missionary)", "rank": -0.35216936695193274, "url": "http://en.wikipedia.org/wiki/Ajax_(missionary)", "links": ["http://en.wikipedia.org/wiki/Arianism", "http://en.wikipedia.org/wiki/Germanic_paganism", "http://en.wikipedia.org/wiki/Suevi", "http://en.wikipedia.org/wiki/Kingdom_of_Galicia", "http://en.wikipedia.org/wiki/Christianity", "http://en.wikipedia.org/wiki/Homer", "http://en.wikipedia.org/wiki/Hydatius", "http://en.wikipedia.org/wiki/Roman_Catholicism", "http://en.wikipedia.org/wiki/Aquae_Flaviae", "http://en.wikipedia.org/wiki/Gaul"], "body": "   Ajax  was an  Arian  missionary to the  pagan   Suevi  of  Galicia  who converted them to  Christianity  in 464   [ 1 ]    or 466.   [ 2 ]      [ 3 ]    \n Due in part to his unusual  Homeric  name his origins have been debated. The contemporary chronicler  Hydatius , the  Catholic  bishop of  Aquae Flaviae , refers to him as  Aiax natione Galata . \"Galata\" may refer to either a Galician,  Gaul , or  Galatian . It is doubtful that he was the first, since Hydatius would have called him  Gallaeci .   [ 4 ]      [ 5 ]    It is sometimes assumed that \"Galata\" is a way to refer to a  Greek  from the East (i.e. Galatia). On the other hand the term may mean that he was  Celtic , either Gaulish or Galatian. This usage of \"Galata\" for a Celt may be expected in Hydatius, who had travelled to the East as a child,   [ 5 ]    for it was a Greek norm.   [ 4 ]    \n Ajax was sent by  Theodoric II , king of the  Visigoths  at  Toulouse , to convert the Suevi to Arianism. The barbarian Arians showed a markedly greater missionary fervour than the Catholics in the fifth century.   [ 6 ]    Theodoric's action may have been a result of the reopening of Suevo-Gothic diplomacy under the Suevic king  Remismund , who married a Gothic princess and became a \"son in arms\" of Theodoric.   [ 2 ]    He may have been sent at Remismund's request.   [ 5 ]    \n According to Hydatius, Ajax was \"the enemy of the Catholic faith and of the Divine Trinity\" ( hostis catholicae fidei et divinae trinitatis ), a statement which later  Isidore of Seville  interpreted to mean that the Suevi were Catholics when Ajax converted them to heresy.   [ 7 ]    Hydatius also calls Ajax  effectus apostata , meaning an apostate from Catholicism. Ajax was also a  senior Arrianus inter Suevos , which may refer either to a bishop or a priest,   [ 7 ]    or may not. It may mean either \"senior Arian\" or \"Arian senior\", and may refer to a layman or a member of the Gothic sacerdotal college; in Catholic usage it could mean  presbyter .   [ 8 ]    \n Ajax's missionary venture was largely successful, especially amongst the nobility.   [ 5 ]      [ 9 ]    He may well not have been the only Arian missionary sent to Galicia by the Visigoths; though he seems to have organised an influential church there.   [ 10 ]    \n  References   [  edit  ]   \n \n \n Arias, Jorge C.  \"Identity and Interactions: The Suevi and the Hispano-Romans.\"  University of Virginia: Spring 2007. \n Ferreiro, Alberto.  \"Braga and Tours: Some Observations on Gregory's  De virtutibus sancti Martini .\"    Journal of Early Christian Studies  . 3 (1995), p. 195\u2013210. \n Mathisen, Ralph W.  \"Barbarian Bishops and the Churches 'in Barbaricis Gentibus' During Late Antiquity.\"    Speculum  , Vol. 72, No. 3. (Jul., 1997), pp. 664\u2013697. \n Thompson, E. A.  \"The End of Roman Spain: Part IV, Conclusion.\"   Nottingham Mediaeval Studies , xxiii (1979), pp. 1\u201321. Reprinted as \"Spain and Britain\" in  Romans and Barbarians: The Decline of the Western Empire  (pp. 208\u2013229). Madison: University of Wisconsin Press, 1982.  ISBN 0-299-08700-X . \n Thompson, E. A. \"Barbarian Collaborators and Christians.\"  Romans and Barbarians: The Decline of the Western Empire  (pp. 230\u2013250). Madison: University of Wisconsin Press, 1982.  ISBN 0-299-08700-X . \n Thompson, E. A. \"The Conversion of the Spanish Suevi to Catholicism.\"  Visigothic Spain: New Approaches . ed.  Edward James . Oxford: Oxford University Press, 1980.  ISBN 0-19-822543-1 . \n Wolfram, Herwig.  History of the Goths . Thomas J. Dunlap, trans. Berkeley: University of California Press, 1988. \n \n \n  Notes   [  edit  ]   \n \n \n    ^     Thompson, \"Spain and Britain\", in  Romans and Barbarians , 215.  \n  ^     a         b       Wolfram, 181.  \n    ^     Mathisen, 683.  \n  ^     a         b       Thompson, \"The Conversion of the Spanish Suevi to Catholicism\", 80\u201381.  \n  ^     a         b         c         d       Arias, 21.  \n    ^     Thompson, \"Barbarian Collaborators and Christians\", 240.  \n  ^     a         b       Thompson, \"Spain and Britain\", in  Romans and Barbarians , 218.  \n    ^     Mathisen, 684.  \n    ^     Ferreiro, 202.  \n    ^     Ferreiro, 207.  \n \n \n  External links   [  edit  ]   \n \n  Hydatius .   Hydatii Episcopi Chronicon .  \n \n \n \n    "}, {"title": "Sidney William Jackson", "rank": -0.35252569533641215, "url": "http://en.wikipedia.org/wiki/Sidney_William_Jackson", "links": ["http://en.wikipedia.org/wiki/Australia", "http://en.wikipedia.org/wiki/Natural_history", "http://en.wikipedia.org/wiki/Ornithology", "http://en.wikipedia.org/wiki/Oology", "http://en.wikipedia.org/wiki/Photography", "http://en.wikipedia.org/wiki/Taxidermy", "http://en.wikipedia.org/wiki/Brisbane", "http://en.wikipedia.org/wiki/Queensland", "http://en.wikipedia.org/wiki/Toowoomba_Grammar_School", "http://en.wikipedia.org/wiki/Grafton,_New_South_Wales"], "body": "   Sidney William Jackson  (12 June 1873 \u2013 30 September 1946) was an  Australian   naturalist  and field  ornithologist  with a special interest in  oology , who was also a skilled  photographer  and  taxidermist . \n  \n \n \n Contents \n \n \n   1   History   \n   2   References  \n \n   2.1   Notes   \n   2.2   Sources   \n \n \n   3   Further reading   \n \n \n  \n  History   [  edit  ]   \n Jackson was born in  Brisbane ,  Queensland , and educated at  Toowoomba Grammar School  and in  Grafton, New South Wales . From his youth he developed an interest in  birds  and in collecting their eggs. Based in Grafton, for many years he worked as a commercial traveller, giving him the opportunity to build up a large collection of birds' eggs.   [ 1 ]      [ 2 ]    Although his field activities were mainly focussed on bird and egg specimens, he also collected land  snails  and  botanical  specimens. He was a skillful tree-climber and developed, with the help of his brother Frank, techniques for climbing trees, using leg-spikes and rope-ladders, as aids to egg-collecting.   [ 3 ]    \n Jackson contributed several papers to the  RAOU   journal    The Emu  . He was a diligent diarist, correspondent, photographer and talented sketcher, whose diaries, as well as much of his correspondence, photographic negatives and drawings, eventually found their way to the  National Library of Australia  in  Canberra .   [ 4 ]    He also authored a book,   Egg Collecting and Bird Life of Australia  , a combined autobiographical work and oological catalogue, illustrated with his own photographs, which was published in 1907.   [ 2 ]    \n In 1906 Jackson had sold his collection of nearly 2000 eggs, representing over 500 species of Australian birds, to  H.L. White , a wealthy  pastoralist  based at  Scone, New South Wales  who was a keen amateur ornithologist and oologist. In 1907 White then employed Jackson as curator of his  collection  of eggs and bird skins, as well as a collector of further specimens. During this period Jackson travelled extensively throughout Australia on quests to obtain specimens and eggs of various birds. Following White\u2019s death in 1927, Jackson moved to  Sydney  where he wrote popular illustrated articles on natural history for newspapers and magazines, mainly the   Sydney Morning Herald   and the  World's News , using the  pen name  \u2018Ajax\u2019.   [ 2 ]      [ 3 ]    \n Ornithological historian  Alec Chisholm , in an article about Jackson\u2019s diaries in  The Emu , described Jackson, whom he knew personally, as follows: \n \n \u201dInevitably, the diaries and correspondence reflect the character of their author. Jackson was an odd mixture. A keen observer and most diligent worker, he was extremely temperamental \u2013 apt to be completely downcast at one moment and thoroughly joyful soon afterwards. In some respects he was entirely humourless, and yet he could be highly entertaining when giving performances of ventriloquism and mimicry, added to which he had a child-like fondness for those trivial gadgets (such as a piece of tin shaped and painted to resemble spilt ink) that alarm or embarrass unwary people. Practical and self-reliant in the bush, he was just the reverse in matters of business, and so he was frequently in trouble, financial and otherwise. The one factor that sustained him during tribulations, and also caused him to exaggerate his own achievements, was a strong strain of egotism. This failing, if occasionally provoking, was quite naive in his case, and so was tolerated by all who knew him well \u2013 H.L. White included \u2013 though they regretted to see it leading him, at times, into childish absurdities. Inevitably, the same weakness is manifest in every diary and almost every letter of the collection now at Canberra, and in some instances the remarks are distinctly quaint. \n\u201cThe fact appears to be that Jackson, through experiencing much solitude in the bush, had become lonely and introspective, and so took to indulging in self-pity and self-congratulation. Like various other bush-wanderers before his time, he \u2018talked\u2019 to his diaries, and, even though we may smile at certain comments, it has to be conceded that such highly personal touches make the entries more \u2018human\u2019 than matter-of-fact narratives.\u201d   [ 5 ]    \n \n  References   [  edit  ]   \n  Notes   [  edit  ]   \n \n \n    ^     Mathews (1927).  \n  ^     a         b         c       Whittell (1954), pp.369-372.  \n  ^     a         b       Robin (2001).  \n    ^     Chisholm (1958), pp.101-102.  \n    ^     Chisholm (1958), pp.102-103.  \n \n \n  Sources   [  edit  ]   \n \n   Chisholm, A.H.  (1958). \"The diaries of S.W. Jackson\".   Emu    58  (2): 101\u2013123.   \u00a0   \n   Mathews, Gregory M.  (1927). \"S.W. Jackson\".   Austral Avian Record    5  (5): 110\u2013111.   \u00a0   \n  Robin, Libby (2001).  The Flight of the Emu . Melbourne: Melbourne University Press. p.\u00a061.  ISBN \u00a0 0-522-84987-3 .   \u00a0   \n   Whittell, Hubert Massey  (1954).   The Literature of Australian Birds  . Perth: Paterson Brokensha.   \u00a0   \n \n  Further reading   [  edit  ]   \n \n White, Judy. (1991).  Sidney William Jackson. Bush Photographer, 1873 to 1946 . Seven Press: Scone, NSW.  ISBN 0-9593966-4-0  \n \n \n \n \n \n \n  Authority control  \n \n \n \n  VIAF :   36133461   \n \n \n \n \n \n \n \n \n \n \n  Persondata  \n \n \n Name \n Jackson, Sidney \n \n \n Alternative names \n  \n \n \n Short description \n Americn naturalist \n \n \n Date of birth \n 12 June 1873 \n \n \n Place of birth \n  \n \n \n Date of death \n 30 September 1946 \n \n \n Place of death \n  \n \n \n \n \n    "}, {"title": "Ajax framework", "rank": -0.35252569533641215, "url": "http://en.wikipedia.org/wiki/Ajax_framework", "links": ["http://en.wikipedia.org/wiki/Ajax_(programming)", "http://en.wikipedia.org/wiki/Web_application", "http://en.wikipedia.org/wiki/Web_application_framework", "http://en.wikipedia.org/wiki/Ajax_(programming)", "http://en.wikipedia.org/wiki/Dynamic_web_page", "http://en.wikipedia.org/wiki/Client_side", "http://en.wikipedia.org/wiki/Server", "http://en.wikipedia.org/wiki/JavaScript", "http://en.wikipedia.org/wiki/Server-side", "http://en.wikipedia.org/wiki/List_of_Ajax_frameworks"], "body": "  \n \n \n     \n \n  This article  does not  cite  any  references or sources  .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and  removed .    (March 2010)    \n \n \n \n \n \n   \n \n  It has been suggested that this article be  merged  into   Ajax (programming)  . ( Discuss )   Proposed since October 2013.    \n \n \n In  web application  development, an  Ajax framework  is a  framework  which leverages  Ajax , a collection of technologies for building  dynamic web pages  on the  client side . While data is read from and sent to the  server  by  JavaScript  requests, frameworks may include  server-side  like or client-side components to process the client's requests. The acronym AJAX stands for  A synchronous  J avaScript  A nd  X ML. \n  See also   [  edit  ]   \n \n  List of Ajax frameworks  \n  List of JavaScript frameworks  \n  Comparison of JavaScript frameworks  \n  JavaScript library ,  JavaScript  \n  List of web application frameworks  \n  Comparison of web application frameworks  \n  Content management framework  \n \n  External links   [  edit  ]   \n \n Listing of  AJAX Libraries  hosted by the  Open Source Applications Foundation  \n \n \n \n    "}, {"title": "Western Digital FD1771", "rank": -0.2815645459521475, "url": "http://en.wikipedia.org/wiki/Ajax_(floppy_disk_controller)", "links": ["http://en.wikipedia.org/wiki/Floppy_disk_controller", "http://en.wikipedia.org/wiki/Western_Digital", "http://en.wikipedia.org/wiki/Single_density", "http://en.wikipedia.org/wiki/Frequency_modulation", "http://en.wikipedia.org/wiki/IBM", "http://en.wikipedia.org/wiki/Dual_in-line_package", "http://en.wikipedia.org/wiki/Double_density", "http://en.wikipedia.org/wiki/Modified_Frequency_Modulation", "http://en.wikipedia.org/wiki/Double_density", "http://en.wikipedia.org/wiki/Modified_Frequency_Modulation"], "body": "  \n    \n \n     \nWestern Digital datasheet for the FD1771 floppy disk controller \n \n \n The  FD1771  is the first in a line of  floppy disk controllers  produced by  Western Digital . It uses  single density  ( FM ) modulation and supports the  IBM  3740 disk format. It is packaged in a 40-pin  DIP .   [ 1 ]      [ 2 ]    \n  Derivatives   [  edit  ]   \n The FD1771 was succeeded by many derivatives that were mostly software-compatible: \n \n The FD1781 was designed for  double density , but required external modulation and demodulation circuitry, so it could support  MFM , M2FM, or other double-density encodings.   [ 3 ]      [ 4 ]    \n The FD1791-FD1797 series added internal support for  double density  ( MFM ) modulation, compatible with the  IBM System/34  disk format. They required an external data separator.   [ 5 ]    \n The WD1761-WD1767 series were versions of the FD179x series rated for a maximum clock frequency of 1  MHz , resulting in a data rate limit of 125  kbit/s  for single density and 250 kbit/s for double density, thus preventing them from being used for 8-in (200\u00a0mm) floppy drives or the later \"high-density\" 5.25-inch (133\u00a0mm) or 90\u00a0mm floppy drives. \n The WD2791-WD2797 series added an internal data separator using an analog  phase-locked loop , with some external passive components required for the  VCO . They took a 1\u00a0MHz or 2\u00a0MHz clock and were intended for 8-inch (203\u00a0mm) and 5.25-inch (133\u00a0mm) drives.   [ 6 ]    \n The WD1770, WD1772, and WD1773 added an internal digital data separator and write precompensator, eliminating the need for external passive components but raising the clock rate requirement to 8\u00a0MHz. They supported double density, despite the apparent regression of the part number, and were packaged in 28-pin DIP packages.   [ 7 ]   \n \n The WD1772PH02-02 was a version of the chip that Atari fitted to the  Atari STE  which supported high density (500 kbit/s) operation. After production at WD could not be sustained, Atari decided to licence the design and modify it to get high density and extra density (1MBit/s) operation. The chip was codenamed \"Ajax\", had the number C302096 and was produced by Toshiba. [   citation needed   ]  \n \n \n \n  Compatible chips   [  edit  ]   \n Many compatible chips were available from other vendors: \n \n FD179x series from SMC Microelectronics \n MB887x series from  Fujitsu  \n VL177x series from  VLSI Technology . \n Soviet \u041a\u04201818\u0412\u041393 was a WD1793 clone \n \n These families were used in many  microcomputers  and  home computers  including the  Radio Shack TRS-80 ,  Acorn Electron ,  BBC Master ,  Atari ST ,  Acorn Archimedes  and the  SAM Coup\u00e9 , as well as the  +D  and  DISCiPLE  disk interfaces for the  Sinclair ZX Spectrum , the  Commodore 1581  for the  Commodore 64  and the  Atari XF551  for the  Atari XL/XE . \n  References   [  edit  ]   \n \n \n    ^      Michalopoulos, Demetrios A (October 1976). \"New Products: Single-chip floppy disk formatter/controller\".  Computer  (IEEE)  9  (10): p.64.  doi : 10.1109/C-M.1976.218414 .   \u00a0  \"The FD1771 is a single-chip floppy disk formatter/controller that interfaces with most available disk drives and virtually all types of computers.\"  \n    ^      \"Recent IC Announcements\".  Computer  (IEEE)  9  (10): p.66. October 1976.  doi : 10.1109/C-M.1976.218417 .   \u00a0   The FD1771 was announced on July 19, 1976 and sold for $60 each in lots of 100.  \n    ^      \"Recent IC Announcements\".  Computer  (IEEE)  10  (12): p.140. December 1977.  doi : 10.1109/C-M.1977.217618 .   \u00a0   The FD1781 was announced on September 21, 1977. Supported Dual density; accommodates MFM, M2FM.  \n    ^      \"Dual Density Floppy Controller Chip\".  Byte   3  (3): p. 216. March 1978.   \u00a0    \n    ^      FD 179X-02 datasheet   \n    ^      WD279X-02 datasheet   \n    ^      WD177X-00 datasheet images   \n \n \n \n \n    "}, {"title": "AFC Ajax", "rank": -0.2815645459521475, "url": "http://en.wikipedia.org/wiki/AFC_Ajax", "links": ["http://en.wikipedia.org/wiki/Amsterdam_ArenA", "http://en.wikipedia.org/wiki/AFC_Ajax_NV", "http://en.wikipedia.org/wiki/Euronext", "http://en.wikipedia.org/wiki/Frank_de_Boer", "http://en.wikipedia.org/wiki/Eredivisie", "http://en.wikipedia.org/wiki/2012%E2%80%9313_Eredivisie", "http://en.wikipedia.org/wiki/Kit_(association_football)", "http://en.wikipedia.org/wiki/Kit_(association_football)", "http://en.wikipedia.org/wiki/2013%E2%80%9314_AFC_Ajax_season", "http://en.wikipedia.org/wiki/Ajax_(mythology)"], "body": "      \n \n Ajax \n \n     \n \n \n Full name \n Amsterdamsche Football Club Ajax \n \n \n Nickname(s) \n  de Godenzonen  (the sons of the Gods),  Ajacieden ,  de Joden  (the Jews),  de Amsterdammers  (the Amsterdammers),  I Lancieri  (The Lancers),  Lucky Ajax  \n \n \n Founded \n 18\u00a0March 1900 ; 113 years ago  \u00a0( 1900-03-18 )  \n \n \n Ground \n  Amsterdam ArenA  \n \n \n  Ground \u00a0Capacity \n 52,342   [ 1 ]    \n \n \n Owner \n  AFC Ajax NV  ( Euronext :\u00a0 AJAX ) \n \n \n Chairman \n Hennie Henrichs \n \n \n Manager \n  Frank de Boer  \n \n \n League \n  Eredivisie  \n \n \n  2012\u201313  \n Eredivisie, 1st \n \n \n Website \n  Club home page  \n \n \n  \n \n \n \n \n \n \n \n \n     \n   \n   \n   \n   \n   \n   \n   \n   \n   \n \n  Home  colours   \n \n \n \n \n \n     \n   \n   \n   \n   \n   \n   \n   \n   \n   \n \n  Away  colours   \n \n \n \n \n \n \n \n     Current season   \n \n \n  Amsterdamsche Football Club Ajax  ( Dutch pronunciation:\u00a0   [\u02c8a\u02d0j\u0251ks]  ), also referred to as  AFC Ajax ,  Ajax Amsterdam  or simply  Ajax  (after the  legendary Greek hero ), is a Dutch professional  football   club  based in  Amsterdam . Historically, Ajax is the most successful club in the  Netherlands , with 32  Eredivisie titles  and 18  KNVB Cups . Along with  PSV Eindhoven  and  Feyenoord , it is one of the country's \" big three \" clubs who have dominated Dutch football, as well as being the only three clubs that have  never been relegated  from the top division. \n Ajax is historically one of the most successful clubs in the world; according to the  IFFHS , Ajax were the seventh most successful European club of the 20th century.   [ 2 ]    The club is one of the five teams that has  earned the right  to keep the  European Cup  and to wear a multiple-winner badge; they won consecutively in 1971\u20131973. In 1972, they completed the  continental treble  by winning the  Eredivisie ,  KNVB Cup , and the  European Cup . Ajax's last international trophies were the  1995 Intercontinental Cup  and the  1995 Champions League , where they defeated  Milan  in the  final ; they lost the  1996 Champions League   final  on  penalties  to  Juventus . \n Ajax is also one of three teams to win the continental treble and the  Intercontinental Cup  in the same season/calendar year;   [ 3 ]    This was achieved in the 1971\u201372 season.   [ 4 ]    Ajax,  Juventus ,  Bayern Munich , and  Chelsea  are the four clubs to have won all three major UEFA club competitions.   [ 5 ]    They have also won the  Intercontinental Cup  twice, the  1991\u201392 UEFA Cup , as well as the  Karl Rappan Cup , a predecessor of the  UEFA Intertoto Cup  in 1962.   [ 6 ]    Ajax plays at the  Amsterdam Arena , which opened in 1996. They previously played at  De Meer Stadion  and the  Amsterdam Olympic Stadium  (for international matches). \n  \n \n \n Contents \n \n \n   1   History   \n   2   Youth program   \n   3   Stadium   \n   4   Attire  \n \n   4.1   Crest   \n   4.2   Colors   \n   4.3   Kits   \n \n \n   5   Financial  \n \n   5.1   AFC Ajax N.V.   \n \n \n   6   Other teams  \n \n   6.1   Reserves team   \n   6.2   Amateur team   \n   6.3   Women's team   \n \n \n   7   Other sports  \n \n   7.1   Baseball team   \n \n \n   8   Affiliated clubs   \n   9   Rivalries  \n \n   9.1   Rivalry with Feyenoord   \n   9.2   Rivalry with PSV   \n   9.3   Rivalries with other clubs   \n \n \n   10   Supporters  \n \n   10.1   Supporters club   \n   10.2   Average attendance   \n \n \n   11   Jewish connection   \n   12   Players  \n \n   12.1   Current squad  \n \n   12.1.1   Retired numbers   \n   12.1.2   Mascot   \n \n \n   12.2   Youth/reserves squad   \n   12.3   Players out on loan   \n \n \n   13   Notable former players   \n   14   Board and staff  \n \n   14.1   Current board   \n   14.2   Current staff   \n   14.3   List of Ajax chairmen   \n   14.4   List of Ajax managers   \n \n \n   15   Honours  \n \n   15.1   Official trophies (recognized by UEFA and FIFA)  \n \n   15.1.1   National   \n   15.1.2   International   \n   15.1.3   Other trophies   \n \n \n \n \n   16   Honorary club members   \n   17   Domestic results   \n   18   Team records   \n   19   Club van 100   \n   20   Lucky Ajax   \n   21   Number 14 shirt   \n   22   Team tournaments  \n \n   22.1   Amsterdam Tournament   \n   22.2   Copa Amsterdam   \n   22.3   Future Cup   \n \n \n   23   See also   \n   24   Bibliography   \n   25   References   \n   26   External links   \n \n \n  \n  History  \n \n \n \n     \n \n  This section  needs additional citations for  verification  .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and removed.    (December 2013)    \n \n \n Main article:  History of AFC Ajax  \n Ajax was founded in Amsterdam on 18 March 1900. With five national championships (1931, 1932, 1934, 1937, 1939), Ajax was the most successful Dutch team of the nineteen thirties. In 1955, professional football was finally permitted in the Netherlands. Ajax achieved their first  Eredivisie  championship in 1957 and again in 1960. \n \n    \n \n     \n Johan Cruijff  played at Ajax between 1959\u201373 and 1981\u201383, winning 3 European Cups; his No. 14 is the only squad number Ajax has ever retired. Cruyff came back to manage the club from 1985\u201388. \n \n \n Ajax won the championship in 1966 and 1967, scoring a record breaking 122 goals including 33 from  Johan Cruijff , and again in 1968, and reached the European Cup final of 1969 against  A.C. Milan . In 1969\u201370 Ajax won the Dutch league championship, winning 27 out of 34 games and scoring 100 goals. \n The 1971 European Cup final saw Ajax beat  Panathinaikos  2\u20130 with goals from  Dick van Dijk  and  Arie Haan . Ajax completed the treble of European Cup, Dutch National Championship and the KNVB Cup in 1972 before adding the  Intercontinental Cup . In 1973, Ajax won a third consecutive European Cup and another Dutch championship. \n The departure of  Johan Cruijff  for  FC Barcelona  in 1973 signalled the end of this period of success. In 1977, Ajax won their first domestic championship since 1973. Johan Cruijff returned to the club in 1981, with the club producing some talented youngsters in the mid-1980s such as  Marco van Basten  and  Frank Rijkaard . \n Cruijff returned in 1985 as the new manager and Ajax ended the season with 120 goals, of which 37 were from  van Basten . Ajax won the  '87 Cup Winners' Cup  and reached the final again the following season. Cruijff departed prior to the second  Cup Winners' Cup  final and with most of the 80's stars such as van Basten also leaving, Ajax once again declined. \n Managed by  Louis van Gaal , Ajax won the 1992  UEFA Cup .  Dennis Bergkamp  scored six goals in the competition and was the top goalscorer in Dutch football in 1991 and 1992. \n Ajax won the  1994\u201395 UEFA Champions League  and the league title. The season saw an unbeaten run in the national league and the final season for Frank Rijkaard, while striker  Patrick Kluivert  came off the bench to score a late winner to beat  A.C. Milan  in the final of the Champions League. Ajax went on to beat Brazilian side  Gr\u00eamio  on penalties to win the  Intercontinental Cup . The following season, Ajax lost to  Juventus  on penalties in the European Cup final. \n However, the subsequent period saw the departure of manager van Gaal along with an exodus of many key players including  Clarence Seedorf  in 1995;  Edgar Davids ,  Michael Reiziger ,  Finidi George , and  Nwankwo Kanu  in 1996;  Patrick Kluivert ,  Marc Overmars , and  Winston Bogarde  in 1997;  Ronald de Boer  and  Frank de Boer  in 1998; and  Edwin van der Sar  and  Jari Litmanen  in 1999. \n  Youth program  \n Main articles:  Ajax Youth Academy  and  Ajax Hellas Youth Academy  \n The club is also particularly famous for its renowned youth program that has produced many Dutch talents over the years \u2013  Johan Cruijff ,  Edwin van der Sar ,  Dennis Bergkamp , national team top scorer  Patrick Kluivert , and former national team coach  Marco van Basten . Dutch national first-team players  Rafael van der Vaart ,  Ryan Babel ,  Wesley Sneijder ,  Maarten Stekelenburg ,  Eljero Elia ,  Andr\u00e9 Ooijer ,  John Heitinga  and  Nigel de Jong  had also came through the ranks at Ajax and all are now playing for top-flight clubs. Ajax also regularly supplies the Dutch national youth teams with local talent.   [ 7 ]    First team regulars  Siem de Jong ,  Urby Emanuelson  and  Gregory van der Wiel  are former youth internationals who made the successful step up to the senior side.   [ 8 ]      [ 9 ]      [ 10 ]    \n Due to mutual agreements with foreign clubs, the youth academy has also signed foreign players as teenagers before making first team debuts, such as Belgian defensive trio  Jan Vertonghen ,  Toby Alderweireld  and  Thomas Vermaelen  along with winger  Tom de Mul , all of whom are full internationals as well as Dutch international  Vurnon Anita  as well as  Javier Martina  from  Cura\u00e7ao . \n Ajax has also expanded its talent searching program to South Africa with  Ajax Cape Town . Ajax Cape Town was set up with the help of  Rob Moore . Ajax has also had a satellite club in the United States under the name  Ajax America , until it filed for bankruptcy. There are some youth players from Ajax Cape Town that have been drafted into the Eredivisie squad, such as South African internationals  Steven Pienaar ,  Thulani Serero  and Cameroonian international  Eyong Enoh . \n In 1995, the year Ajax won the  Champions League , the  Dutch national team  was almost entirely composed of Ajax players, with  Edwin van der Sar  in goal; players such as  Michael Reiziger ,  Frank de Boer , and  Danny Blind  in defense;  Ronald de Boer ,  Edgar Davids , and  Clarence Seedorf  in midfield; and  Patrick Kluivert  and  Marc Overmars  in attack.   [ 11 ]    \n \n    \n \n     \nExterior of Stadium \n \n \n In 2011 AFC Ajax opened its first youth academies outside of the Netherlands, when the club partnered up with George Kazianis and All Star Consultancy in Greece to open the  Ajax Hellas Youth Academy . The offices are based in  Nea Smyrni ,  Attica , with the main training facility located on the island of  Corfu , hosting a total of 15 football youth academies throughout Greece and  Cyprus . Eddie van Schaik heads the organization as coach and consultant, introducing the Ajax football philosophy at the various Greek football training camps.   [ 12 ]      [ 13 ]    \n  Stadium  \n \n \n \n     \n \n  This section  needs additional citations for  verification  .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and removed.    (December 2013)    \n \n \n Main articles:  Het Houten Stadion ,  De Meer Stadion ,  Olympic Stadium (Amsterdam) , and  Amsterdam ArenA  \n Ajax' first stadium was built in 1911 out of wood and was called \" Het Houten Stadion \" ( The Wooden Stadium ). Ajax later played in the stadium built for the  1928 Amsterdam Olympics . This stadium, designed by  Jan Wils , is known as the  Olympic Stadium . In 1934, Ajax moved to  De Meer Stadion  in east Amsterdam, designed by architect and Ajax-member Daan Roodenburgh. The stadium could accommodate 29,500 spectators and Ajax continued to play there until 1996. For big European and national fixtures the club would often play at the Olympic Stadium, which could accommodate about twice the number of spectators. \n In 1996, Ajax moved to a new home ground in the southeast of the city known as the  Amsterdam ArenA  This was built by the Amsterdam city authority at a cost of $134 million. The stadium is capable of holding approximately 52,000 people. The average attendance in 2006/07 was 48,610, rising in the next season to 49,128. The ArenA has a retractable roof and set a trend for other modern stadiums built in Europe in the following years. In the Netherlands, the ArenA has earned a reputation for a terrible grass pitch caused by the removable roof that, even when open, takes away too much sunlight and fresh air. During the 2008\u20132009 season groundstaff introduced an artificial lighting system that has finally reduced this problem considerably. \n The much-loved De Meer stadium was torn down and the land was sold to the city council. A residential neighbourhood now occupies the area. The only thing left of the old stadium are the letters AJAX, nowadays in place on the fa\u00e7ade of the youth training grounds  De Toekomst , near the Amsterdam Arena. \n  Attire  \n  Crest  \n In 1900, when the club was founded, the emblem of Ajax was just a picture of an Ajax player. The crest was slightly altered following the clubs promotion to the top division in 1911 to match the clubs new outfits. In 1928, the club logo was introduced with the head of the  Greek  hero  Ajax . The logo was once again changed in 1990 into an abstract version of the previous one. The new logo still sports the portrait of Ajax, but drawn with just 11 lines, symbolizing the 11 players of a football team.   [ 14 ]    \n \n \n \n \n \n    \n \n     \n The first Ajax crest \n(1900\u20131911) \n \n \n \n \n  \n \n \n    \n \n     \n The second crest \n(1911\u20131928) \n \n \n \n \n  \n \n \n    \n \n     \n The third crest \n(1928\u20131990) \n \n \n \n \n  \n \n \n    \n \n     \n The current crest \n(1990\u2013present) \n \n \n \n \n \n \n \n  Colors  \n Ajax originally played in an all-black uniform with a red sash tied around the players' waists, but that uniform was soon replaced by a red/white striped shirt and black shorts. Red, black and white are the three colours of the flag of  Amsterdam . However, when, under manager  Jack Kirwan , the club got promoted to the top flight of Dutch football for the first time in 1911 (then the  Eerste Klasse  or 'First Class', later named the  Eredivisie ), Ajax were forced to change their colours because  Sparta Rotterdam  already had exactly the same outfit. Special kits for away fixtures did not exist at the time and according to football association regulations the newcomers had to change their colours if two teams in the same league had identical uniforms. Ajax opted for white shorts and white shirt with a broad, vertical red stripe over chest and back, which still is Ajax's outfit. \n  Kits  \n \n    \n \n     \n2011 AFC Ajax team wearing their home kit by adidas with the AEGON sponsor across the chest, ahead of their UEFA Champions League match against Olympique Lyonnais. \n \n \n Ajax's shirts have been  sponsored  by  TDK  from 1982 to 1991, and by  ABN AMRO  from 1991 to 2008.  AEGON  has replaced ABN AMRO as the new head sponsor for a period of at least seven years.   [ 15 ]    On 1 April 2007, Ajax wore a different sponsor for the match against  Heracles Almelo :  Florius . Florius is a banking program just launched by  ABN AMRO  who wanted it to be the shirt sponsor for one match. The shirts have been manufactured by  Le Coq Sportif  (1973\u20131977),  Puma  (1977\u20131980),   [ 16 ]     Le Coq Sportif  (1980\u20131984),   [ 17 ]     Kappa  (1985-1989)   [ 18 ]    and  Umbro  (1989\u20132000) in the past, and by  Adidas  since 2000 (until at least 2019).   [ 19 ]      [ 20 ]    \n \n \n Period \n Clothing sponsor \n Shirt sponsor \n \n \n 1973\u20131977 \n  Le Coq Sportif  \n  none  \n \n \n 1977\u20131980 \n  Puma  \n \n \n 1980\u20131982 \n  Le Coq Sportif  \n \n \n 1982\u20131984 \n  TDK  \n \n \n 1985\u20131989 \n  Kappa  \n \n \n 1989\u20131991 \n  Umbro  \n \n \n 1991\u20132000 \n  ABN AMRO  \n \n \n 2000\u20132008 \n  adidas  \n \n \n 2008\u20132014 \n  AEGON  \n \n \n 2014\u20132019 \n   n/a   \n \n \n  Financial  \n  AFC Ajax N.V.  \n Main article:  AFC Ajax N.V.  \n AFC Ajax are the only Dutch club with an  Initial public offering  (IPO). The club is registered as a  Naamloze vennootschap  (N.V.) listed on the stock exchange  Euronext  Amsterdam, since 17 May 1998. With a launch price of \u019225,- (Guilders) the club managed to a bring their total revenue up to \u20ac 54 million euros (converted) in their first year on the market.   [ 21 ]    After short lived success however the rate dropped, at one point as low as \u20ac 3,50. Criticism was brought forth that the legal grid for a naamloze vennootschap would not be suitable for a Football club, and that the sports related ambitions would suffer from the new commercial interests of the now listed Ajax. Shares of the company in the year 2008 were valued at approximately \u20ac 5,90 per share.   [ 22 ]    \n In 2008 a Commission under guidance of honorary member Uri Coronel concluded, that the  IPO  was of no value to the club, and that measures should be taken to exit the stock exchange by purchasing back all public shares.   [ 23 ]    How possible it would be for Ajax to achieve, and the likelihood of this ever happening has been in doubt by the public as Ajax remain on the stock exchange, where its chief competitors are  Manchester United ,  Real Madrid  and  Juventus .   [ 24 ]    \n  Other teams  \n  Reserves team  \n Main article:  Jong Ajax  \n  Jong Ajax  ( formerly more commonly known as Ajax 2 ) is the reserve team of AFC Ajax. The team is composed mostly of professional footballers, who are often recent graduates from the highest youth level (Ajax A1) serving their first professional contract as a reserve, or players who are otherwise unable to play in the first team.   [ 25 ]    \n Since 1992 Jong Ajax have competed in the  Beloften Eredivisie , competing against other reserve teams such as  Jong PSV ,  Jong FC Groningen  or  Jong AZ . They have won the Beloften Eredivisie title a record eight times, as well as the  KNVB Reserve Cup  three times, making them the most successful reserve squad in the Netherlands. By winning the  Beloften Eredivisie  title, Jong Ajax were able to qualify for the actual  KNVB Cup , even advancing to the semi-finals on three occasions. Their best result in the Dutch Cup was under manager  Jan Olde Riekerink  in 2001-02, when a semi-final loss to  FC Utrecht  in a  Penalty shoot-out  after extra time, which saw Utrecht advance, and thus preventing an Ajax vs. Jong Ajax Dutch Cup final.   [ 26 ]    \n The 2013\u201314 season marked the  Jupiler League  debut of the AFC Ajax reserves' squad  Jong Ajax .   [ 27 ]    Previously playing in the  Beloften Eredivisie  (a separate league for reserve teams, not included in the Dutch professional or amateur league structure) players were allowed to move around freely between the reserve team and the first first team during the course of the season.   [ 28 ]    This is no longer the case as Jong Ajax now registers and fields a separate squad from that of Ajax first team for the  Eerste Divisie , the second tier of professional football in the Netherlands. Their home matches are played at  Sportpark De Toekomst , except for the occasional match in the  Amsterdam Arena . Now regarded a semi-professional team in their own respect, the only period in which players are able to move between squads are during the transfer windows, unless the player has made less than 15 appearances for the first team, then he is still eligible to appear in both first team and second team matches during the course of the season.   [ 29 ]    Furthermore the team is not eligible for promotion to the  Eredivisie  or to participate in the  KNVB Cup . Jong Ajax were joined in the Eerste Divisie by  Jong Twente  and  Jong PSV , reserve teams who have also moved from the Beloften Eredivisie to the Eerste Divisie, in place of  VV Katwijk ,  SC Veendam  and  AGOVV Apeldoorn , increasing the total amount of teams in the Jupiler League from 18 to 20.   [ 30 ]    \n Ajax reserve squad Jong Ajax left the  Beloften Eredivisie  in 2013, having held a 21-year tenure in the reserves league, having also won the league title a record eight times. (1994, 1996, 1998, 2001, 2002, 2004, 2005, 2009)   [ 31 ]    \n  Amateur team  \n Main article:  AFC Ajax (amateurs)  \n  AFC Ajax Amateurs , better known as Ajax Zaterdag is a  Dutch  amateur football club founded 18 March 1900. It is the amateur team of the professional club AFC Ajax, who play their home matches at the  Sportpark De Toekomst  training grounds to a capacity of 5,000. The team was promoted from the  Eerste Klasse  to the  Hoofdklasse  ahead of the 2011\u201312 season, the league in which they are currently competing. The team has won the  Eerste Klasse  title twice, as well as the * KNVB District Cup West I  on two occasions as well.   [ 32 ]    \n Furthermore, Ajax Zaterdag have also managed to qualify for the  KNVB Cup  on their own accord on three occasions, namely in 2004, 2005 and in 2008, even advancing to the second round before bowing out to  Vitesse  on 24 September 2008 during their last appearance in the cup tournament.   [ 33 ]    \n  Women's team  \n Main article:  AFC Ajax (women)  \n  AFC Ajax Vrouwen  ( English: AFC Ajax Women ) are the women's team of AFC Ajax, competing in the  BeNe League , the highest level of professional football in  Belgium  and the  Netherlands . Founded on 18 May 2012, the women's team saw Ajax attracting many of the Netherlands top talents, with International players such as  Anouk Hoogendijk ,  Daphne Koster  and  Petra Hogewoning  joining the Amstedam club on its maiden season in women's professional football.   [ 34 ]    \n  Other sports  \n  Baseball team  \n Main article:  Ajax HVA  \n  Ajax HVA  (1922\u20131972) was the  baseball  team of AFC Ajax founded in 1922, and competing as founding members of the  Honkbal Hoofdklasse , the top flight of professional baseball in the Netherlands.   [ 35 ]    Ajax won the national baseball title a total of four times (1924, 1928, 1942, 1948) before the club opted to no longer field a baseball team, and to focus solely on football in 1972.   [ 36 ]    Ajax spent a total of 50 years at the top flight of Baseball in the Netherlands from 1922 to 1972. The dissolution of Ajax baseball club resulted in the players finding a new sponsor in a  mustard  manufacturing company called Luycks, while merging with the Diemen Giants to become the Luycks Giants, thus replacing both former clubs.   [ 37 ]    \n  Affiliated clubs  \n Main article:  List of AFC Ajax affiliated clubs  \n The following clubs are currently affiliated with AFC Ajax: \n \n        Ajax Cape Town  (1999\u2013present)   [ 38 ]    \n        Almere City  (2005\u2013present)   [ 39 ]    \n        Barcelona  (2007\u2013present)   [ 40 ]      [ 41 ]    \n        Cruzeiro  (2007\u2013present)   [ 42 ]    \n        Beijing Guoan  (2007\u2013present)   [ 43 ]    \n        Palmeiras  (2010\u2013present)   [ 44 ]    \n        AS Tren\u010d\u00edn  (2012\u2013present)   [ 45 ]    \n        Various HETT-clubs (See  main article )    [ 46 ]    \n \n The following clubs were affiliated with AFC Ajax in the past: \n \n        Germinal Beerschot  (1999\u20132003)   [ 47 ]    \n        Ashanti Goldfields  (1999\u20132003)   [ 48 ]    \n        Ajax Orlando Prospects  (2003\u20132007)   [ 49 ]    \n        HFC Haarlem  (2006\u20132010)   [ 50 ]    \n        FC Volendam  (2007\u20132010)   [ 51 ]    \n \n  Rivalries  \n  As one of the traditional  big three clubs  in the  Netherlands , Ajax have amassed a number of intense rivalries over the years. Listed below are the most significant of the rivalries involving Ajax Amsterdam.  \n  Rivalry with Feyenoord  \n Main article:  De Klassieker  \n  Feyenoord  from  Rotterdam  are Ajax's arch rivals. Every year both clubs play the \" De Klassieker \" (\"The Classic\"), a match between the teams from the two largest cities of the Netherlands.   [ 52 ]    During the seventies, Ajax and Feyenoord were the only two clubs in the Netherlands who were able to clinch national titles, as well as achieve continental and even global success.   [ 53 ]    A meeting between the two clubs became the measure for who was truly the best club in the Netherlands. The Klassieker is the most famous of all the rivalries in the Netherlands and the matches are always sold out.   [ 54 ]    The fixture is seen in the public eye as \" The graceful and elegant football of Ajax, against the indomitable fighting spirit of Feyenoord \". The confidence of the Capital versus the Blue collar mentality of  Rotterdam .   [ 55 ]    Matches are known for their tension and violence, both on and off the pitch. Over the years several violent incidents have taken place involving rival supporters, leading to the current prohibition of away-supporters in both stadiums.   [ 56 ]    The lowest point was reached on 23 March 1997, when supporters of both clubs meet on a field near  Beverwijk , where Ajax-supporter Carlo Picornie was fatally injured, the incident is commonly referred to as the \"Battle of Beverwijk\".   [ 57 ]    \n  Rivalry with PSV  \n  PSV  are also a rival of Ajax, but in terms of tension and rivalry, these matches are not as loaded as the duels with Feyenoord. The rivalry has existed for some time with PSV and stems from various causes, such as the different interpretations of whether current national and international successes of both clubs correlates and the supposed opposition between the  Randstad  and the province. The matches between these two teams is commonly referred to as \"De Topper\" (\"The Topper\"), and involves the two most trophy-laden sides in Dutch football and is essentially a clash of two competing schools of thought in Dutch football. Historically PSV compete with a workmanlike ethic, preferring a more robust 4-3-1-2 or 4-2-3-1, typically shunning the seductive 4-3-3 approach favoured in Amsterdam. While  Rinus Michels  and  Johan Cruijff  helped to innovate  Total Football  in the sixties and seventies, a different philosophy was honed in  Eindhoven  by  Kees Rijvers  and  Guus Hiddink  in the late seventies and eighties.   [ 58 ]    This in turn has created one of the more philosophical rivalries in football, an ideological battleground, which is gradually becoming as heated and intense as the matches Ajax and Feyenoord partake in.   [ 59 ]    \n  Rivalries with other clubs  \n Aside from Feyenoord and PSV, Ajax have several other rivalries, although in most cases the sentiment is mostly felt by the opposition and is more directed towards Ajax, with one of them being  FC Utrecht .   [ 60 ]    Although the rivalry is more felt on the  Utrecht  side then with Ajax, matchups between the two sides are often quite intense.   [ 61 ]    Both teams have fanatic supporters, and clashes off the pitch are more often the rule than the exception. The same goes for  ADO Den Haag , with both supporter-groups often getting in conflicts, when ADO-Hooligans set fire to the Supporters home of Ajax, and Ajax-Hooligans subsequently broke into the Supporters home of ADO tensions between the two clubs rose. In 2006 Supporters from both clubs were banned from attending away matches for five years, due to frequent violent outbreaks and clashes.   [ 62 ]    \n Further teams who share a rivalry with Ajax include  FC Twente ,  FC Groningen  and  AZ . Although the latter are often regarded by Ajax-supporters as the clubs little brother.   [ 63 ]    Being from nearby  Alkmaar , and with both clubs sharing the same  Province , match-ups between the two sides are commonly known as the \"De Noord-Hollandse Derby\" (\"North Holland Derby\") and are often very competitive, intense and loaded fixtures.   [ 64 ]    \n Past rivalries include local Amsterdam derbies between Ajax and clubs such as  Blauw-Wit ,  DWS  and  De Volewijckers  (who later merged to become  FC Amsterdam  in 1972).   [ 65 ]    The tension between the local sides lessened however, as the division of the clubs through playing in different leagues over time became greater. Years of not competing in the same league resulted in less frequent match-ups, until tensions finally settled between the Amsterdam clubs.   [ 66 ]    The last Amsterdam derby to take place in an official league match was when Ajax defeated FC Amsterdam 5-1, on March 19, 1978.   [ 67 ]    \n  Supporters  \n \n    \n \n     \nSupporters \n \n \n Main articles:  F-side  and  VAK410  \n Ajax are known for having fanatic core supporter-groups, of which  F-Side  and  VAK410  are the most famous. F-Side were founded on 3 October 1976, and are situated right behind the goal In the  Amsterdam ArenA , on the southern end of the stadium in rows 125\u2013129. Their name is derived from the groups former location on the F-side of the old  De Meer Stadion .   [ 68 ]    The F-side supporters are responsible for a big part of the atmosphere in the stadium, but are also known for rioting during and after matches. If in any match Ajax should win the coin toss, the second half of the match Ajax always play towards the south-end of the stadium.   [ 69 ]    VAK410 (English: Row 410) were founded in 2001 and are situated in the Zuidhoek ( South corner ) of the stadium on the upper ring in rows 424\u2013425. The group was originally situated on the North-West side of the stadium in row 410, from where it derives its name, until relocating to their current place in the stands in 2008.   [ 70 ]    Members of VAK410 are known to perform various stunts, which include massive banners, to enhance the atmosphere in the stadium. Neither F-Side or VAK410 have seats in their sections of the stadium, and both groups stand for the duration of the match.   [ 71 ]    \n Through the official  Football Top 20  of Dutch sports research group  SPORT+MARKT  it was revealed in 2010 that Ajax had approximately 7,1 million supporters throughout Europe.   [ 72 ]    Slightly more than rivals  Feyenoord  and  PSV  (each 1,6 and 1,3 million, respectively), which put Ajax in 15th place for most supporters in all of Europe. The study also revealed that approximately 39% of the  Netherlands  were Ajax supporters.   [ 73 ]    Not only does Ajax have a lot of supporters, but several fans attend their matches in European competition, with an average attendance of 48.677 spectators for every International match Ajax played, putting the team at 12th place in Europe for highest attendance, ahead of big name clubs such as  Milan ,  Manchester City  or  Chelsea . It is note worthy that not all stadiums share the capacity of the Amsterdam Arena.   [ 74 ]    \n  Supporters club  \n \n    \n \n     \nAjax supporters celebrating the clubs 30th Dutch national championship \n \n \n The Supporters Club Ajax ( Dutch :   Supportersvereniging Ajax  ) is officially the largest Supporters club in Europe with 85,000 members.   [ 75 ]    Founded on 7 May 1992, the supporters club organize big monthly events throughout the Netherlands, and particularly around the official Ajax Open Training Day, which attracts thousands of supporters each year.   [ 76 ]    Furthermore the Supporters group is responsible for the  Ajaxlife  website, as well as the  fanzine  which is issued 20 times a year.   [ 77 ]    \n  Average attendance  \n This graph displays the average attendance for home matches of Ajax from 1988\u20132012, whereby the difference in capacity of the  De Meer Stadion  and the  Amsterdam ArenA  (est. 1996) is clearly visible. \n \n \n \n \n \n 10467 \n \n \n \n \n \n \n 11823 \n \n \n \n \n \n \n 17000 \n \n \n \n \n \n \n 22479 \n \n \n \n \n \n \n 18994 \n \n \n \n \n \n \n 21429 \n \n \n \n \n \n \n 22724 \n \n \n \n \n \n \n 23584 \n \n \n \n \n \n \n 21992 \n \n \n \n \n \n \n 48069 \n \n \n \n \n \n \n 48423 \n \n \n \n \n \n \n 41275 \n \n \n \n \n \n \n 40873 \n \n \n \n \n \n \n 36339 \n \n \n \n \n \n \n 35809 \n \n \n \n \n \n \n 47571 \n \n \n \n \n \n \n 48996 \n \n \n \n \n \n \n 49595 \n \n \n \n \n \n \n 47737 \n \n \n \n \n \n \n 48561 \n \n \n \n \n \n \n 49125 \n \n \n \n \n \n \n 49014 \n \n \n \n \n \n \n 48677 \n \n \n \n \n \n \n 47316 \n \n \n \n \n \n \n 50146 \n \n \n \n \n \n \n 50490 \n \n \n \n  \n \n \n 88/89 \n 89/90 \n 90/91 \n 91/92 \n 92/93 \n 93/94 \n 94/95 \n 95/96 \n 96/97 \n 97/98 \n 98/99 \n 99/00 \n 00/01 \n 01/02 \n 02/03 \n 03/04 \n 04/05 \n 05/06 \n 06/07 \n 07/08 \n 08/09 \n 09/10 \n 10/11 \n 11/12 \n 11/12 \n 12/13 \n  \n \n \n  \n  Jewish connection  \n Historically, Ajax was popularly seen as having \"Jewish roots\", although not an official Jewish club like the city's  WV-HEDW  Ajax has had a Jewish image since the 1930s when the home stadium was located next to a Jewish neighbourhood of  Amsterdam-Oost  and opponents saw many supporters walking through the Nieuwmarkt/Waterloopleinbuurt (de Jodenhoek) to get to the stadium.   [ 78 ]    The city of Amsterdam was historically referred to as a  Mokum  city, Mokum (\u05de\u05e7\u05d5\u05dd) being the  Yiddish  word for \"place\" or \"safe haven\",   [ 79 ]    and as  anti-Semitic  chants and name calling developed and intensified at the old  De Meer Stadion  from frustrated supporters of opposing clubs, Ajax fans (few of whom are actually Jewish   [ 80 ]   ) responded by embracing Ajax's \"Jewish\" identity: calling themselves \"super Jews\", chanting \"Jews, Jews\" (\"Joden, Joden\") at games, and adopting Jewish symbols such as the  Star of David  and the  Israeli flag .   [ 80 ]      [ 81 ]    \n This Jewish imagery eventually became a central part of Ajax fans' culture.   [ 81 ]    At one point ringtones of \" Hava Nagila \", a  Hebrew   folk song , could be downloaded from the club's official website.   [ 80 ]    Beginning in the 1980s, fans of Ajax's rivals escalated their  antisemitic  rhetoric, chanting slogans like \" Hamas , Hamas/Jews to the  gas \" (\"Hamas, hamas, joden aan het gas\"), hissing to imitate the flow of gas, giving  Nazi salutes , etc.   [ 80 ]      [ 82 ]    The eventual result was that many (genuinely) Jewish Ajax fans stopped going to games.   [ 80 ]    \n In the 2000s the club began trying to persuade fans to drop their Jewish image.   [ 83 ]    In 2013 a documentary titled   Superjews   was released by  NTR  and Viewpoint Productions which premiered at the  International Documentary Film Festival Amsterdam  (IDFA). The film was directed by Nirit Peled, an  Israeli  living in Amsterdam, and an independent film maker who offers a very personal view into the game, the lore of Ajax and its relation to  Judaism  from both the supporters as well as from a Jewish perspective.   [ 84 ]    \n  Players  \n  Current squad  \n \n    \n \n     \nAjax squad in 2011. \n \n \n \n  As of 3 January 2013.    [ 85 ]    \n \n  Note: Flags indicate national team as has been defined under  FIFA eligibility rules . Players may hold more than one non-FIFA nationality.  \n \n \n \n \n \n No. \n  \n Position \n Player \n \n \n 1 \n       \n  GK  \n   Kenneth Vermeer   \n \n \n 2 \n       \n  DF  \n   Ricardo van Rhijn   \n \n \n 4 \n       \n  DF  \n   Niklas Moisander   \n \n \n 5 \n       \n  MF  \n   Christian Poulsen   \n \n \n 6 \n       \n  DF  \n   Mike van der Hoorn   \n \n \n 7 \n       \n  FW  \n   Viktor Fischer   \n \n \n 8 \n       \n  MF  \n   Lerin Duarte   \n \n \n 9 \n       \n  FW  \n   Kolbeinn Sig\u00fe\u00f3rsson   \n \n \n 10 \n       \n  MF  \n   Siem de Jong    ( captain )  \n \n \n 11 \n       \n  FW  \n   Bojan Krki\u0107    (on loan from  Barcelona )  \n \n \n 12 \n       \n  DF  \n   Jo\u00ebl Veltman   \n \n \n 15 \n       \n  DF  \n   Nicolai Boilesen   \n \n \n \n  \n \n \n \n No. \n  \n Position \n Player \n \n \n 16 \n       \n  FW  \n   Lucas Andersen   \n \n \n 17 \n       \n  DF  \n   Daley Blind   \n \n \n 18 \n       \n  MF  \n   Davy Klaassen   \n \n \n 19 \n       \n  FW  \n   Tobias Sana   \n \n \n 20 \n       \n  MF  \n   Lasse Sch\u00f6ne   \n \n \n 22 \n       \n  GK  \n   Jasper Cillessen   \n \n \n 23 \n       \n  FW  \n   Danny Hoesen   \n \n \n 24 \n       \n  DF  \n   Stefano Denswil   \n \n \n 25 \n       \n  MF  \n   Thulani Serero   \n \n \n 27 \n       \n  DF  \n   Ruben Ligeon   \n \n \n 30 \n       \n  GK  \n   Mickey van der Hart   \n \n \n \n \n \n  Retired numbers  \n \n  14  \u2013        Johan Cruyff  ( Forward , 1964\u201373, 1981\u201383).  Number retired on 25 April 2007 at Cruyff's 60th birthday celebration match.    [ 86 ]      [See below]   \n \n  Mascot  \n \n  Lucky Lynx , is the official team mascot.   [ 87 ]    (2000\u2013present) \n \n  Youth/reserves squad  \n Main article:  Jong Ajax  \n  Note: Flags indicate national team as has been defined under  FIFA eligibility rules . Players may hold more than one non-FIFA nationality.  \n \n \n \n \n \n No. \n  \n Position \n Player \n \n \n  \n       \n  GK  \n  Norbert Alblas  \n \n \n  \n       \n  GK  \n   Peter Leeuwenburgh   \n \n \n 71 \n       \n  GK  \n   Maurits Schmitz   \n \n \n 36 \n       \n  DF  \n   Riechedly Bazoer   \n \n \n 58 \n       \n  DF  \n   Bas Kuipers   \n \n \n  \n       \n  DF  \n   Stefan Marinkovi\u0107   \n \n \n 59 \n       \n  DF  \n   Derwin Martina   \n \n \n 42 \n       \n  DF  \n   Ja\u00efro Riedewald   \n \n \n 32 \n       \n  DF  \n   Kenny Tete   \n \n \n  \n       \n  MF  \n  Emran Barakzai  \n \n \n  \n       \n  MF  \n   Abdel Malek El Hasnaoui   \n \n \n  \n       \n  MF  \n  Sinan Keskin  \n \n \n \n  \n \n \n \n No. \n  \n Position \n Player \n \n \n 37 \n       \n  MF  \n   Stanislav Lobotka    (on loan from  AS Tren\u010d\u00edn )  \n \n \n 40 \n       \n  MF  \n   Fabian Sporkslede   \n \n \n 66 \n       \n  MF  \n   Wang Chengkuai   \n \n \n 69 \n       \n  FW  \n   Jordi Bitter   \n \n \n 29 \n       \n  FW  \n   Nick de Bondt   \n \n \n 51 \n       \n  FW  \n   Sam Hendriks   \n \n \n 35 \n       \n  FW  \n   Marvin H\u00f6ner   \n \n \n 43 \n       \n  FW  \n  Ricardo Kishna  \n \n \n 57 \n       \n  FW  \n   Boban Lazi\u0107   \n \n \n 38 \n       \n  FW  \n   Dejan Meleg   \n \n \n 34 \n       \n  FW  \n   Lesley de Sa   \n \n \n  \n       \n  FW  \n   Vincent Vermeij   \n \n \n \n \n \n For more details on this topic, see  Jong Ajax . \n  Players out on loan  \n  Note: Flags indicate national team as has been defined under  FIFA eligibility rules . Players may hold more than one non-FIFA nationality.  \n \n \n \n \n \n No. \n  \n Position \n Player \n \n \n  \n       \n  DF  \n   Mitchell Dijks    (to  SC Heerenveen  until July 2014)  \n \n \n  \n       \n  DF  \n   Danzell Gravenberch    (to  NEC  until July 2014)  \n \n \n  \n       \n  DF  \n   Sven Nieuwpoort    (to  Almere City  until July 2014)  \n \n \n  \n       \n  MF  \n   Ilan Boccara    (to  Evian Thonon Gaillard  until July 2014)  \n \n \n  \n       \n  MF  \n   Eyong Enoh    (to  Antalyaspor  until July 2014)  \n \n \n \n  \n \n \n \n No. \n  \n Position \n Player \n \n \n  \n       \n  MF  \n   Joeri de Kamps    (to  SC Heerenveen  until July 2014)  \n \n \n  \n       \n  FW  \n   Geoffrey Castillion    (to  NEC  until July 2014)  \n \n \n  \n       \n  FW  \n   Gino van Kessel    (to  AS Tren\u010d\u00edn  until July 2014)  \n \n \n  \n       \n  FW  \n   Jody Lukoki    (to  SC Cambuur  until July 2014)  \n \n \n \n \n \n  Notable former players  \n Main article:  List of AFC Ajax players  \n The players below are part of the  AFC Ajax Hall of Fame .   [ 88 ]    \n \n \n \n  1910\u20131920  \n \n        Jan van Dort  ( MF ) \n        Theo Brokmann  ( FW ) \n \n  1920\u20131930  \n \n        Jan de Natris  ( MF ) \n        Wim Anderiesen  ( MF ) \n        Wim Volkers  ( FW ) \n \n  1930\u20131940  \n \n        Gerrit Fischer  ( FW ) \n        Piet van Reenen  ( FW ) \n \n  1940\u20131950  \n \n        G\u00e9 van Dijk  ( FW ) \n        Guus Dr\u00e4ger  ( MF ) \n        Theo Brokmann, Jr.  ( FW ) \n \n  1950\u20131960  \n \n        Rinus Michels  ( FW ) \n \n  1960\u20131970  \n \n        Bennie Muller  ( MF ) \n        Cees Groot  ( FW ) \n        Henk Groot  ( FW ) \n        Johan Cruijff  ( MF ) \n \n \n \n  1960\u20131970 (continued)  \n \n        Klaas Nuninga  ( FW ) \n        Piet Keizer  ( FW ) \n        Sjaak Swart  ( FW ) \n        Velibor Vasovi\u0107  ( DF ) \n        Wim Suurbier  ( DF ) \n \n  1970\u20131980  \n \n        Barry Hulshoff  ( DF ) \n        Dick Schoenaker  ( MF ) \n        Frank Arnesen  ( MF ) \n        Johan Neeskens  ( MF ) \n        Johnny Rep  ( FW ) \n        Ruud Geels  ( FW ) \n        Ruud Krol  ( DF ) \n        S\u00f8ren Lerby  ( MF ) \n        Tschen La Ling  ( FW ) \n \n  1980\u20131990  \n \n        Danny Blind  ( DF ) \n        Frank Rijkaard  ( MF ) \n        Gerald Vanenburg  ( MF ) \n        Marco van Basten  ( FW ) \n        Ronald Koeman  ( MF ) \n \n \n \n  1990\u20132000  \n \n        Clarence Seedorf  ( MF ) \n        Edgar Davids  ( MF ) \n        Edwin van der Sar  ( GK ) \n        Dennis Bergkamp  ( FW ) \n        Frank de Boer  ( DF ) \n            "}, {"title": "Ajax Cape Town F.C.", "rank": 0.1473669391013232, "url": "http://en.wikipedia.org/wiki/Ajax_Cape_Town_FC", "links": ["http://en.wikipedia.org/wiki/Cape_Town_Stadium", "http://en.wikipedia.org/wiki/Cape_Town", "http://en.wikipedia.org/wiki/Turkey", "http://en.wikipedia.org/wiki/Muhsin_Ertu%C4%9Fral", "http://en.wikipedia.org/wiki/Premier_Soccer_League", "http://en.wikipedia.org/wiki/2012%E2%80%9313_Premier_Soccer_League", "http://en.wikipedia.org/wiki/Kit_(association_football)", "http://en.wikipedia.org/wiki/Kit_(association_football)", "http://en.wikipedia.org/wiki/Afrikaans", "http://en.wikipedia.org/wiki/South_Africa"], "body": "  \n Ajax Cape Town \n \n     \n \n \n Full name \n Ajax Cape Town Football Club \n \n \n Nickname(s) \n  Urban Warriors  \n \n \n Founded \n 1999,  merger of Seven Stars \nand Cape Town Spurs  \n \n \n Ground \n  Cape Town Stadium ,  Cape Town  \n \n \n  Ground \u00a0Capacity \n 55,000 \n \n \n Chairman \n Ari Efstathiou \n \n \n Manager \n        Muhsin Ertu\u011fral  \n \n \n League \n  ABSA Premiership  \n \n \n  2012\u201313  \n ABSA Premiership, 14th \n \n \n  \n \n \n \n \n \n \n \n \n     \n   \n   \n   \n   \n   \n   \n   \n   \n   \n \n  Home  colours   \n \n \n \n \n \n     \n   \n   \n   \n   \n   \n   \n   \n   \n   \n \n  Away  colours   \n \n \n \n \n \n \n \n  Ajax Cape Town  ( Afrikaans :  Ajax Kaapstad    [ 1 ]   ) is a  South African   football (soccer)  club based in the  Parow  suburb of the city of  Cape Town  that plays in the  Premier Soccer League . Dutch Eredivisie club  AFC Ajax  is the parent club and acts as the majority shareholder.   [ 2 ]    \n  \n \n \n Contents \n \n \n   1   History   \n   2   Youth program   \n   3   Stadium   \n   4   Former managers   \n   5   Notable former players   \n   6   Honours  \n \n   6.1   Domestic   \n   6.2   Preseason   \n \n \n   7   Performance in CAF competitions   \n   8   Club records  \n \n   8.1   Premier Soccer League record   \n \n \n   9   Club officials/Technical team   \n   10   2013\u201314 First team squad  \n \n   10.1   Players out on loan   \n   10.2   Foreigners   \n \n \n   11   Shirt sponsor &amp; kit manufacturer   \n   12   References   \n   13   External links   \n \n \n  \n  History   [  edit  ]   \n Ajax Cape Town was formed in 1999 by  Rob Moore  and John Comitis via the amalgamation of two Cape Town-based teams,  Seven Stars  and  Cape Town Spurs , as  AFC Ajax  expanded their worldwide talent-feeder network to South Africa. \n Ajax, nicknamed Urban Warriors, played their first official game against  Kaizer Chiefs  in the  Iwisa Charity Spectacular  on 17 July 1999. Ajax caused an upset when they beat Chiefs 1\u20130 with  Sam Pam , the Ajax Cape Town captain, scoring the winning goal. \n Current national team coach  Gordon Igesund , South Africa's most successful club coach,   [ 3 ]    who won league titles with  Manning Rangers ,  Orlando Pirates ,  Santos  and  Sundowns , coached the club from 2002 until 2006. \n Since coming into existence, Ajax has never won the league title with their highest finish being runners-up in 2003-04 and 2011-12. Ajax managed to win the Rothmans Cup in 2000, the  Nedbank Cup  in 2007 and most recently the  Telkom Knockout  in 2008. \n In January 2007 Ajax CT managed to beat AFC Ajax 3\u20131 in a friendly game held in Cape Town. The next friendly, played in  Amsterdam , ended in a 3\u20132 win for  AFC Ajax  in July 2009. \n Over the years several Ajax CT players have made the step to the mother club, among them  Steven Pienaar  in 2002,  Daylon Claasen  in 2009,  Eyong Enoh  in 2008 and  Thulani Serero  in 2011. \n In July 2013, following an abysmal 2012\u201313 campaign which saw Ajax Cape Town going through four managerial changes and just nearly escaping relegation, it was announced that George and John Comitis, longtime shareholders of the club, had sold their shares of the club back to AFC Ajax and that George would step down as the chairman of the club.   [ 4 ]    Ari Efstathiou was announced as the new chairman, and  Muhsin Ertu\u011fral  was reinstated as manager of the club, following an interim managerial period after originally being hired as the clubs new technical director.   [ 5 ]    \n  Youth program   [  edit  ]   \n \n \n     \n  This section requires  expansion .   (August 2011)    \n \n \n Since the inception of the club from its merger under Rob Moore, Ajax Cape Town have imported the AFC Ajax philosophy and effective youth development schemes in the Western Cape. The majority of the senior squad players have come up from the club's own youth ranks, such as the likes of  Nazeer Allie ,  Granwald Scott  and  Thulani Hlatshwayo , while others such as  Steven Pienaar  and  Thulani Serero  have moved on to some of the top clubs in Europe. \n With the introduction of the Ajax Cape Town Community Scheme in conjunction with the South African Police Services, Ajax CT also provides football opportunities to young people within the greater Cape Town area regardless of race, gender, social status or disability, facilitated through structured programs in a safe and fun learning environment. \n Since then the Ajax Cape Town Community Scheme has been implemented in more than 120 schools across the Western Cape as far as the Cape Winelands, reaching more than 8 000 children.   [ 6 ]    \n  Stadium   [  edit  ]   \n Main article:  Cape Town Stadium  \n In the beginning Ajax CT played their home games at  Athlone Stadium  and  Newlands Stadium . The later is a 51,900 capacity venue, which was first built in 1988, and was also host to the  1995 Rugby World Cup  opening match. Essentially being a Rugby stadium, it was a home they shared with clubs  Santos  and  Vasco da Gama , as well as Rugby teams  Stormers  and  Western Province .  Athlone Stadium  was home to the  Santos  and has a capacity of 30,000. The stadium located in  Athlone, Cape Town  was also host to some of Ajax CT early home matches as well. \n Moving to the  Green Point Stadium , an 18,000 seat multi-purpose stadium in the Green Point area of  Cape Town . The stadium was eventually demolished in 2007 to make way for the new  Cape Town Stadium  for the  2010 FIFA World Cup . Construction of the new stadium was completed in 2009, and the Urban Warriors have played their home games at the  Cape Town Stadium  since the beginning of the  2010-11 Premier Soccer League  season to an improved capacity of 55,000. On 3 August 2011 a contract extension of three years was negotiated with the stadium, which will see Ajax CT playing their home games there until 2014.   [ 7 ]      [ 8 ]    \n The first match played at the new stadium was a  Cape Town  derby between Ajax CT and  Santos  on 23 January 2010 as part of the official inauguration of the stadium. \n Ajax Cape Town also has a modern training facility called Ikamva located in Parow, Cape Town. It serves as the training grounds for the senior squad, as well as for the Ajax Cape Town Youth Development Academy. \n  Former managers   [  edit  ]   \n \n        Leo van Veen  (1999\u201300) \n        Henk Bodewes  (2000\u201301) \n        Rob McDonald  (2001\u201302) \n        Gordon Igesund  (2002\u201306) \n        Muhsin Ertu\u011fral  (2006\u201307) \n        Craig Rosslee  (2007\u201309) \n        Muhsin Ertu\u011fral  (2009) \n        Foppe De Haan  (2009\u201311) \n        Maarten Stekelenburg  (2011\u201312) \n        Jan Versleijen  (2013) \n \n NB: Does not include interim managers \n  Notable former players   [  edit  ]   \n  Main Article:    List of Ajax Cape Town players   \n For a list of all Ajax Cape Town players with a Wikipedia article, see  Category:Ajax Cape Town F.C. players . \n  Honours   [  edit  ]   \n  Domestic   [  edit  ]   \n \n   Rothmans Cup/Telkom Knockout   \n \n \n \n \n Winners: 2000, 2008 \n \n \n \n \n   ABSA Cup   \n \n \n \n \n Winners: 2007 \n \n \n \n  Preseason   [  edit  ]   \n \n   Mangaung Cup   \n \n \n \n \n Winners: 2007, 2008 \n \n \n \n  Performance in CAF competitions   [  edit  ]   \n \n   CAF Champions League : 2 appearances  \n \n \n \n \n  2005  \u2013 Final Group Round \n  2009  \u2013 First Round \n \n \n \n \n   CAF Confederation Cup : 1 appearance  \n \n \n \n \n  2008  \u2013 First Round of 16 \n \n \n \n  Club records   [  edit  ]   \n \n Most starts:        Brett Evans  311 \n Most goals:        Thembinkosi Fanteni  52 \n Most capped player:        Edelbert Dinha  \n Most starts in a season:        Edelbert Dinha  41 (2000/01) \n Most goals in a season:        Mabhuti Khenyeza  23 (2008/09) \n Record Victory: 5\u20131 vs  Moroka Swallows  (19/2/06, PSL); vs        Mount Cameroon FC  (26/4/08, CAF Confederation Cup) \n Record defeat: 0\u20136 v  Orlando Pirates  (22/9/04, PSL); vs  Golden Arrows  (24/10/09, MTN 8) \n \n  Premier Soccer League record   [  edit  ]   \n \n  1999/2000  \u2013 4th \n  2000/2001  \u2013 11th \n  2001/2002  \u2013 14th \n  2002/2003  \u2013 13th \n  2003/2004  \u2013 2nd \n  2004/2005  \u2013 6th \n  2005/2006  \u2013 11th \n  2006/2007  \u2013 4th \n  2007/2008  \u2013 2nd \n  2008/2009  \u2013 7th \n  2009/2010  \u2013 7th \n  2010/2011  \u2013 2nd \n  2011/2012  \u2013 9th \n  2012/2013  \u2013 14th \n \n  Club officials/Technical team   [  edit  ]   \n \n Executive director:        Ari Efstathiou  \n Chief commercial officer:        Alexi Efstathiou  \n Team manager:        Maximilian Gr\u00fcnewald  \n Coach:         Muhsin Ertu\u011fral   \n Assistant coaches:         David Nyathi   &amp;        Ian Taylor  \n Goalkeeper coach:         Sander Westerveld   \n Head of youth development:        Corn\u00e9 Groenendijk  \n \n  2013\u201314 First team squad   [  edit  ]   \n  As of 30 September 2013   Note: Flags indicate national team as has been defined under  FIFA eligibility rules . Players may hold more than one non-FIFA nationality.  \n \n \n \n \n \n No. \n  \n Position \n Player \n \n \n 3 \n       \n  GK  \n   Thulani Hlatshwayo   \n \n \n 4 \n       \n  DF  \n   Ritus Krjauklis   \n \n \n 5 \n       \n  DF  \n   Mosa Lebusa   \n \n \n 6 \n       \n  MF  \n   Travis Graham   \n \n \n 7 \n       \n  MF  \n   Nhlanhla Shabalala   \n \n \n 8 \n       \n  MF  \n   Lebogang Manyama   \n \n \n 9 \n       \n  FW  \n   Eleazar Rodgers    (on loan from  Mamelodi Sundowns )  \n \n \n 10 \n       \n  MF  \n   Koen van de Laak   \n \n \n 11 \n       \n  MF  \n   Telinho    (on loan from  LDMM )  \n \n \n 12 \n       \n  MF  \n   Granwald Scott   \n \n \n 13 \n       \n  MF  \n   Lance Davids   \n \n \n 14 \n       \n  FW  \n   Tashreeq Morris   \n \n \n \n  \n \n \n \n No. \n  \n Position \n Player \n \n \n 17 \n       \n  MF  \n   Toriq Losper   \n \n \n 18 \n       \n  DF  \n   Abbubaker Mobara   \n \n \n 19 \n       \n  MF  \n   Bantu Mzwakali   \n \n \n 20 \n       \n  MF  \n   Thato Mokeke   \n \n \n 21 \n       \n  DF  \n   Cecil Lolo   \n \n \n 22 \n       \n  DF  \n   Aidan Jenniker   \n \n \n 23 \n       \n  MF  \n   Michael Kwong   \n \n \n 24 \n       \n  FW  \n   Franklin Cale   \n \n \n 25 \n       \n  MF  \n   Cole Alexander   \n \n \n 26 \n       \n  DF  \n   Dominic Isaacs    ( captain )  \n \n \n 27 \n       \n  MF  \n   Ndumiso Vezi   \n \n \n 28 \n       \n  MF  \n   Keagan Dolly   \n \n \n 29 \n       \n  FW  \n   Nathan Paulse   \n \n \n 30 \n       \n  GK  \n   Sean Roberts   \n \n \n 32 \n       \n  GK  \n   Anssi Jaakkola   \n \n \n \n \n \n  Players out on loan   [  edit  ]   \n  Note: Flags indicate national team as has been defined under  FIFA eligibility rules . Players may hold more than one non-FIFA nationality.  \n \n \n \n \n \n No. \n  \n Position \n Player \n \n \n - \n       \n  FW  \n   George Akpabio    (to  Chippa United  until 30 June 2014)  \n \n \n \n \n \n  Foreigners   [  edit  ]   \n In the South African PSL, only five non-South African nationals can be registered. Foreign players who have acquired  permanent residency  can be registered as locals. Namibians born before 1990 can be registered as South Africans. \n \n        Anssi Jaakkola  \n        Ritus Krjauklis  \n        Koen van de Laak  \n        Telinho  \n \n  Shirt sponsor &amp; kit manufacturer   [  edit  ]   \n \n Shirt sponsor:  MTN  \n Kit manufacturer:  Adidas  \n \n  References   [  edit  ]   \n \n \n    ^      Ajax kom nou tuis by Kaapstad-stadion   Nuus24 , geraadpleegd 28 augustus 2011  \n    ^      http://www.kickoff.com/news/35388/comitis-brothers-sell-shares-in-ajax-cape-town-after-feud-with-efstathiou-family   \n    ^      Soccer in South Africa   \n    ^       \"Comitis-familie stapt uit Ajax CT\" . Ajax Showtime . Retrieved 2013-07-08 .   \u00a0    \n    ^       \"Efstathiou: Ertugral Stays, Comitis goes\" . Kick Off Magazine . Retrieved 2013-07-08 .   \u00a0    \n    ^       \"Ajax Cape Town Club History\" . ajaxct.com. 5 August 2011 . Retrieved 5 August 2011 .   \u00a0    \n    ^       \"Chiefs to use Rand Stadium this season\" . KickOff Magazine. 30 June 2010.  Archived  from the original on 9 August 2010 . Retrieved 8 July 2010 .   \u00a0    \n    ^       \"Ajax CT to use Cape Town Stadium as Home Ground\" . Goal.com. 3 August 2011 . Retrieved 5 August 2011 .   \u00a0    \n \n \n  External links   [  edit  ]   \n \n    Official website    \n  Premier Soccer League  \n  PSL Club Info  \n  South African Football Association  \n  Confederation of African Football  \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n   Ajax Cape Town   \n \n \n \n  \n \n \n \n \n \n   Squad   \n   Players   \n   Managers   \n  Seasons  \n \n \n \n \n \n  \n \n \n \n \n \n  Grounds:   Athlone Stadium  \n  Newlands Stadium  \n  Cape Town Stadium  \n iKamva \n \n \n \n \n \n  \n \n \n \n \n \n  All articles  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Premier Soccer League   2013\u201314  \n \n \n \n  \n \n \n \n \n \n  Ajax Cape Town  \n  AmaZulu  \n  Bidvest Wits  \n  Bloemfontein Celtic  \n  Free State Stars  \n  Golden Arrows  \n  Kaizer Chiefs  \n  Mamelodi Sundowns  \n  Maritzburg United  \n  Moroka Swallows  \n  Mpumalanga Black Aces  \n  Orlando Pirates  \n  Platinum Stars  \n  Polokwane City  \n  SuperSport United  \n  University of Pretoria  \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Java (programming language)", "rank": -0.09446042736675386, "url": "http://en.wikipedia.org/wiki/Java_(programming_language)", "links": ["http://en.wikipedia.org/wiki/Javanese_language", "http://en.wikipedia.org/wiki/JavaScript", "http://en.wikipedia.org/wiki/Programming_paradigm", "http://en.wikipedia.org/wiki/Multi-paradigm_programming_language", "http://en.wikipedia.org/wiki/Object-oriented_programming", "http://en.wikipedia.org/wiki/Structured_programming", "http://en.wikipedia.org/wiki/Imperative_programming", "http://en.wikipedia.org/wiki/Generic_programming", "http://en.wikipedia.org/wiki/Reflective_programming", "http://en.wikipedia.org/wiki/Concurrent_programming"], "body": "  \"Java language\" redirects here. For the natural language from the Indonesian island of Java, see  Javanese language . \n Not to be confused with  JavaScript . \n \n Java \n \n     \n \n \n  Paradigm(s)  \n  multi-paradigm :  object-oriented ,  structured ,  imperative ,  generic ,  reflective ,  concurrent  \n \n \n Appeared in \n 1995 \u00a0( 1995 )    [ 1 ]    \n \n \n Designed by \n  James Gosling  and \n Sun Microsystems  \n \n \n  Developer  \n  Oracle Corporation  \n \n \n  Stable release  \n Java Standard Edition 7 Update 51 (1.7.51) (January\u00a014, 2014 ; 4 days ago  \u00a0( 2014-01-14 ) ) \n \n \n  Typing discipline  \n  Static, strong, safe ,  nominative ,  manifest  \n \n \n  Major implementations  \n  OpenJDK ,  many others  \n \n \n  Dialects  \n  Generic Java ,  Pizza  \n \n \n Influenced by \n  Ada 83 ,  C++ ,  C# ,   [ 2 ]     Eiffel ,   [ 3 ]     Generic Java ,  Mesa ,   [ 4 ]     Modula-3 ,   [ 5 ]     Oberon ,   [ 6 ]     Objective-C ,   [ 7 ]     UCSD Pascal ,   [ 8 ]      [ 9 ]     Smalltalk  \n \n \n Influenced \n  Ada 2005 ,  BeanShell ,  C# ,  Clojure ,  D ,  ECMAScript ,  Groovy ,  J# ,  JavaScript ,  PHP ,  Python ,  Scala ,  Seed7 ,  Vala  \n \n \n Implementation language \n  C  and  C++  \n \n \n  OS  \n  Cross-platform  (multi-platform) \n \n \n  License  \n  GNU General Public License ,  Java Community Process  \n \n \n Usual  filename extensions  \n .java ,  .class ,  .jar  \n \n \n Website \n  For Java Developers  \n \n \n \n \n    Java Programming  at Wikibooks \n \n \n \n \n  Java  is a  computer programming language  that is  concurrent ,  class-based ,  object-oriented , and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers \" write once, run anywhere \" (WORA), meaning that code that runs on one platform does not need to be recompiled to run on another. Java applications are typically  compiled  to  bytecode  ( class file ) that can run on any  Java virtual machine  (JVM) regardless of  computer architecture . Java is, as of 2012, one of the most popular programming languages in use, particularly for client-server web applications, with a reported 9 million developers.   [ 10 ]      [ 11 ]    Java was originally developed by  James Gosling  at  Sun Microsystems  (which has since  merged into Oracle Corporation ) and released in 1995 as a core component of Sun Microsystems'  Java platform . The language derives much of its  syntax  from  C  and  C++ , but it has fewer  low-level  facilities than either of them. \n The original and  reference implementation  Java  compilers , virtual machines, and  class libraries  were developed by Sun from 1991 and first released in 1995. As of May 2007, in compliance with the specifications of the  Java Community Process , Sun relicensed most of its Java technologies under the  GNU General Public License . Others have also developed alternative implementations of these Sun technologies, such as the  GNU Compiler for Java  (bytecode compiler),  GNU Classpath  (standard libraries), and  IcedTea -Web (browser plugin for applets). \n  \n \n \n Contents \n \n \n   1   History  \n \n   1.1   Principles   \n   1.2   Versions   \n \n \n   2   Practices  \n \n   2.1   Java platform  \n \n   2.1.1   Implementations   \n   2.1.2   Performance   \n \n \n   2.2   Automatic memory management   \n \n \n   3   Syntax   \n   4   Examples  \n \n   4.1   Hello world   \n   4.2   A more comprehensive example   \n \n \n   5   Special classes  \n \n   5.1   Applet   \n   5.2   Servlet   \n   5.3   JavaServer Pages   \n   5.4   Swing application   \n   5.5   Generics   \n \n \n   6   Criticism   \n   7   Use by external companies  \n \n   7.1   Google   \n \n \n   8   Class libraries   \n   9   Documentation   \n   10   Editions   \n   11   See also  \n \n   11.1   Comparison of Java with other languages   \n \n \n   12   Notes   \n   13   References   \n   14   External links   \n \n \n  \n  History   [  edit  ]   \n See also:  Java (software platform)#History  \n \n    \n \n     \nDuke, the Java mascot \n \n \n  James Gosling , Mike Sheridan, and  Patrick Naughton  initiated the Java language project in June 1991.   [ 12 ]    Java was originally designed for interactive television, but it was too advanced for the digital cable television industry at the time.   [ 13 ]    The language was initially called   Oak   after an  oak  tree that stood outside Gosling's office; it went by the name  Green  later, and was later renamed  Java , from  Java coffee ,   [ 14 ]    said to be consumed in large quantities by the language's creators. [   citation needed   ]  Gosling aimed to implement a  virtual machine  and a language that had a familiar  C / C++  style of notation.   [ 15 ]    \n  Sun Microsystems  released the first public implementation as Java 1.0 in 1995.   [ 1 ]    It promised \"Write Once, Run Anywhere\" (WORA), providing no-cost run-times on popular  platforms . Fairly secure and featuring configurable security, it allowed network- and file-access restrictions. Major web browsers soon incorporated the ability to run   Java applets   within web pages, and Java quickly became popular. With the advent of  Java 2  (released initially as J2SE 1.2 in December 1998 \u2013 1999), new versions had multiple configurations built for different types of platforms. For example,  J2EE  targeted enterprise applications and the greatly stripped-down version  J2ME  for mobile applications (Mobile Java).  J2SE  designated the Standard Edition. In 2006, for marketing purposes, Sun renamed new  J2  versions as   Java EE  ,   Java ME  , and   Java SE  , respectively. \n In 1997, Sun Microsystems approached the  ISO/IEC JTC1  standards body and later the  Ecma International  to formalize Java, but it soon withdrew from the process.   [ 16 ]    Java remains a   de facto   standard, controlled through the  Java Community Process .   [ 17 ]    At one time, Sun made most of its Java implementations available without charge, despite their  proprietary software  status. Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System. Sun distinguishes between its  Software Development Kit (SDK)  and  Runtime Environment (JRE)  (a subset of the SDK); the primary distinction involves the  JRE's  lack of the compiler, utility programs, and header files. \n On November 13, 2006, Sun released much of Java as  free and open source software , (FOSS), under the terms of the  GNU General Public License  (GPL). On May 8, 2007, Sun finished the process, making all of Java's core code available under  free software /open-source distribution terms, aside from a small portion of code to which Sun did not hold the copyright.   [ 18 ]    \n Sun's vice-president Rich Green said that Sun's ideal role with regards to Java was as an \"evangelist.\"   [ 19 ]    Following  Oracle Corporation 's acquisition of Sun Microsystems in 2009\u20132010, Oracle has described itself as the \"steward of Java technology with a relentless commitment to fostering a community of participation and transparency\".   [ 20 ]    This did not hold Oracle, however, from filing a lawsuit against Google shortly after that for using Java inside the Android SDK (see Google section below). Java software runs on everything from  laptops  to  data centers ,  game consoles  to scientific  supercomputers . There are 930 million  Java Runtime Environment  downloads each year and 3 billion  mobile phones  run Java.   [ 21 ]    On April 2, 2010, James Gosling resigned from Oracle.   [ 22 ]    \n  Principles   [  edit  ]   \n \n    \n \n     \n James Gosling , the creator of Java \n \n \n There were five primary goals in the creation of the Java language:   [ 23 ]    \n \n It should be \"simple, object-oriented and familiar\" \n It should be \"robust and secure\" \n It should be \"architecture-neutral and portable\" \n It should execute with \"high performance\" \n It should be \"interpreted, threaded, and dynamic\" \n \n  Versions   [  edit  ]   \n Main article:  Java version history  \n Major release versions of Java, along with their release dates: \n \n JDK 1.0 (January 21, 1996) \n JDK 1.1 (February 19, 1997) \n J2SE 1.2 (December 8, 1998) \n J2SE 1.3 (May 8, 2000) \n J2SE 1.4 (February 6, 2002) \n J2SE 5.0 (September 30, 2004) \n Java SE 6 (December 11, 2006) \n Java SE 7 (July 28, 2011) \n Java SE 8 (March 18, 2014) \n \n  Practices   [  edit  ]   \n  Java platform   [  edit  ]   \n Main articles:  Java (software platform)  and  Java virtual machine  \n One characteristic of Java is portability, which means that computer programs written in the Java language must run similarly on any hardware/operating-system platform. This is achieved by compiling the Java language code to an intermediate representation called  Java bytecode , instead of directly to platform-specific  machine code . Java bytecode instructions are analogous to machine code, but they are intended to be  interpreted  by a  virtual machine  (VM) written specifically for the host hardware.  End-users  commonly use a  Java Runtime Environment  (JRE) installed on their own machine for standalone Java applications, or in a Web browser for Java  applets . \n Standardized libraries provide a generic way to access host-specific features such as graphics,  threading , and  networking . \n A major benefit of using bytecode is porting. However, the overhead of interpretation means that interpreted programs almost always run more slowly than programs compiled to native executables would. Just-in-Time (JIT) compilers were introduced from an early stage that compile bytecodes to machine code during runtime. \n  Implementations   [  edit  ]   \n See also:  Free Java implementations  \n  Oracle Corporation  is the current owner of the official implementation of the Java SE platform, following their acquisition of  Sun Microsystems  on January 27, 2010. This implementation is based on the original implementation of Java by Sun. The Oracle implementation is available for  Mac OS X ,  Windows  and  Solaris . Because Java lacks any formal standardization recognized by Ecma International, ISO/IEC, ANSI, or other third-party standards organization, the Oracle implementation is the  de facto standard . \n The Oracle implementation is packaged into two different distributions: The Java Runtime Environment (JRE) which contains the parts of the Java SE platform required to run Java programs and is intended for end-users, and the  Java Development Kit  (JDK), which is intended for software developers and includes development tools such as the  Java compiler ,  Javadoc ,  Jar , and a  debugger . \n  OpenJDK  is another notable Java SE implementation that is licensed under the  GPL . The implementation started when Sun began releasing the Java source code under the  GPL . As of Java SE 7,  OpenJDK  is the official Java reference implementation. \n The goal of Java is to make all implementations of Java compatible. Historically, Sun's trademark license for usage of the Java brand insists that all implementations be \"compatible\". This resulted in a legal dispute with  Microsoft  after Sun claimed that the Microsoft implementation did not support  RMI  or  JNI  and had added platform-specific features of their own. Sun sued in 1997, and in 2001 won a settlement of US$20 million, as well as a court order enforcing the terms of the license from Sun.   [ 24 ]    As a result, Microsoft no longer ships  Windows  with Java. \n Platform-independent Java is essential to  Java EE , and an even more rigorous validation is required to certify an implementation. This environment enables portable server-side applications. \n  Performance   [  edit  ]   \n Main article:  Java performance  \n Programs written in Java have a reputation for being slower and requiring more memory than those written in  C++ .   [ 25 ]      [ 26 ]    However, Java programs' execution speed improved significantly with the introduction of  Just-in-time compilation  in 1997/1998 for  Java 1.1 ,   [ 27 ]    the addition of language features supporting better code analysis (such as inner classes, the StringBuilder class, optional assertions, etc.), and optimizations in the Java virtual machine itself, such as  HotSpot  becoming the default for Sun's JVM in 2000. \n Some platforms offer direct hardware support for Java; there are microcontrollers that can run Java in hardware instead of a software Java virtual machine, and  ARM  based processors can have hardware support for executing Java bytecode through their  Jazelle  option. \n  Automatic memory management   [  edit  ]   \n Java uses an  automatic garbage collector  to manage memory in the  object lifecycle . The programmer determines when objects are created, and the Java runtime is responsible for recovering the memory once objects are no longer in use. Once no references to an object remain, the  unreachable memory  becomes eligible to be freed automatically by the garbage collector. Something similar to a  memory leak  may still occur if a programmer's code holds a reference to an object that is no longer needed, typically when objects that are no longer needed are stored in containers that are still in use. If methods for a nonexistent object are called, a \"null pointer exception\" is thrown.   [ 28 ]      [ 29 ]    \n One of the ideas behind Java's automatic memory management model is that programmers can be spared the burden of having to perform manual memory management. In some languages, memory for the creation of objects is implicitly allocated on the  stack , or explicitly allocated and deallocated from the  heap . In the latter case the responsibility of managing memory resides with the programmer. If the program does not deallocate an object, a  memory leak  occurs. If the program attempts to access or deallocate memory that has already been deallocated, the result is undefined and difficult to predict, and the program is likely to become unstable and/or crash. This can be partially remedied by the use of  smart pointers , but these add overhead and complexity. Note that garbage collection does not prevent \"logical\" memory leaks, i.e. those where the memory is still referenced but never used. \n Garbage collection may happen at any time. Ideally, it will occur when a program is idle. It is guaranteed to be triggered if there is insufficient free memory on the heap to allocate a new object; this can cause a program to stall momentarily. Explicit memory management is not possible in Java. \n Java does not support C/C++ style  pointer arithmetic , where object addresses and unsigned integers (usually long integers) can be used interchangeably. This allows the garbage collector to relocate referenced objects and ensures type safety and security. \n As in  C++  and some other object-oriented languages, variables of Java's  primitive data types  are not objects. Values of primitive types are either stored directly in fields (for objects) or on the  stack  (for methods) rather than on the heap, as is commonly true for objects (but see  escape analysis ). This was a conscious decision by Java's designers for performance reasons. Because of this, Java was not considered to be a pure object-oriented programming language. However, as of Java 5.0,  autoboxing  enables programmers to proceed as if primitive types were instances of their wrapper class. \n Java contains multiple types of garbage collectors. By default, [   citation needed   ]  HotSpot uses the  concurrent mark sweep collector , also known as the CMS garbage collector or CMS. However, there are also several other garbage collectors that can be used to manage the heap. For 90% of applications in Java, the CMS garbage collector is sufficient.   [ 30 ]    Oracle aims to replace CMS with the  Garbage-first collector  (G1). \n  Syntax   [  edit  ]   \n Main article:  Java syntax  \n The syntax of Java is largely derived from  C++ . Unlike C++, which combines the syntax for structured, generic, and object-oriented programming, Java was built almost exclusively as an object-oriented language. All code is written inside a class, and everything is an object, with the exception of the primitive data types (i.e. integers, floating-point numbers, boolean values, and characters), which are not classes for performance reasons. \n Unlike C++, Java does not support  operator   overloading  or  multiple inheritance  for  classes . This simplifies the language and aids in preventing potential errors and  anti-pattern  design. \n Java uses similar commenting methods to C++. There are three different styles of comments: a single line style marked with two slashes ( // ), a multiple line style opened with  /*  and closed with  */ , and the  Javadoc  commenting style opened with  /**  and closed with  */ . The Javadoc style of commenting allows the user to run the Javadoc executable to compile documentation for the program. \n  Example:  \n \n \n \n // This is an example of a single line comment using two slashes \n \n /* This is an example of a multiple line comment using the slash and asterisk.\n This type of comment can be used to hold a lot of information or deactivate\n code, but it is very important to remember to close the comment. */ \n \n /**\n * This is an example of a Javadoc comment; Javadoc can compile documentation\n * from this text.\n */ \n \n /** Finally, an example of a method written in Java, wrapped in a class. */ \n package   fibsandlies  ; \n import   java.util.HashMap  ; \n \n public   class  FibCalculator  extends  Fibonacci  implements  Calculator  { \n     private   static  HashMap &lt;  Integer , Integer &gt;  memoized  =   new  HashMap &lt;  Integer , Integer &gt;  (  )  ; \n     static   { \n        memoized. put  (  1 ,  1  )  ; \n        memoized. put  (  2 ,  1  )  ; \n     } \n \n     /** Given a non-negative number FIBINDEX, returns\n     *  the Nth Fibonacci number, where N equals FIBINDEX.\n     *  @param fibIndex The index of the Fibonacci number\n     *  @return The Fibonacci number itself\n     */ \n    @Override\n     public   static   int  fibonacci (  int  fibIndex )   { \n         if   ( memoized. containsKey  ( fibIndex )  )   { \n             return  memoized. get  ( fibIndex )  ; \n         }   else   { \n             int  answer  =  fibonacci ( fibIndex  -   1  )   +  fibonacci ( fibIndex  -   2  )  ; \n            memoized. put  ( fibIndex, answer )  ; \n             return  answer ; \n         } \n     } \n } \n  \n \n  Examples   [  edit  ]   \n \n \n \n   \n \n  This article  contains  instructions, advice, or how-to content  .  The purpose of Wikipedia is to present facts, not to train. Please help  improve this article  either by rewriting the how-to content or by  moving  it to  Wikiversity ,  Wikibooks  or  Wikivoyage     (January 2012)    \n \n \n \n \n \n   \n \n  This article's  use of  external links  may not follow Wikipedia's policies or guidelines .  Please  improve this article  by removing  excessive  or  inappropriate  external links, and converting useful links where appropriate into  footnote references .    (March 2013)    \n \n \n  Hello world   [  edit  ]   \n The traditional  Hello world program  can be written in Java as:   [ 31 ]    \n \n \n \n class  HelloWorldApp  { \n     public   static   void  main (  String  [  ]  args )   { \n         System . out . println  (  \"Hello World!\"  )  ;   // Display the string. \n     } \n } \n  \n \n To compare this to other programming languages see the list of  hello world program examples . \n Source files must be named after the public class they contain, appending the suffix  .java , for example,  HelloWorldApp.java . It must first be compiled into bytecode, using a  Java compiler , producing a file named  HelloWorldApp.class . Only then can it be executed, or 'launched'. The Java source file may only contain one public class, but it can contain multiple classes with other than public access and any number of public  inner classes . \n A   class   that is not declared   public   may be stored in any .java file. The compiler will generate a class file for each class defined in the source file. The name of the class file is the name of the class, with  .class  appended. For class file generation,  anonymous classes  are treated as if their name were the concatenation of the name of their enclosing class, a  $ , and an integer. \n The  keyword    public   denotes that a method can be called from code in other classes, or that a class may be used by classes outside the class hierarchy. The class hierarchy is related to the name of the directory in which the .java file is located. \n The keyword   static   in front of a method indicates a  static method , which is associated only with the class and not with any specific instance of that class. Only static methods can be invoked without a reference to an object. Static methods cannot access any class members that are not also static. \n The keyword   void   indicates that the main method does not return any value to the caller. If a Java program is to exit with an error code, it must call System.exit() explicitly. \n The method name \" main \" is not a keyword in the Java language. It is simply the name of the method the Java launcher calls to pass control to the program. Java classes that run in managed environments such as applets and  Enterprise JavaBean  do not use or need a  main()  method. A Java program may contain multiple classes that have  main  methods, which means that the VM needs to be explicitly told which class to launch from. \n The main method must accept an  array  of    String    objects. By convention, it is referenced as   args   although any other legal identifier name can be used. Since Java 5, the main method can also use  variable arguments , in the form of  public static void main(String... args) , allowing the main method to be invoked with an arbitrary number of  String  arguments. The effect of this alternate declaration is semantically identical (the  args  parameter is still an array of  String  objects), but it allows an alternative syntax for creating and passing the array. \n The Java launcher launches Java by loading a given class (specified on the command line or as an attribute in a  JAR ) and starting its  public static void main(String[])  method. Stand-alone programs must declare this method explicitly. The  String[] args  parameter is an  array  of   String   objects containing any arguments passed to the class. The parameters to  main  are often passed by means of a  command line . \n Printing is part of a Java standard library: The    System    class defines a public static field called    out   . The  out  object is an instance of the   PrintStream   class and provides many methods for printing data to  standard out , including    println(String)    which also appends a new line to the passed string. \n The string \"Hello, world!\" is automatically converted to a String object by the compiler. \n  A more comprehensive example   [  edit  ]   \n \n \n \n     \n \n  This section  does not  cite  any  references or sources  .  Please help improve this section by  adding citations to reliable sources . Unsourced material may be challenged and  removed .    (May 2013)    \n \n \n \n \n \n   \n \n  This article  contains  instructions, advice, or how-to content  .  The purpose of Wikipedia is to present facts, not to train. Please help  improve this article  either by rewriting the how-to content or by  moving  it to  Wikiversity ,  Wikibooks  or  Wikivoyage     (May 2013)    \n \n \n \n \n \n // OddEven.java \n import   javax.swing.JOptionPane  ; \n \n public   class  OddEven  { \n \n     private   int  userInput ;   // a whole number(\"int\" means integer) \n \n     /**\n     * This is the constructor method. It gets called when an object of the OddEven type\n     * is being created.\n     */ \n     public  OddEven (  )   { \n         /*\n         * In most Java programs constructors can initialize objects with default values, or create\n         * other objects that this object might use to perform its functions. In some Java programs, the\n         * constructor may simply be an empty function if nothing needs to be initialized prior to the\n         * functioning of the object. In this program's case, an empty constructor would suffice.\n         * A constructor must exist; however, if the user doesn't put one in then the compiler\n         * will create an empty one.\n         */ \n     } \n \n     /**\n     * This is the main method. It gets called when this class is run through a Java interpreter.\n     * @param args command line arguments (unused)\n     */ \n     public   static   void  main (  final   String  [  ]  args )   { \n        /*\n        * This line of code creates a new instance of this class called \"number\" (also known as an\n        * Object) and initializes it by calling the constructor. The next line of code calls\n        * the \"showDialog()\" method, which brings up a prompt to ask you for a number.\n        */ \n       OddEven number  =   new  OddEven (  )  ; \n       number. showDialog  (  )  ; \n     } \n \n     public   void  showDialog (  )   { \n         /*\n         * \"try\" makes sure nothing goes wrong. If something does,\n         * the interpreter skips to \"catch\" to see what it should do.\n         */ \n         try   { \n             /*\n             * The code below brings up a JOptionPane, which is a dialog box\n             * The String returned by the \"showInputDialog()\" method is converted into\n             * an integer, making the program treat it as a number instead of a word.\n             * After that, this method calls a second method, calculate() that will\n             * display either \"Even\" or \"Odd.\"\n             */ \n            userInput  =   Integer . parseInt  (  JOptionPane . showInputDialog  (  \"Please enter a number.\"  )  )  ; \n            calculate (  )  ; \n         }   catch   (  final   NumberFormatException  e )   { \n             /*\n             * Getting in the catch block means that there was a problem with the format of\n             * the number. Probably some letters were typed in instead of a number.\n             */ \n             System . err . println  (  \"ERROR: Invalid input. Please type in a numerical value.\"  )  ; \n         } \n     } \n \n     /**\n     * When this gets called, it sends a message to the interpreter.\n     * The interpreter usually shows it on the command prompt (For Windows users)\n     * or the terminal (For *nix users).(Assuming it's open)\n     */ \n     private   void  calculate (  )   { \n         if   (  ( userInput  %   2  )   ==   0  )   { \n             JOptionPane . showMessageDialog  (  null ,  \"Even\"  )  ; \n         }   else   { \n             JOptionPane . showMessageDialog  (  null ,  \"Odd\"  )  ; \n         } \n     } \n } \n  \n \n \n The   import   statement imports the    JOptionPane    class from the    javax.swing     package . \n The   OddEven   class declares a single    private     field  of type   int   named   userInput  . Every instance of the  OddEven  class has its own copy of the  userInput  field. The private declaration means that no other class can access (read or write) the  userInput  field. \n   OddEven()   is a   public    constructor . Constructors have the same name as the enclosing class they are declared in, and unlike a method, have no  return type . A constructor is used to initialize an  object  that is a newly created instance of the class. \n The   calculate()   method is declared without the   static  keyword . This means that the method is invoked using a specific instance of the  OddEven  class. (The  reference  used to invoke the method is passed as an undeclared parameter of type  OddEven  named    this   .) The method tests the expression  userInput\u00a0% 2 == 0  using the    if    keyword to see if the remainder of dividing the  userInput  field belonging to the instance of the class by two is zero. If this expression is true, then it prints  Even ; if this expression is false it prints  Odd . (The  calculate  method can be equivalently accessed as  this.calculate  and the  userInput  field can be equivalently accessed as  this.userInput , which both explicitly use the undeclared  this  parameter.) \n   OddEven number = new OddEven();   declares a local object  reference  variable in the  main  method named  number . This variable can hold a reference to an object of type  OddEven . The declaration initializes  number  by first creating an instance of the  OddEven  class, using the    new    keyword and the  OddEven()  constructor, and then assigning this instance to the variable. \n The statement   number.showDialog();   calls the calculate method. The instance of  OddEven  object referenced by the  number   local variable  is used to invoke the method and passed as the undeclared  this  parameter to the  calculate  method. \n   userInput = Integer.parseInt(JOptionPane.showInputDialog(\"Please Enter A Number\"));   is a statement that converts the type of  String  to the  primitive data type   int  by using a utility function in the  primitive wrapper class   Integer . \n \n  Special classes   [  edit  ]   \n \n \n \n   \n \n  This article  contains  instructions, advice, or how-to content  .  The purpose of Wikipedia is to present facts, not to train. Please help  improve this article  either by rewriting the how-to content or by  moving  it to  Wikiversity ,  Wikibooks  or  Wikivoyage     (January 2012)    \n \n \n  Applet   [  edit  ]   \n Main article:  Java applet  \n Java applets are programs that are embedded in other applications, typically in a Web page displayed in a  Web browser . \n \n \n \n // Hello.java \n import   javax.swing.JApplet  ; \n import   java.awt.Graphics  ; \n \n public   class  Hello  extends   JApplet   { \n     public   void  paintComponent (  final   Graphics  g )   { \n        g. drawString  (  \"Hello, world!\" ,  65 ,  95  )  ; \n     } \n } \n  \n \n The   import   statements direct the  Java compiler  to include the    javax.swing.JApplet    and    java.awt.Graphics    classes in the compilation. The import statement allows these classes to be referenced in the  source code  using the  simple class name  (i.e.  JApplet ) instead of the  fully qualified class name  (i.e.  javax.swing.JApplet ). \n The  Hello  class   extends   ( subclasses ) the   JApplet   (Java Applet) class; the  JApplet  class provides the framework for the host application to display and control the  lifecycle  of the applet. The  JApplet  class is a JComponent (Java Graphical Component) which provides the applet with the capability to display a  graphical user interface  (GUI) and respond to user  events . \n The  Hello  class  overrides  the    paintComponent(Graphics)    method (additionally indicated with the  annotation , supported as of JDK 1.5,  Override ) inherited from the   Container    superclass  to provide the code to display the applet. The  paintComponent()  method is passed a   Graphics   object that contains the graphic context used to display the applet. The  paintComponent()  method calls the graphic context    drawString(String, int, int)    method to display the  \"Hello, world!\"  string at a  pixel  offset of (  65, 95  ) from the upper-left corner in the applet's display. \n \n \n \n &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \n \"http://www.w3.org/TR/html4/strict.dtd\"&gt; \n &lt;!-- Hello.html --&gt; \n &lt; html &gt; \n     &lt; head &gt; \n         &lt; title &gt; Hello World Applet &lt; /  title &gt; \n     &lt; /  head &gt; \n     &lt; body &gt; \n         &lt; applet   code  =  \"Hello.class\"   width  =  \"200\"   height  =  \"200\" &gt; \n         &lt; /  applet &gt; \n     &lt; /  body &gt; \n &lt; /  html &gt; \n  \n \n An applet is placed in an  HTML  document using the   &lt;applet&gt;    HTML element . The  applet  tag has three attributes set:   code=\"Hello\"   specifies the name of the  JApplet  class and   width=\"200\" height=\"200\"   sets the pixel width and height of the applet. Applets may also be embedded in HTML using either the  object  or  embed  element,   [ 32 ]    although support for these elements by Web browsers is inconsistent.   [ 33 ]    However, the  applet  tag is deprecated, so the  object  tag is preferred where supported. \n The host application, typically a Web browser, instantiates the   Hello   applet and creates an   AppletContext   for the applet. Once the applet has initialized itself, it is added to the AWT display hierarchy. The  paintComponent()  method is called by the AWT  event dispatching thread  whenever the display needs the applet to draw itself. \n  Servlet   [  edit  ]   \n Main article:  Java Servlet  \n  Java Servlet  technology provides Web developers with a simple, consistent mechanism for extending the functionality of a Web server and for accessing existing business systems. Servlets are  server-side  Java EE components that generate responses (typically  HTML  pages) to requests (typically  HTTP  requests) from  clients . A servlet can almost be thought of as an applet that runs on the server side\u2014without a face. \n \n \n \n // Hello.java \n import   java.io.*  ; \n import   javax.servlet.*  ; \n \n public   class  Hello  extends  GenericServlet  { \n     public   void  service (  final  ServletRequest request,  final  ServletResponse response ) \n     throws  ServletException,  IOException   { \n        response. setContentType  (  \"text/html\"  )  ; \n         final   PrintWriter  pw  =  response. getWriter  (  )  ; \n         try   { \n            pw. println  (  \"Hello, world!\"  )  ; \n         }   finally   { \n            pw. close  (  )  ; \n         } \n     } \n } \n  \n \n The   import   statements direct the Java compiler to include all of the public classes and  interfaces  from the    java.io    and    javax.servlet    packages in the compilation. Packages make Java well suited for large scale applications. \n The   Hello   class   extends   the    GenericServlet    class; the  GenericServlet  class provides the interface for the  server  to forward requests to the servlet and control the servlet's lifecycle. \n The  Hello  class overrides the    service(ServletRequest, ServletResponse)    method defined by the   Servlet    interface  to provide the code for the service request handler. The  service()  method is passed: a    ServletRequest    object that contains the request from the client and a    ServletResponse    object used to create the response returned to the client. The  service()  method declares that it   throws   the  exceptions    ServletException   and   IOException   if a problem prevents it from responding to the request. \n The    setContentType(String)    method in the response object is called to set the  MIME  content type of the returned data to  \"text/html\" . The    getWriter()    method in the response returns a    PrintWriter    object that is used to write the data that is sent to the client. The    println(String)    method is called to write the  \"Hello, world!\"  string to the response and then the    close()    method is called to close the print writer, which causes the data that has been written to the stream to be returned to the client. \n  JavaServer Pages   [  edit  ]   \n Main article:  JavaServer Pages  \n JavaServer Pages (JSP) are  server-side  Java EE components that generate responses, typically  HTML  pages, to  HTTP  requests from  clients . JSPs embed Java code in an HTML page by using the special  delimiters   &lt;%  and  %&gt; . A JSP is compiled to a Java  servlet , a Java application in its own right, the first time it is accessed. After that, the generated servlet creates the response. \n  Swing application   [  edit  ]   \n Main article:  Swing (Java)  \n  Swing  is a graphical user interface  library  for the Java SE platform. It is possible to specify a different look and feel through the  pluggable look and feel  system of Swing. Clones of  Windows ,  GTK+  and  Motif  are supplied by Sun.  Apple  also provides an  Aqua  look and feel for  Mac OS X . Where prior implementations of these looks and feels may have been considered lacking, Swing in Java SE 6 addresses this problem by using more native  GUI widget  drawing routines of the underlying platforms. \n This example Swing application creates a single window with \"Hello, world!\" inside: \n \n \n \n // Hello.java (Java SE 5) \n import   javax.swing.*  ; \n \n public   class  Hello  extends   JFrame   { \n     public  Hello (  )   { \n         super  (  \"hello\"  )  ; \n         super . setDefaultCloseOperation  (  WindowConstants . EXIT_ON_CLOSE  )  ; \n         super . add  (  new   JLabel  (  \"Hello, world!\"  )  )  ; \n         super . pack  (  )  ; \n         super . setVisible  (  true  )  ; \n     } \n \n     public   static   void  main (  final   String  [  ]  args )   { \n         new  Hello (  )  ; \n     } \n } \n  \n \n The first   import   includes all of the public classes and interfaces from the    javax.swing    package. \n The   Hello   class   extends   the    JFrame    class; the  JFrame  class implements a  window  with a  title bar  and a close  control . \n The   Hello()    constructor  initializes the frame by first calling the superclass constructor, passing the parameter  \"hello\" , which is used as the window's title. It then calls the    setDefaultCloseOperation(int)    method inherited from  JFrame  to set the default operation when the close control on the title bar is selected to    WindowConstants.EXIT_ON_CLOSE    \u2014 this causes the  JFrame  to be disposed of when the frame is closed (as opposed to merely hidden), which allows the Java virtual machine to exit and the program to terminate. Next, a    JLabel    is created for the string  \"Hello, world!\"  and the    add(Component)    method inherited from the   Container   superclass is called to add the label to the frame. The    pack()    method inherited from the   Window   superclass is called to size the window and lay out its contents. \n The   main()   method is called by the Java virtual machine when the program starts. It  instantiates  a new   Hello   frame and causes it to be displayed by calling the    setVisible(boolean)    method inherited from the   Component   superclass with the boolean parameter   true  . Once the frame is displayed, exiting the  main  method does not cause the program to terminate because the AWT  event dispatching thread  remains active until all of the Swing top-level windows have been disposed. \n  Generics   [  edit  ]   \n Main article:  Generics in Java  \n In 2004,  generics  were added to the Java language, as part of J2SE 5.0. Prior to the introduction of generics, each variable declaration had to be of a specific type. For container classes, for example, this is a problem because there is no easy way to create a container that accepts only specific types of objects. Either the container operates on all subtypes of a class or interface, usually  Object , or a different container class has to be created for each contained class. Generics allow compile-time type checking without having to create a large number of container classes, each containing almost identical code. In addition to enabling more efficient code, certain runtime exceptions are converted to compile-time errors, a characteristic known as  type safety . \n  Criticism   [  edit  ]   \n Main article:  Criticism of Java  \n Criticisms directed at Java include the implementation of generics,   [ 34 ]    speed,   [ 35 ]      [ 36 ]    the handling of unsigned numbers,   [ 37 ]    the implementation of floating-point arithmetic,   [ 38 ]    and a history of security vulnerabilities in the primary Java VM implementation  HotSpot .   [ 39 ]      [ 40 ]    \n  Use by external companies   [  edit  ]   \n \n    \n \n     \n Android  makes extensive use of Java-related technology \n \n \n  Google   [  edit  ]   \n See also:  Oracle v. Google  \n  Google  and Android, Inc. have chosen to use Java as a key pillar in the creation of the  Android operating system , an  open-source   smartphone operating system . Although the Android operating system, built on the  Linux kernel , was written largely in C, the  Android SDK  uses the Java language as the basis for Android applications. However, Android uses Java only for its syntax, but not its class library. Instead of instantiating classes from the standard Java Class Library, Android provides its own class library which apps are expected to use. Android apps are compiled through Java bytecode as an intermediate step into Dalvik Executables targeting Android's own  Dalvik virtual machine . Some of the classes in the Dalvik class library resembled their Java counterparts, which became a major point of contention between Sun/Oracle and Google/Android. \n On May 7, 2012, a San Francisco jury found that if APIs could be copyrighted, then Google had infringed Oracle's copyrights by the use of Java in Android devices.   [ 41 ]    Oracle's stance in  this case  had raised questions about the legal status of the use of Java on Android. However, U.S. District Judge  William Haskell Alsup  ruled on May 31, 2012, that APIs cannot be copyrighted.   [ 42 ]    \n  Class libraries   [  edit  ]   \n \n \n \n     \n \n  This section  does not  cite  any  references or sources  .  Please help improve this section by  adding citations to reliable sources . Unsourced material may be challenged and  removed .    (May 2013)    \n \n \n \n The  Java Class Library  are the compiled  bytecodes  of  source code  developed by the JRE implementor to support application development in Java. Examples of these libraries are:\n \n The core libraries, which include:\n \n Many low level, GUI, Integration, Deployment and Tools  Java Platform Standard Edition 7 Documentation  \n  Collection libraries  that implement  data structures  such as  lists ,  dictionaries ,  trees ,  sets ,  queues  and  double-ended queue , or  stacks  \n  XML  Processing (Parsing, Transforming, Validating) libraries \n Security \n  Internationalization and localization  libraries \n \n \n The integration libraries, which allow the application writer to communicate with external systems. These libraries include:\n \n The  Java Database Connectivity  (JDBC)  API  for database access \n  Java Naming and Directory Interface  (JNDI) for lookup and discovery \n  RMI  and  CORBA  for distributed application development \n  JMX  for managing and monitoring applications \n \n \n  User interface  libraries, which include:\n \n The (heavyweight, or  native )  Abstract Window Toolkit  (AWT), which provides  GUI  components, the means for laying out those components and the means for handling events from those components \n The (lightweight)  Swing  libraries, which are built on AWT but provide (non-native) implementations of the AWT widgetry \n APIs for audio capture, processing, and playback \n \n \n \n \n A platform dependent implementation of the Java virtual machine that is the means by which the bytecodes of the Java libraries and third party applications are executed \n Plugins, which enable  applets  to be run in  Web browsers  \n  Java Web Start , which allows Java applications to be efficiently distributed to  end-users  across the  Internet  \n Licensing and documentation. \n \n  Documentation   [  edit  ]   \n Main article:  Javadoc  \n  Javadoc  is a comprehensive documentation system, created by  Sun Microsystems , used by many Java developers. It provides developers with an organized system for documenting their code.  Javadoc  comments have an extra asterisk at the beginning, i.e. the tags are /** and */, whereas the normal multi-line comments in Java are set off with the tags /* and */. \n  Editions   [  edit  ]   \n See also:  Free Java implementations#Class library  \n \n \n  Java  Editions \n \n \n     \n \n \n \n \n  Java Card  \n  Micro Edition  (ME) \n  Standard Edition  (SE) \n  Enterprise Edition  (EE) \n  JavaFX  \n  PersonalJava  (discontinued) \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n \n \n \n Sun has defined and supports four editions of Java targeting different application environments and segmented many of its  APIs  so that they belong to one of the platforms. The platforms are: \n \n  Java Card  for smartcards. \n  Java Platform, Micro Edition  (Java ME) \u2014 targeting environments with limited resources. \n  Java Platform, Standard Edition  (Java SE) \u2014 targeting workstation environments. \n  Java Platform, Enterprise Edition  (Java EE) \u2014 targeting large distributed enterprise or Internet environments. \n \n The  classes  in the Java APIs are organized into separate groups called  packages . Each package contains a set of related  interfaces , classes and  exceptions . Refer to the separate platforms for a description of the packages available. \n The set of APIs is controlled by  Sun Microsystems  in cooperation with others through the  Java Community Process  program. Companies or individuals participating in this process can influence the design and development of the APIs. This process has been a subject of controversy. \n Sun also provided an edition called  PersonalJava  that has been superseded by later, standards-based Java ME configuration-profile pairings. \n  See also   [  edit  ]   \n \n \n \n     \n  Java portal  \n \n \n     \n  Computer programming portal  \n \n \n \n \n \n   \n \n \n  Book: Programming for Students  \n \n \n \n \n \n  Dalvik  \n  JavaOne  \n  Javapedia  \n  List of Java virtual machines  \n  List of Java APIs  \n  List of JVM languages  \n  Graal , a project aiming to implement a high performance Java dynamic compiler and interpreter \n \n  Comparison of Java with other languages   [  edit  ]   \n \n  Comparison of programming languages  \n  Comparison of Java and C++  \n  Comparison of Java and C#  \n \n  Notes   [  edit  ]   \n \n \n  ^     a         b         \"The History of Java Technology\"  . Retrieved October 6, 2012 .   \u00a0    \n    ^     Java 5.0 added several new language features (the  enhanced for loop ,  autoboxing ,  varargs  and  annotations ), after they were introduced in the similar (and competing)  C#  language  [1]   [2]   \n    ^      Gosling, James; and McGilton, Henry (May 1996).  \"The Java Language Environment\" .   \u00a0    \n    ^      Gosling, James; Joy, Bill; Steele, Guy; and Bracha, Gilad.  \"The Java Language Specification, 2nd Edition\" .   \u00a0    \n    ^       \"The A-Z of Programming Languages: Modula-3\" . Computerworld.com.au . Retrieved 2010-06-09 .   \u00a0    \n    ^      Niklaus Wirth  stated on a number of public occasions, e.g. in a lecture at the Polytechnic Museum, Moscow in September, 2005 (several independent first-hand accounts in Russian exist, e.g. one with an audio recording:  Filippova, Elena (September 22, 2005).  \"Niklaus Wirth's lecture at the Polytechnic Museum in Moscow\" .   \u00a0  ), that the Sun Java design team licenced the Oberon compiler sources a number of years prior to the release of Java and examined it: a (relative) compactness, type safety, garbage collection, no multiple inheritance for classes -- all these key overall design features are shared by Java and Oberon.  \n    ^      Patrick Naughton  cites  Objective-C  as a strong influence on the design of the Java programming language, stating that notable direct derivatives include Java interfaces (derived from Objective-C's  protocol ) and primitive wrapper classes.  [3]   \n    ^      TechMetrix Research (1999).  \"History of Java\" .  Java Application Servers Report . \"The project went ahead under the name \"green\" and the language was based on an old model of  UCSD Pascal , which makes it possible to generate interpretive code\"   \u00a0    \n    ^       \"A Conversation with James Gosling \u2013 ACM Queue\" . Queue.acm.org. 2004-08-31 . Retrieved 2010-06-09 .   \u00a0    \n    ^       \"Programming Language Popularity\" . 2009 . Retrieved 2009-01-16 .   \u00a0    \n    ^       \"TIOBE Programming Community Index\" . 2009 . Retrieved 2009-05-06 .   \u00a0    \n    ^      Byous, Jon (c. 1998).  \"Java technology: The early years\" .  Sun Developer Network .  Sun Microsystems . Archived from  the original  on April 20, 2005 . Retrieved 2005-04-22 .   \u00a0    \n    ^     Object-oriented programming   \"The History of Java Technology\" .  Sun Developer Network . c. 1995 . Retrieved 2010-04-30 .   \u00a0    \n    ^     \" So why did they decide to call it Java? \", Kieron Murphy, JavaWorld.com, 10/04/96  \n    ^     Kabutz, Heinz;   Once Upon an Oak  . Artima. Retrieved April 29, 2007.  \n    ^      Java Study Group ;  Why Java Was \u2013 Not \u2013 Standardized Twice ;  What is ECMA\u2014and why Microsoft cares   \n    ^       \"Java Community Process website\" . Jcp.org. 2010-05-24 . Retrieved 2010-06-09 .   \u00a0    \n    ^       \"JAVAONE: Sun \u2013 The bulk of Java is open sourced\" . open.itworld.com . Retrieved 2010-06-09 .   \u00a0    [   dead link   ]    \n    ^       \"Sun\u2019s Evolving Role as Java Evangelist\" .  O'Reilly Media .   \u00a0    \n    ^       \"Oracle and Java\" .  oracle.com . Oracle Corporation . Retrieved 2010-08-23 . \"Oracle has been a leading and substantive supporter of Java since its emergence in 1995 and takes on the new role as steward of Java technology with a relentless commitment to fostering a community of participation and transparency.\"   \u00a0    \n    ^       \"Learn About Java Technology\" . Oracle . Retrieved 21 November 2011 .   \u00a0    \n    ^       Gosling, James  (April 9, 2010).  \"Time to move on...\" .  On a New Road  . Retrieved 2011-11-16 .   \u00a0    \n    ^       \"The Java Language Environment\" .  1.2 Design Goals of the Java\u2122 Programming Language . Oracle. 1999-01-01 . Retrieved 2013-01-14 .   \u00a0    \n    ^      Niccolai, James (January 23, 2001).  \"Sun, Microsoft settle Java lawsuit\" .  JavaWorld  ( IDG ) . Retrieved 2008-07-09 .   \u00a0    \n    ^      Jelovic, Dejan.  \"Why Java will always be slower than C++\"  . Retrieved 2008-02-15 .   \u00a0    \n    ^      Google.  \"Loop Recognition in C++/Java/Go/Scala\"  . Retrieved 2012-07-12 .   \u00a0    \n    ^       \"Symantec's Just-In-Time Java Compiler To Be Integrated Into Sun JDK 1.1\" .   \u00a0    \n    ^       \"NullPointerException\" . Java.sun.com . Retrieved 2010-06-09 .   \u00a0    \n    ^       \"Exceptions in Java\" . Artima.com . Retrieved 2010-08-10 .   \u00a0    \n    ^       \"Java HotSpot VM Options\" . Oracle.com. 2010-09-07 . Retrieved 2012-06-30 .   \u00a0    \n    ^       \"Lesson: A Closer Look at the \"Hello World!\" Application\" .  The Java\u2122 Tutorials &gt; Getting Started .  Oracle Corporation  . Retrieved 2011-04-14 .   \u00a0    \n    ^       \"Using applet, object and embed Tags\" . oracle.com . Retrieved 2010-10-14 .   \u00a0    \n    ^       \"Deploying Applets in a Mixed-Browser Environment\" . oracle.com . Retrieved 2010-10-14 .   \u00a0    \n    ^      Arnold, Ken.  \"Generics Considered Harmful\" . java.net . Retrieved 4 July 2011 .   \u00a0    \n    ^      Goetz, Brian (2005-09-27).  \"Java theory and practice: Urban performance legends, revisited\" . ibm.com . Retrieved 2012-11-26 .   \u00a0   \"The Java language is the target of a lot of abuse for performance.\"  \n    ^      Jelovic, Dejan.  \"Why Java Will Always Be Slower than C++\" . www.jelovic.com . Retrieved 17 October 2012 .   \u00a0    \n    ^      Owens, Sean R.  \"Java and unsigned int, unsigned short, unsigned byte, unsigned long, etc. (Or rather, the lack thereof)\" . Archived from  the original  on 2004-11-09 . Retrieved 2011-07-04 .   \u00a0    \n    ^      Kahan, William.  \"How Java\u2019s Floating-Point Hurts Everyone Everywhere\" . Electrical Engineering &amp; Computer Science, University of California at Berkeley . Retrieved 4 June 2011 .   \u00a0    \n    ^       \"Have you checked the Java?\" .   \u00a0    \n    ^      Marquit, Miranda (2013-09-26).  \"JavaOne: #1 Programming Language Ready for Revolution\" . insidetechtalk.com . Retrieved 2013-10-08 .   \u00a0   \"JavaOne 2013 featured a technical keynote that described some of the features of the next incarnation of Java.  \n    ^      Mullin, Joe.  \"Google guilty of infringement in Oracle trial; future legal headaches loom\" .  Law &amp; Disorder . Ars Technica . Retrieved 8 May 2012 .   \u00a0    \n    ^      Joe Mullin (May 31, 2012).  \"Google wins crucial API ruling, Oracle\u2019s case decimated\" .  Ars Technica  . Retrieved 2012-06-01 .   \u00a0    \n \n \n  References   [  edit  ]   \n \n \n  Gosling, James ,   A brief history of the Green project  .  [   dead link   ]   Java.net, no date [ca. Q1/1998]. Retrieved April 29, 2007. \n  Gosling, James ,   A brief history of the Green project  .  [   dead link   ]   anonymous-insider.net, no date [ca. Q1/1998]. Retrieved September 4, 2013. \n  Gosling, James;  Joy, Bill ;  Steele, Guy L., Jr. ;  Bracha, Gilad  (2005).   The Java Language Specification   (3rd ed.). Addison-Wesley.  ISBN \u00a0 0-321-24678-0 .   \u00a0   \n  Lindholm, Tim; Yellin, Frank (1999).   The Java Virtual Machine Specification   (2nd ed.). Addison-Wesley.  ISBN \u00a0 0-201-43294-3 .   \u00a0   \n \n \n  External links   [  edit  ]   \n \n \n Find more about  Java (programming language)  at Wikipedia's  sister projects  \n \n \n     \n  Definitions and translations  from Wiktionary \n \n \n     \n  Media  from Commons \n \n \n     \n  Quotations  from Wikiquote \n \n \n     \n  Textbooks  from Wikibooks \n \n \n     \n  Learning resources  from Wikiversity \n \n \n \n \n   \n Wikiversity has learning materials about    Java Platform, Enterprise Edition/Java EE Tutorial    \n \n \n \n  java.com  - Java for end-users \n Oracle's  Developer Resources for Java Technology  \n  Java SE 7 API Javadocs  \n Oracle's  Beginner's tutorial for Java SE Programming  \n  A Brief History of the Green Project  (dead link) \n Michael O'Connell:  Java: The Inside Story , SunWord (1995) \n  One of the developers' blog  \n Patrick Naughton:  Java Was Strongly Influenced by Objective-C  \n David Bank:  The Java Saga ,  Wired  Issue 3.12 (1995) \n Patrick Naughton:  The Long Strange Trip to Java  (1996) \n Open University (UK):  M254 Java Everywhere  (free open content documents) \n is-research GmbH:  List of programming languages for a Java Virtual Machine  \n  How Java's Floating-Point Hurts Everyone Everywhere , by W. Kahan and Joseph D. Darcy, University of California, Berkeley \n Shahrooz Feizabadi:  A history of Java  in: Marc Abrams, ed.,  World Wide Web\u00a0\u2013 Beyond the Basics , Prentice Hall (1998) \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Java  \n \n \n \n  \n \n \n Java platforms \n \n \n \n  Java language  \n  JVM  \n  Micro Edition  \n  Standard Edition  \n  Enterprise Edition  \n  Java Card  \n  Android SDK  \n \n \n \n \n     \n \n \n \n  \n \n \n Sun technologies \n \n \n \n  Squawk  \n  Java Development Kit  \n  OpenJDK  \n  Java virtual machine  \n  JavaFX  \n  Maxine VM  \n \n \n \n \n \n  \n \n \n Platform technologies \n \n \n \n  Applets  \n  Servlets  \n  MIDlets  \n  JSP  \n  Web Start (JNLP)  \n \n \n \n \n \n  \n \n \n Major third-party technologies \n \n \n \n  JRockit  \n  GNU Classpath  \n  Kaffe  \n  TopLink  \n  Apache Harmony  \n  Apache Struts  \n  Spring framework  \n  Hibernate  \n  JBoss application server  \n  Tapestry  \n  Jazelle  \n \n \n \n \n \n  \n \n \n History \n \n \n \n  Java version history  \n  Java Community Process  \n  Sun Microsystems  \n  Free Java implementations  \n \n \n \n \n \n  \n \n \n Major programming languages \n \n \n \n  BeanShell  \n  Clojure  \n  Groovy  \n  Oxygene  \n  Java Tcl  \n  JRuby  \n  Jython  \n  Processing  \n  Rhino  \n  Scala  \n  more\u2026  \n \n \n \n \n \n  \n \n \n Java conferences \n \n \n \n  JavaOne  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Sun Microsystems   (acquired by  Oracle Corporation , 2010)  \n \n \n \n  \n \n \n Hardware \n \n \n \n  Sun-1  \n  Sun-2  \n  Sun-3  \n  Sun386i  \n  Sun-4  \n  SPARCstation  \n  Netra  \n  Ultra  \n  Enterprise  \n  Sun Blade  \n  Sun Fire  \n  SPARC Enterprise  \n  SPARC  \n  JavaStation  \n  Sun Ray  \n  Sun Modular Datacenter  \n   more...   \n \n \n \n \n \n  \n \n \n Software \n \n \n \n  SunOS  \n  Solaris  \n  NIS  ( + ) \n  NFS  \n  ZFS  \n  SunView  \n  NeWS  \n  OpenWindows  \n  Java Desktop System  \n  Sun Studio  \n  Java  \n  StarOffice  \n  iPlanet / Sun ONE / Java Enterprise System  \n  Sun Secure Global Desktop  \n  MySQL  \n  Sun xVM  \n  GlassFish  \n   more...   \n \n \n \n \n \n  \n \n \n Storage \n \n \n \n  StorageTek  \n  Sun Open Storage  \n  QFS  \n  ZFS  \n \n \n \n \n \n  \n \n \n High-performance computing \n \n \n \n  Sun Cloud  \n  Sun Constellation System  \n  Sun Visualization System  \n  Sun Grid Engine  \n  Lustre  \n \n \n \n \n \n  \n \n \n Research \n \n \n \n  Sun Labs  \n  picoJava  \n  Fortress  \n  Project Looking Glass  \n \n \n \n \n \n  \n \n \n Education and recognition \n \n \n \n  SCPs  \n  List of notable employees  \n             "}, {"title": "Java (software platform)", "rank": 0.3408800884096871, "url": "http://en.wikipedia.org/wiki/Java_(software_platform)", "links": ["http://en.wikipedia.org/wiki/JavaScript", "http://en.wikipedia.org/wiki/Software_design", "http://en.wikipedia.org/wiki/James_Gosling", "http://en.wikipedia.org/wiki/Sun_Microsystems", "http://en.wikipedia.org/wiki/Software_developer", "http://en.wikipedia.org/wiki/Oracle_Corporation", "http://en.wikipedia.org/wiki/Software_release_life_cycle", "http://en.wikipedia.org/wiki/Software_release_life_cycle", "http://en.wikipedia.org/wiki/Java_(programming_language)", "http://en.wikipedia.org/wiki/C%2B%2B"], "body": "  Not to be confused with  JavaScript . \n \n Java (software platform) \n \n     \n \n \n  Original author(s)  \n  James Gosling ,  Sun Microsystems  \n \n \n  Developer(s)  \n  Oracle Corporation  \n \n \n  Stable release  \n 7 Update 51 (1.7.0_51)  (January\u00a014, 2014 ; 5 days ago  \u00a0( 2014-01-14 ) )    [\u00b1]     [ 1 ]      [ 2 ]      [ 3 ]    \n \n \n  Preview release  \n 8 Build 123  (January\u00a014, 2014 ; 5 days ago  \u00a0( 2014-01-14 ) )    [\u00b1]     [ 4 ]    \n \n \n Written in \n  Java ,  C++  [   citation needed   ]  \n \n \n  Operating system  \n  Windows ,  Solaris ,  Linux ,  OS X    [ 5 ]    \n \n \n  Platform  \n  IA-32 ,  x86-64 ,  SPARC ,  ARM    [ 5 ]    \n \n \n  Type  \n  Software platform  \n \n \n  License  \n  Freeware , mostly  open-source ,   [ 6 ]    with a few  proprietary    [ 7 ]    components   [ 8 ]    \n \n \n Website \n   www.java.com   \n \n \n  Java  is a set of several  computer software  products and specifications from  Sun Microsystems  (which has since merged with  Oracle Corporation ), that together provide a system for developing  application software  and deploying it in a  cross-platform  computing environment. Java is used in a wide variety of  computing platforms  from  embedded devices  and  mobile phones  on the low end, to  enterprise servers  and  supercomputers  on the high end. While less common,  Java applets  are sometimes used to provide improved and secure functions while browsing the  World Wide Web  on  desktop computers . \n Writing in the  Java programming language  is the primary way to produce code that will be deployed as  Java bytecode . There are, however, bytecode  compilers  available for other languages such as  Ada ,  JavaScript ,  Python , and  Ruby . Several new languages have been designed to run natively on the  Java Virtual Machine  (JVM), such as  Scala ,  Clojure  and  Groovy .  Java syntax  borrows heavily from  C  and  C++ , but object-oriented features are modeled after  Smalltalk  and  Objective-C .   [ 9 ]    Java eliminates certain low-level constructs such as  pointers  and has a very simple memory model where every object is  allocated on the heap  and all variables of object types are  references . Memory management is handled through integrated automatic  garbage collection  performed by the JVM. \n On November 13, 2006, Sun Microsystems made the bulk of its implementation of Java available under the  GNU General Public License  (GPL).   [ 10 ]      [ 11 ]    \n  \n \n \n Contents \n \n \n   1   Platform  \n \n   1.1   Java Virtual Machine   \n   1.2   Class libraries   \n   1.3   Languages   \n   1.4   Similar platforms   \n   1.5   Java Development Kit   \n \n \n   2   History  \n \n   2.1   Java meets the Web   \n   2.2   Version history   \n \n \n   3   Usage  \n \n   3.1   Desktop use   \n   3.2   Mobile devices   \n   3.3   Web server and enterprise use   \n \n \n   4   Mascot   \n   5   Licensing  \n \n   5.1   Free software   \n \n \n   6   Criticism  \n \n   6.1   Generics   \n   6.2   Unsigned integer types   \n   6.3   Floating point arithmetic   \n   6.4   Performance   \n   6.5   Security   \n \n \n   7   See also   \n   8   References   \n   9   External links   \n \n \n  \n  Platform   [  edit  ]   \n An edition of the  Java platform  is the name for a bundle of related programs from Sun that allow for developing and running programs written in the  Java  programming language. The platform is not specific to any one processor or  operating system , but rather an execution engine (called a  virtual machine ) and a compiler with a set of libraries that are implemented for various hardware and operating systems so that Java programs can run identically on all of them. \n \n  Java Card : A technology that allows small Java-based applications ( applets ) to be run securely on  smart cards  and similar small-memory devices. \n  Java ME  (Micro Edition): Specifies several different sets of libraries (known as profiles) for devices with limited storage, display, and power capacities. Often used to develop applications for mobile devices, PDAs, TV  set-top boxes , and printers. \n  Java SE  (Standard Edition): For general-purpose use on desktop PCs, servers and similar devices. \n  Java EE  (Enterprise Edition): Java SE plus various APIs useful for  multi-tier   client\u2013server   enterprise applications . \n \n The Java platform consists of several programs, each of which provides a portion of its overall capabilities. For example, the Java compiler, which converts Java source code into Java bytecode (an intermediate language for the JVM), is provided as part of the  Java Development Kit  (JDK). The  Java Runtime Environment  (JRE), complementing the JVM with a  just-in-time (JIT) compiler , converts intermediate bytecode into native machine code on the fly. An extensive set of libraries are also part of the Java platform. \n The essential components in the platform are the Java language compiler, the libraries, and the runtime environment in which Java intermediate bytecode \"executes\" according to the rules laid out in the virtual machine specification. \n  Java Virtual Machine   [  edit  ]   \n Main article:  Java Virtual Machine  \n The heart of the Java platform is the concept of a \"virtual machine\" that executes  Java bytecode  programs. This bytecode is the same no matter what hardware or operating system the program is running under. There is a JIT (Just In Time) compiler within the  Java Virtual Machine , or JVM. The JIT compiler translates the Java bytecode into native processor instructions at run-time and caches the native code in memory during execution. \n The use of bytecode as an intermediate language permits Java programs to run on any platform that has a virtual machine available. The use of a JIT compiler means that Java applications, after a short delay during loading and once they have \"warmed up\" by being all or mostly JIT-compiled, tend to run about as fast as native programs. [   citation needed   ]  Since JRE version 1.2, Sun's JVM implementation has included a  just-in-time compiler  instead of an interpreter. \n Although Java programs are  cross-platform  or platform independent, the code of the Java Virtual Machines (JVM) that execute these programs is not. Every supported operating platform has its own JVM. \n  Class libraries   [  edit  ]   \n Main article:  Java Class Library  \n In most modern  operating systems  (OSs), a large body of reusable code is provided to simplify the programmer's job. This code is typically provided as a set of  dynamically loadable libraries  that applications can call at runtime. Because the Java platform is not dependent on any specific operating system, applications cannot rely on any of the pre-existing OS libraries. Instead, the Java platform provides a comprehensive set of its own standard class libraries containing much of the same reusable functions commonly found in modern operating systems. Most of the system library is also written in Java. For instance,  Swing  library paints the user interface and handles the events itself, eliminating many subtle differences between how different platforms handle even similar components. \n The Java class libraries serve three purposes within the Java platform. First, like other standard code libraries, the Java libraries provide the programmer a well-known set of functions to perform common tasks, such as maintaining lists of items or performing complex string parsing. Second, the class libraries provide an abstract interface to tasks that would normally depend heavily on the hardware and operating system. Tasks such as network access and file access are often heavily intertwined with the distinctive implementations of each platform. The  java.net  and  java.io  libraries implement an abstraction layer in native OS code, then provide a standard interface for the Java applications to perform those tasks. Finally, when some underlying platform does not support all of the features a Java application expects, the class libraries work to gracefully handle the absent components, either by emulation to provide a substitute, or at least by providing a consistent way to check for the presence of a specific feature. \n  Languages   [  edit  ]   \n See also:  List of JVM languages \u00a0and  JVM programming languages  \n The word \"Java\", alone, usually refers to the Java programming language that was designed for use with the Java platform. Programming languages are typically outside of the scope of the phrase \"platform\", although the Java programming language was listed as a core part of the Java platform before Java 7. The language and runtime were therefore commonly considered a single unit. However, an effort was made with the Java 7 specification to more clearly treat the Java language and the Java virtual machine as separate entities, so that they are no longer considered a single unit.   [ 12 ]    \n Third parties have produced many  compilers  or  interpreters  that target the JVM. Some of these are for existing languages, while others are for extensions to the Java language. These include: \n \n  BeanShell  - A lightweight scripting language for Java.   [ 13 ]    \n  Clojure  - A dialect of the Lisp programming language. \n  Groovy , a dynamic language with features similar to those of Python, Ruby, Perl, and Smalltalk. \n  JRuby  - A  Ruby  interpreter. \n  Jython  - A  Python  interpreter. \n  Rhino  - A  JavaScript  interpreter. \n  Scala  - A multi-paradigm programming language designed as a \"better Java\". \n  Gosu  - A general-purpose Java Virtual Machine-based programming language released under the Apache License 2.0. \n \n  Similar platforms   [  edit  ]   \n See also:  Comparison of the Java and .NET platforms \u00a0and  Comparison of C# and Java  \n The success of Java and its  write once, run anywhere  concept has led to other similar efforts, notably the  .NET Framework , appearing since 2002, which incorporates many of the successful aspects of Java. .NET in its complete form (Microsoft's implementation) is currently only fully available on Windows platforms, whereas Java is fully available on many platforms. .NET was built from the ground-up to support multiple programming languages, while the Java platform was initially built to support only the Java language, although many other languages have been made for JVM since. \n .NET includes a Java-like language called  Visual J#  (formerly named  J++ ) that is incompatible with the Java specification, and the associated class library mostly dates to the old JDK 1.1 version of the language. For these reasons, it is more a transitional language to switch from Java to the .NET platform, than a first class .NET language. Visual J# was discontinued with the release of Microsoft Visual Studio 2008. The existing version shipping with  Visual Studio 2005  will be supported until 2015 as per the product life-cycle strategy. \n  Java Development Kit   [  edit  ]   \n Main article:  Java Development Kit  \n The  Java Development Kit  ( JDK ) is a  Sun  product aimed at Java developers. Since the introduction of Java, it has been by far the most widely used Java  software development kit  (SDK). [   citation needed   ]  It contains a Java compiler, a full copy of the  Java Runtime Environment  (JRE), and many other important development tools. \n  History   [  edit  ]   \n The Java platform and language began as an internal project at  Sun Microsystems  in December 1990, providing an alternative to the C++/ C  programming languages. Engineer  Patrick Naughton  had become increasingly frustrated with the state of Sun's C++ and C  application programming interfaces  (APIs) and tools. While considering moving to  NeXT , Naughton was offered a chance to work on new technology and thus the  Stealth Project  was started. \n The Stealth Project was soon renamed to the  Green Project  with  James Gosling  and Mike Sheridan joining Naughton. Together with other engineers, they began work in a small office on  Sand Hill Road  in  Menlo Park, California . They were attempting to develop a new technology for programming next generation smart appliances, which Sun expected to be a major new opportunity.   [ 14 ]    \n The team originally considered using C++, but it was rejected for several reasons. Because they were developing an  embedded system  with limited resources, they decided that C++ needed too much memory and that its complexity led to developer errors. The language's lack of  garbage collection  meant that programmers had to manually manage system memory, a challenging and error-prone task. The team was also troubled by the language's lack of portable facilities for security,  distributed programming , and  threading . Finally, they wanted a platform that could be easily ported to all types of devices. \n  Bill Joy  had envisioned a new language combining  Mesa  and C. In a paper called  Further , he proposed to Sun that its engineers should produce an  object-oriented  environment based on C++. Initially, Gosling attempted to modify and extend C++ (that he referred to as \"C++ ++ --\") but soon abandoned that in favor of creating a new language, which he called   Oak  , after the tree that stood just outside his office. \n By the summer of 1992, they were able to demonstrate portions of the new platform including the Green  OS , the Oak language, the libraries, and the hardware. Their first attempt, demonstrated on September 3, 1992, focused on building a  personal digital assistant  (PDA) device named   Star7    [1]   that had a graphical interface and a smart agent called \"Duke\" to assist the user. In November of that year, the Green Project was spun off to become  firstperson , a wholly owned subsidiary of Sun Microsystems, and the team relocated to  Palo Alto, California .   [ 15 ]    The firstperson team was interested in building highly interactive devices, and when  Time Warner  issued a  request for proposal  (RFP) for a  set-top box , firstperson changed their target and responded with a proposal for a set-top box platform. However, the  cable  industry felt that their platform gave too much control to the user and firstperson lost their bid to  SGI . An additional deal with  The 3DO Company  for a set-top box also failed to materialize. Unable to generate interest within the TV industry, the company was rolled back into Sun. \n  Java meets the Web   [  edit  ]   \n \n    \n \n     \n Java Web Start  allows provisioning applications over the  Web  \n \n \n In June and July 1994, after three days of brainstorming with  John Gage , the Director of Science for Sun, Gosling, Joy, Naughton,  Wayne Rosing , and  Eric Schmidt , the team re-targeted the platform for the  World Wide Web . They felt that with the advent of graphical  web browsers  like  Mosaic , the Internet was on its way to evolving into the same highly interactive medium that they had envisioned for cable TV. As a prototype, Naughton wrote a small browser, WebRunner (named after the movie  Blade Runner ), later renamed  HotJava .   [ 14 ]    \n That year, the language was renamed  Java  after a  trademark  search revealed that  Oak  was used by  Oak Technology .   [ 16 ]    Although Java 1.0a was available for download in 1994, the first public release of Java was 1.0a2 with the HotJava browser on May 23, 1995, announced by Gage at the  SunWorld  conference. His announcement was accompanied by a surprise announcement by  Marc Andreessen , Executive Vice President of  Netscape Communications Corporation , that Netscape browsers would be including Java support. On January 9, 1996, the JavaSoft group was formed by Sun Microsystems to develop the technology.   [ 17 ]    \n  Version history   [  edit  ]   \n Main article:  Java version history  \n The Java language has undergone several changes since JDK ( Java Development Kit ) 1.0 was released on (January 23, 1996), as well as numerous additions of classes and packages to the standard  library . Since J2SE 1.4, the evolution of the Java Language has been governed by the  Java Community Process  (JCP), which uses  Java Specification Requests  (JSRs) to propose and specify additions and changes to the Java platform. The language is specified by the  Java Language Specification  (JLS); changes to the JLS are managed under JSR 901.   [ 18 ]    \n  JDK 1.1  was released on February 19, 1997. Major additions included an extensive retooling of the  AWT  event model,  inner classes  added to the language,  JavaBeans  and  JDBC . \n  J2SE 1.2  (December 8, 1998) \u2014 Codename  Playground . This and subsequent releases through J2SE 5.0 were rebranded  Java 2  and the version name \"J2SE\" ( Java 2 Platform, Standard Edition ) replaced JDK to distinguish the base platform from J2EE ( Java 2 Platform, Enterprise Edition ) and J2ME ( Java 2 Platform, Micro Edition ). Major additions included  reflection , a  collections  framework,  Java IDL  (an  interface description language  implementation for  CORBA  interoperability), and the integration of the  Swing  graphical API into the core classes. A  Java Plug-in  was released, and Sun's JVM was equipped with a  JIT compiler  for the first time. \n  J2SE 1.3  (May 8, 2000) \u2014 Codename  Kestrel . Notable changes included the bundling of the  HotSpot  JVM (the HotSpot JVM was first released in April, 1999 for the J2SE 1.2 JVM),  JavaSound ,  Java Naming and Directory Interface  (JNDI) and  Java Platform Debugger Architecture  (JPDA). \n  J2SE 1.4  (February 6, 2002) \u2014 Codename  Merlin . This was the first release of the Java platform developed under the Java Community Process as JSR 59.   [ 19 ]    Major changes included  regular expressions  modeled after  Perl ,  exception chaining , an integrated  XML  parser and  XSLT  processor ( JAXP ), and  Java Web Start . \n  J2SE 5.0  (September 30, 2004) \u2014 Codename  Tiger . Originally numbered 1.5, which is still used as the internal version number.   [ 20 ]    Developed under JSR 176, Tiger added several significant new language features including the  for-each loop ,  generics ,  autoboxing  and  var-args .   [ 21 ]    \n  Java SE 6  (December 11, 2006) \u2014 Codename  Mustang . Bundled with a database manager and facilitates the use of scripting languages with the JVM (such as  JavaScript  using  Mozilla 's  Rhino  engine). As of this version, Sun replaced the name \"J2SE\" with  Java SE  and dropped the \".0\" from the version number.   [ 22 ]    Other major changes include support for pluggable  annotations  ( JSR 269 ), many  GUI  improvements, including native UI enhancements to support the look and feel of  Windows Vista , and improvements to the  Java Platform Debugger Architecture  (JPDA) &amp; JVM Tool Interface for better monitoring and troubleshooting. \n The current version,  Java SE 7  (July 28, 2011) \u2014 Codename  Dolphin . This version was developed under  JSR 336 . It added many small language changes including strings in switch, try-with-resources and  type inference  for generic instance creation. The JVM was extended with support for dynamic languages, while the class library was extended among others with a join/fork framework,   [ 23 ]    an improved new file I/O library and support for new network protocols such as  SCTP . Java 7 Update 45 was released to the public on October 15, 2013.   [ 24 ]    \n In addition to the language changes, much more dramatic changes have been made to the Java class library over the years, which has grown from a few hundred classes in JDK 1.0 to over three thousand in J2SE 5.0. Entire new APIs, such as  Swing  and  Java 2D , have been introduced, and many of the original JDK 1.0 classes and methods have been  deprecated . \n  Usage   [  edit  ]   \n  Desktop use   [  edit  ]   \n According to Oracle, the Java Runtime Environment is found on over 850 million PCs.   [ 25 ]     Microsoft  has not bundled a  Java Runtime Environment  (JRE) with its  operating systems  since Sun Microsystems sued Microsoft for adding Windows-specific classes to the bundled Java runtime environment, and for making the new classes available through  Visual J++ . [   citation needed   ]  A Java runtime environment is bundled with Apple's  Mac OS X  (although as of the Java for Mac OS X 10.6 Update 3 release, the Apple-supplied runtime is deprecated and may be removed from future OS releases),   [ 26 ]    and many  Linux distributions  include the partially compatible  free software  package  GNU Classpath    [ 27 ]    and increasingly mostly compatible  IcedTea . \n Some Java applications are in fairly widespread desktop use, including the  NetBeans  and  Eclipse   integrated development environments , and file sharing clients such as  LimeWire  and  Vuze . Java is also used in the  MATLAB  mathematics programming environment, both for rendering the  user interface  and as part of the core system. Java provides cross platform user interface for some high end collaborative applications like  Lotus Notes . \n  Mobile devices   [  edit  ]   \n Java ME has become popular in mobile devices, where it competes with  Symbian ,  BREW , and the  .NET Compact Framework . \n The diversity of mobile phone manufacturers has led to a need for new unified standards so programs can run on phones from different suppliers -  MIDP . The first standard was MIDP 1, which assumed a small screen size, no access to audio, and a 32kB program limit. The more recent MIDP 2 allows access to audio, and up to 64kB for the program size. With handset designs improving more rapidly than the standards, some manufacturers relax some limitations in the standards, for example, maximum program size. \n Google's  Android  operating system uses the Java language, but not its class libraries, therefore the Android platform cannot be called Java. Android executes the code on the  Dalvik VM  instead of the Java VM. \n  Web server and enterprise use   [  edit  ]   \n The Java platform has become a mainstay of enterprise IT development since the introduction of the Enterprise Edition in 1998, in two different ways: \n \n Through the coupling of Java to the web server, the Java platform has become a leading platform for integrating the Web with enterprise backend systems. This has allowed companies to move part or all of their business to the Internet environment by way of highly interactive online environments (such as highly dynamic websites) that allow the customer direct access to the business processes (e.g. online banking websites, airline booking systems and so on). This trend has continued from its initial Web-based start:\n \n The Java platform has matured into an Enterprise Integration role in which legacy systems are unlocked to the outside world through bridges built on the Java platform. This trend has been supported for Java platform support for  EAI  standards like messaging and  Web services  and has fueled the inclusion of the Java platform as a development basis in such standards as  SCA ,  XAM  and others. \n Java has become the standard development platform for many companies' IT departments, which do most or all of their corporate development in Java. This type of development is usually related to company-specific tooling (e.g. a booking tool for an airline) and the choice for the Java platform is often driven by a desire to leverage the existing Java infrastructure to build highly intelligent and interconnected tools. \n \n \n The Java platform has become the main development platform for many software tools and platforms that are produced by third-party software groups (commercial, open source and hybrid) and are used as configurable (rather than programmable) tools by companies. Examples in this category include Web servers, application servers, databases, enterprise service buses,  business process management  (BPM) tools and  content management systems . \n \n Enterprise use of Java has also long been the main driver of open source interest in the platform. This interest has inspired open source communities to produce a large amount of software, including simple function libraries, development frameworks (e.g. the  Spring Framework ,  Apache Wicket ,  Dojo Toolkit ,  Hibernate ), and open source implementations of standards and tools (e.g.  Apache Tomcat , the  GlassFish application server , the  Mule  and  Apache ServiceMix   Enterprise service buses ). \n  Mascot   [  edit  ]   \n \n    \n \n     \nPlain ol' Duke \n \n \n Duke is Java's  mascot .   [ 28 ]    \n When Sun announced that  Java SE  and  Java ME  would be released under a  free software license  (the  GNU General Public License ), they released the Duke graphics under the free  BSD license  at the same time.   [ 29 ]    A new Duke personality is created every year.   [ 30 ]    For example, in July 2011 \"Future Tech Duke\" included a bigger nose, a jetpack, and blue wings.   [ 31 ]    \n  Licensing   [  edit  ]   \n The source code for Sun's implementations of Java (that is the de facto reference implementation) has been available for some time, but until recently the license terms severely restricted what could be done with it without signing (and generally paying for) a contract with Sun. As such these terms did not satisfy the requirements of either the  Open Source Initiative  or the  Free Software Foundation  to be considered open source or free software, Sun Java was therefore a proprietary platform.   [ 32 ]    \n While several third-party projects (e.g.  GNU Classpath  and  Apache Harmony ) created  free software  partial Java implementations, the large size of the Sun libraries combined with the use of  clean room methods  meant that their implementations of the Java libraries (the compiler and VM are comparatively small and well defined) were incomplete and not fully compatible. These implementations also tended to be far less optimized than Sun's. [   citation needed   ]  \n  Free software   [  edit  ]   \n See also:  OpenJDK  \n  Sun  announced in  JavaOne  2006 that Java would become  free  and  open source software ,   [ 33 ]    and on October 25, 2006, at the  Oracle OpenWorld  conference,  Jonathan I. Schwartz  said that the company was set to announce the release of the core  Java Platform  as free and open source software within 30 to 60 days.   [ 34 ]    \n Sun released the Java HotSpot virtual machine and compiler as free software under the  GNU General Public License  on November 13, 2006, with a promise that the rest of the JDK (that includes the JRE) would be placed under the GPL by March 2007 (\"except for a few components that Sun does not have the right to publish in source form under the GPL\").   [ 35 ]    According to  Richard Stallman , this would mean an end to the \"Java trap\".   [ 36 ]     Mark Shuttleworth  called the initial press announcement, \"A real milestone for the  free software  community\".   [ 37 ]    \n Sun released the  source code  of the  Class library  under  GPL  on May 8, 2007, except some limited parts that were licensed by Sun from 3rd parties who did not want their code to be released under a free software and open-source license.   [ 38 ]    Some of the encumbered parts turned out to be fairly key parts of the platform such as font rendering and 2D rasterising, but these were released as open-source later by Sun (see  OpenJDK Class library ). \n Sun's goal is to replace the parts that remain proprietary and closed-source with alternative implementations and make the class library completely free and open source. A third party project called  IcedTea  has created a completely free and highly usable JDK by replacing encumbered code with either stubs or code from  GNU Classpath .  IcedTea  is currently available on  Fedora 7  and  Ubuntu . \n In June 2008, it was announced that  IcedTea 6 (as the packaged version of OpenJDK on  Fedora 9 ) has passed the  Technology Compatibility Kit  tests and can claim to be a fully compatible Java 6 implementation.   [ 39 ]    \n  Criticism   [  edit  ]   \n Main article:  Criticism of Java  \n  Generics   [  edit  ]   \n Further information:  Generics in Java  \n When  generics  were added to Java 5.0, there was already a large framework of classes (many of which were already  deprecated ), so generics were chosen to be implemented using  erasure  to allow for  migration compatibility  and re-use of these existing classes. This limited the features that could be provided by this addition as compared to some other languages.   [ 40 ]      [ 41 ]    \n  Unsigned integer types   [  edit  ]   \n Java lacks native  unsigned integer  types. Unsigned data are often generated from programs written in  C  and the lack of these types prevents direct data interchange between C and Java. Unsigned large numbers are also used in many numeric processing fields, including cryptography, which can make Java less convenient to use for these tasks.   [ 42 ]    Although it is possible to partially circumvent this problem with conversion code and using larger data types, it makes using Java cumbersome for handling the unsigned data. While a 32-bit signed integer may be used to hold a 16-bit unsigned value with relative ease, a 32-bit unsigned value would require a 64-bit signed integer. Additionally, a 64-bit unsigned value cannot be stored using any integer type in Java because no type larger than 64 bits exists in the Java language. If abstracted using functions, function calls become necessary for many operations which are native to some other languages. Alternatively, it is possible to use Java's signed integers to emulate unsigned integers of the same size, but this requires detailed knowledge of complex bitwise operations.   [ 43 ]    \n  Floating point arithmetic   [  edit  ]   \n While Java's floating point arithmetic is largely based on  IEEE 754  ( Standard for Binary Floating-Point Arithmetic ), certain features are not supported even when using the   strictfp   modifier, such as Exception Flags and Directed Roundings \u2014 capabilities mandated by IEEE Standard 754. Additionally, the extended precision floating-point types permitted in 754 and present in many processors are not permitted in Java.   [ 44 ]      [ 45 ]    \n  Performance   [  edit  ]   \n Further information:  Java performance  \n In the early days of Java (before the  HotSpot VM  was implemented in Java 1.3 in 2000) there were some criticisms of performance. Java has been demonstrated to run at speeds close to that of native code. However, benchmarks typically report Java as being about two times slower than C (a language which compiles to native code).   [ 46 ]      [ 47 ]      [ 48 ]    \n  Java's performance  has improved substantially since the early versions.   [ 49 ]    Performance of  JIT compilers  relative to native compilers has in some optimized tests been shown to be quite similar.   [ 49 ]      [ 50 ]      [ 51 ]    \n  Java bytecode  can either be interpreted at run time by a virtual machine, or it can be compiled at load time or runtime into native code which runs directly on the computer's hardware. Interpretation is slower than native execution, and compilation at load time or runtime has an initial performance penalty for the compilation. Modern performance JVM implementations all use the compilation approach, so after the initial startup time the performance is equivalent to native code. \n  Security   [  edit  ]   \n Further information:  Java security  \n The Java platform provides a security architecture   [ 52 ]    which is designed to allow the user to run untrusted bytecode in a \"sandboxed\" manner to protect against malicious or poorly written software. This \"sandboxing\" feature is intended to protect the user by restricting access to certain platform features and APIs which could be exploited by  malware , such as accessing the local filesystem, running arbitrary commands, or accessing communication networks. \n In recent years, researchers have discovered numerous security flaws in some widely used Java implementations, including Oracle's, which allow untrusted code to bypass the sandboxing mechanism, exposing users to malicious attacks. These flaws affect only Java applications which execute arbitrary untrusted bytecode, such as web browser plugins that run Java applets downloaded from public websites. Applications where the user trusts, and has full control over all code that is being executed are unaffected. \n On August 31, 2012, Java 6 and 7 on Microsoft Windows, Mac OS X, and Linux were found to have a serious security flaw that allowed an  remote exploit  to take place by simply loading a malicious web page.   [ 53 ]     Java 5  was later found to be flawed as well.   [ 54 ]    \n On January 10, 2013, three computer specialists spoke out against Java, telling  Reuters  that it was not secure and that people should disable Java. Jaime Blasco, Labs Manager with AlienVault Labs stated that \"Java is a mess. It\u2019s not secure. You have to disable it.\"   [ 55 ]    This vulnerability affects  Java 7  and it is unclear if it affects  Java 6 , so it is suggested that consumers disable it.   [ 56 ]      [ 57 ]    Security alerts from Oracle announce schedules of critical security-related patches to Java.   [ 58 ]    \n On January 14, 2013, security experts said that the update still failed to protect PCs from attack.   [ 59 ]    This exploit hole prompted a response from the  United States Department of Homeland Security  encouraging users to disable or uninstall Java.   [ 60 ]    Apple blacklisted Java in limited order for all computers running its  Mac OS X  operating system through a virus protection program.   [ 61 ]    \n  See also   [  edit  ]   \n \n \n \n     \n  Java portal  \n \n \n \n \n  Java version history  \n  Common Intermediate Language  \n  Comparison of the Java and .NET platforms  \n  Criticism of Java  \n  List of Java APIs  \n  Java Logging Frameworks  \n  Java performance  \n  JavaFX  \n  Jazelle  \n \n  References   [  edit  ]   \n \n \n    ^       \"Java SE Downloads - Latest Release\" .   \u00a0    \n    ^       \"Java Platform, Names and Versions\" .   \u00a0    \n    ^       \"The Java Source Weblog - Announces\" .   \u00a0    \n    ^       \"Java Platform, Early Access Releases\" .   \u00a0    \n  ^     a         b        Oracle JDK 7 and JRE 7 Certified System Configurations   \n    ^      GNU GPLv2 with Classpath exception   \n    ^      BCL For Java SE   \n    ^      OpenJDK FAQ   \n    ^      Naughton, Patrick.  \"Java Was Strongly Influenced by Objective-C\" .  Virtual School .   \u00a0    \n    ^       \"Sun Opens Java\" . Sun Microsystems. 13 November 2006. Archived from  the original  on 2008-05-13.   \u00a0    \n    ^      Kelly O'Hair (December 2010).  \"OpenJDK7 and OpenJDK6 Binary Plugs Logic Removed\" .  Oracle Corporation  . Retrieved 2011-11-25 .   \u00a0    \n    ^       \"JVM 7 Specification\" .   \u00a0    \n    ^       www.beanshell.org    \n  ^     a         b        Jon Byous (April 2003).  \"Java Technology: The Early Years\" .  Sun Microsystems . Archived from  the original  on May 30, 2008 . Retrieved 2009-08-02 .   \u00a0    \n    ^      Kathy Walrath (2001-12-21).  \"Foreword\" .  Sun Microsystems  . Retrieved 2009-08-02 .   \u00a0    \n    ^      Kieron Murphy (1996-04-10).  \"So why did they decide to call it Java?\" . javaworld.com . Retrieved 2009-08-03 . \" The lawyers had told us that we couldn't use the name 'OAK' because [it was already trademarked by] Oak Technologies,\" said Frank Yellin, a senior engineer at Sun. \"So a brainstorming session was held to come up with ideas for a new name \"   \u00a0    \n    ^       \"Sun Microsystems Announces Formation of Javasoft\" . Sun Microsystems. January 1996.   \u00a0    \n    ^      The Java Community Process(SM) Program - JSRs: Java Specification Requests - detail JSR# 63   \n    ^      The Java Community Process(SM) Program - JSRs: Java Specification Requests - detail JSR# 59   \n    ^      Version 1.5.0 or 5.0?   \n    ^      The Java Community Process(SM) Program - JSRs: Java Specification Requests - detail JSR# 176   \n    ^       \"Java Naming\" .  Java.com . Oracle . Retrieved 25 August 2011 .   \u00a0    \n    ^      Lea, Doug (13 September 2004).  \"JSRs: Java Specification Requests: JSR 166: Concurrency Utilities\" .  Java Community Process . Oracle Corp.   \u00a0    \n    ^      Oracle Java SE 7 U45 Release Notes   \n    ^       \"What is Java technology and why do I need it?\"  . Retrieved 15 December 2011 . \"Java runs on more than 850 million personal computers worldwide, and on billions of devices worldwide, including mobile and TV devices.\"   \u00a0    \n    ^       \"Java for Mac OS X 10.6 Update 3 and 10.5 Update 8 Release Notes\" . apple.com.   \u00a0    \n    ^       \"Results of comparison between jdk15 and classpath\" . kaffe.org.   \u00a0    \n    ^       \"Duke, the Java Mascot\" .  Oracle  . Retrieved 2011-11-12 .   \u00a0    \n    ^       \"duke: Project Home Page\" .  Sun Microsystems  . Retrieved 2007-03-18 .   \u00a0    \n    ^       \"Duke, the Java Mascot\" .   \u00a0    \n    ^       \"Future Tech Duke (The Java Source)\" . Tori Wieldt . Retrieved 2011-08-17 .   \u00a0    \n    ^      Stallman, Richard (May 24, 2006).  \"The Curious Incident of Sun in the Night-Time\" .  Groklaw .   \u00a0    \n    ^      Schwartz, Jonathan.  \"?\" .  Jonathan Schwartz's Blog . Sun Microsystems.   \u00a0    \n    ^      Oracle OpenWorld: UnBreakable Linux / 5015.2 not on the horizon   \n    ^      Sun Opens Java   \n    ^      Free But Shackled - The Java Trap   \n    ^       \"Sun 'releases' Java to the World\" .  BBC News . November 13, 2006 . Retrieved May 6, 2010 .   \u00a0    \n    ^       \"Open JDK is here!\" . Sun Microsystems. May 8, 2007 . Retrieved 2007-05-09 .   \u00a0    \n    ^      Sharples, Rich (2008-06-19).  \"Java is finally Free and Open\" .   \u00a0    \n    ^       \"Generics in Java\" . Object Computing, Inc . Retrieved 2006-12-09 .   \u00a0    \n    ^       \"What's Wrong With Java: Type Erasure\" . 2006-12-06 . Retrieved 2006-12-09 .   \u00a0    \n    ^       \"Java libraries should provide support for unsigned integer arithmetic\" .  Bug Database, Sun Developer Network . Oracle . Retrieved 2011-01-18 .   \u00a0    \n    ^      Owens, Sean R. (2009-11-05).  \"Java and unsigned int, unsigned short, unsigned byte, unsigned long, etc. (Or rather, the lack thereof)\" .  darksleep.com  . Retrieved 2010-10-09 .   \u00a0    \n    ^      Kahan, W.; Joseph D. Darcy (1998-03-01).  \"How Java's Floating-Point Hurts Everyone Everywhere\"  (PDF) . Retrieved 2006-12-09 .   \u00a0    Cite uses deprecated parameters ( help )   \n    ^       \"Types, Values, and Variables\" . Sun Microsystems . Retrieved 2006-12-09 .   \u00a0    \n    ^      Which programming languages are fastest? | Computer Language Benchmarks Game   \n    ^      speed \u00f7 C++ GNU g++ speed | Computer Language Benchmarks Game   \n    ^      C++ vs Java performance; It\u2019s a tie! | Blog of Christian Felde   \n  ^     a         b        J.P.Lewis and Ulrich Neumann.  \"Performance of Java versus C++\" . Graphics and Immersive Technology Lab,  University of Southern California .   \u00a0    \n    ^      The Java is Faster than C++ and C++ Sucks Unbiased Benchmark   \n    ^      FreeTTS - A Performance Case Study , Willie Walker, Paul Lamere, Philip Kwok  \n    ^      Java SE Platform Security Architecture . Oracle. Retrieved 2013-04-23.  \n    ^      blogs.computerworld.com - Java security flaw: yada yada yada , 2012-08-31  \n    ^      threatpost.com - New Zero-Day Vulnerability Found in Java 5, 6 and 7; 1.1 Billion Desktops Affected , 2012-09-26  \n    ^      nbcnews.com - Experts urge PC users to disable Java, cite security flaw , 2013-01-10  \n    ^      US Dept. of Homeland Security Calls On Computer Users To Disable Java  Forbes Jan. 11, 2013  \n    ^      Nasty New Java Zero Day Found; Exploit Kits Already Have It , 2013-01-10  \n    ^      Oracle Critical Patch Updates, Security Alerts   \n    ^      independent.ie - Emergency patch for Java fails to fix cybercrime holes, warn experts , 2013-01-14  \n    ^      zdnet.com - Homeland Security warns to disable Java amid zero-day flaw , 2013-01-11  \n    ^      venturebeat.com - Oracle issues fix for Java exploit after DHS warns of its holes , 2013-01-14  \n \n \n  External links   [  edit  ]   \n \n \n   \n Wikiversity has learning materials about    Learning Java    \n \n \n \n \n   \n Look up    Java    in Wiktionary, the free dictionary. \n \n \n \n \n   \n Wikibooks has a book on the topic of:    Java Programming    \n \n \n \n  Listen to this article  ( info/dl )\n \n \n    Sorry, your browser either has JavaScript disabled or does not have any supported player. \nYou can  download the clip  or  download a player  to play the clip in your browser.  \n \n \n \n \n   \n \n This audio file was created from a revision of the \" Java (software platform) \" article dated 2013-08-19, and does not reflect subsequent edits to the article. ( Audio help ) \n   More spoken articles   \n \n     \n \n    Official website    \n  sun.com - Official developer site  \n  infoq.com - Presentation  by  James Gosling  about the origins of Java, from the JVM Languages Summit 2008 \n  Java Tutorials and Examples collection  \n  javatester.org - What Version of Java Are You Using? , tells you which version you are using \n   JavaRa  , a utility developed by Paul McLain and Fred De Vries at  RaProducts  to find and remove older versions of Java, now distributed by  SingularLabs . \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Java  \n \n \n \n  \n \n \n Java platforms \n \n \n \n  Java language  \n  JVM  \n  Micro Edition  \n  Standard Edition  \n  Enterprise Edition  \n  Java Card  \n  Android SDK  \n \n \n \n \n     \n \n \n \n  \n \n \n Sun technologies \n \n \n \n  Squawk  \n  Java Development Kit  \n  OpenJDK  \n  Java virtual machine  \n  JavaFX  \n  Maxine VM  \n \n \n \n \n \n  \n \n \n Platform technologies \n \n \n \n  Applets  \n  Servlets  \n  MIDlets  \n  JSP  \n  Web Start (JNLP)  \n \n \n \n \n \n  \n \n \n Major third-party technologies \n \n \n \n  JRockit  \n  GNU Classpath  \n  Kaffe  \n  TopLink  \n  Apache Harmony  \n  Apache Struts  \n  Spring framework  \n  Hibernate  \n  JBoss application server  \n  Tapestry  \n  Jazelle  \n \n \n \n \n \n  \n \n \n History \n \n \n \n  Java version history  \n  Java Community Process  \n  Sun Microsystems  \n  Free Java implementations  \n \n \n \n \n \n  \n \n \n Major programming languages \n \n \n \n  BeanShell  \n  Clojure  \n  Groovy  \n  Oxygene  \n  Java Tcl  \n  JRuby  \n  Jython  \n  Processing  \n  Rhino  \n  Scala  \n  more\u2026  \n \n \n \n \n \n  \n \n \n Java conferences \n \n \n \n  JavaOne  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Sun Microsystems   (acquired by  Oracle Corporation , 2010)  \n \n \n \n  \n \n \n Hardware \n \n \n \n  Sun-1  \n  Sun-2  \n  Sun-3  \n  Sun386i  \n  Sun-4  \n  SPARCstation  \n  Netra  \n  Ultra  \n  Enterprise  \n  Sun Blade  \n  Sun Fire  \n  SPARC Enterprise  \n  SPARC  \n  JavaStation  \n  Sun Ray  \n  Sun Modular Datacenter  \n   more...   \n \n \n \n \n \n  \n \n \n Software \n \n \n \n  SunOS  \n  Solaris  \n  NIS  ( + ) \n  NFS  \n  ZFS  \n  SunView  \n  NeWS  \n  OpenWindows  \n  Java Desktop System  \n  Sun Studio  \n  Java  \n  StarOffice  \n  iPlanet / Sun ONE / Java Enterprise System  \n  Sun Secure Global Desktop  \n  MySQL  \n  Sun xVM  \n  GlassFish  \n   more...   \n \n \n \n \n \n  \n \n \n Storage \n \n \n \n  StorageTek  \n  Sun Open Storage  \n  QFS  \n  ZFS  \n \n \n \n \n \n  \n \n \n High-performance computing \n \n \n \n  Sun Cloud  \n  Sun Constellation System  \n  Sun Visualization System  \n  Sun Grid Engine  \n  Lustre  \n \n \n \n \n \n  \n \n \n Research \n \n \n \n  Sun Labs  \n  picoJava  \n  Fortress  \n  Project Looking Glass  \n \n \n \n \n \n  \n \n \n Education and recognition \n \n \n \n  SCPs  \n  List of notable employees  \n  BlueJ  \n \n \n \n \n \n  \n \n \n Community \n \n \n \n  CDDL  \n  Java Community Process  \n  NetBeans  \n  OpenOffice.org  \n  OpenSolaris  \n  OpenSPARC  \n  OpenJDK  \n  OSUM  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Integrated development environments  for  Java  \n \n \n \n  \n \n \n \n \n \n  BlueJ  \n   Borland Latte   \n   BrewMaster   \n   Chicory   \n   Metrowerks CodeWarrior Pro for Java   \n   Cosmo Code   \n  Eclipse  \n   ED for Windows   \n   Fort\u00e9 for Java   (superseded by  NetBeans ) \n   FrIJDE (aka frigid)  \n  IntelliJ  \n  Geany  \n  Greenfoot  \n   Kalimantan   \n   Kawa   \n  KDevelop  \n   Java WebIDE   \n   Java WorkShop   \n   JavaMaker   \n  JBuilder  \n  JCreator  \n  JDeveloper  \n   JFactory   \n  jGRASP  \n  MyEclipse  \n  NetBeans  \n   NetCraft   \n   Object Engineering Workbench for Java  (OEW)  \n  Rational Application Developer  \n   Roaster   \n   Scriptum   \n  Servoy  \n   SNiFF+   \n   Sun Java Studio Creator   (superseded by  NetBeans ) \n   Teikade   \n   Visual Age   (superseded by  Eclipse ) \n   Visual Caf\u00e9   (aka Espresso, superseded by  JBuilder ) \n   Visual J++   \n   WinGen for Java   \n  Servoy  \n   Xelfi   (became  NetBeans ) \n   XWPE   \n \n \n \n \n \n  \n \n \n \n \n  Italics  indicate software no longer in development. \n \n    Category   \n   Comparison   \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Javanese script", "rank": 0.34010542819797956, "url": "http://en.wikipedia.org/wiki/Javanese_script", "links": ["http://en.wikipedia.org/wiki/JavaScript", "http://en.wikipedia.org/wiki/Jawi_script", "http://en.wikipedia.org/wiki/Abugida", "http://en.wikipedia.org/wiki/Javanese_language", "http://en.wikipedia.org/wiki/Sundanese_language", "http://en.wikipedia.org/wiki/Madurese_language", "http://en.wikipedia.org/wiki/Sasak_language", "http://en.wikipedia.org/wiki/Proto-Sinaitic_alphabet", "http://en.wikipedia.org/wiki/Phoenician_alphabet", "http://en.wikipedia.org/wiki/Aramaic_alphabet"], "body": "  \"Javanese Script\" redirects here. It is not to be confused with  JavaScript \u00a0or  Jawi script . \n \n \n Aksara Jawa \n \ua9b2\ua98f\ua9c0\ua9b1\ua9ab\ua997\ua9ae  \n \n \n     \n \n \n Type \n  Abugida  \n \n \n Languages \n  Javanese  \n Sundanese  (as  Cacarakan ) \n Madurese  \n Sasak  \n \n \n Time period \n c. 13th\u2013present \n \n \n Parent systems \n \n  Proto-Sinaitic alphabet \n \n  Phoenician alphabet \n \n  Aramaic alphabet \n \n  Br\u0101hm\u012b \n \n  Pallava \n \n  Old Kawi \n \n Aksara Jawa \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n Sister systems \n  Balinese  \n Batak  \n Baybayin  \n Kulitan  \n Buhid  \n Hanun\u00f3'o  \n Lontara  \n Old Sundanese  \n Rencong  \n Rejang  \n Tagbanwa  \n \n \n  ISO 15924  \n  Java, 361  \n \n \n Direction \n Left-to-right \n \n \n Unicode alias \n Javanese \n \n \n  Unicode range  \n   U+A980 \u2013 U+A9DF   \n \n \n  This article contains  IPA  phonetic symbols.  Without proper  rendering support , you may see  question marks, boxes, or other symbols  instead of  Unicode  characters. \n \n \n \n \n   \n  This article contains  Javanese script .  Without proper  rendering support , you may see  question marks, boxes, or other symbols  instead of  Javanese characters . \n \n \n The  Javanese script , natively known as  Aksara Jawa  ( \ua9b2\ua98f\ua9c0\ua9b1\ua9ab\ua997\ua9ae  - lit. \"the script of Java\"),   [ 1 ]     Hanacaraka  ( \ua9b2\ua9a4\ua995\ua9ab\ua98f  - the first five letters), or  Carakan  ( \ua995\ua9ab\ua98f\ua9a4\ua9c0 ),   [ 2 ]    is a pre-colonial script used to write  Javanese  and several other native languages of  Indonesia . It is closely related to the  Balinese script . The letters are commonly arranged in the  hanacaraka  sequence, in which the letters form a perfect  pangram  narrating the Javanese myth of  Aji Saka . \n In everyday use, Javanese script has been almost entirely supplanted by Latin script which was introduced by the Dutch during the 19th century.   [ 2 ]    Javanese script was added to  Unicode  version 5.2 in 2009. Even so, since its complex script can only be displayed using  SIL Graphite  technology, only available in the Firefox browser, Thunderbird email client, and several open source word processors, writing and rendering Javanese on a computer is still not as easy as writing with Latin script. The difficulties encountered when trying to use this script in a digital environment is one of main reasons for its lack of currency except among preservationists. \n  \n \n \n Contents \n \n \n   1   Charateristics   \n   2   Past Usage   \n   3   Letters  \n \n   3.1   Ngleg\u00e9na   \n   3.2   Murda   \n   3.3   Swara   \n   3.4   Mahaprana   \n   3.5   Miscellaneous   \n   3.6   Rekan   \n \n \n   4   Appended Letters   \n   5   Diacritics  \n \n   5.1   Vowel   \n   5.2   Consonant   \n \n \n   6   Numbers   \n   7   Punctuation   \n   8   Collation   \n   9   Relation with other languages  \n \n   9.1   Sundanese   \n   9.2   Balinese   \n   9.3   Indonesian and English   \n \n \n   10   Font   \n   11   Unicode   \n   12   Gallery   \n   13   See also   \n   14   References   \n   15   External links   \n \n \n  \n  Charateristics   [  edit  ]   \n \n    \n \n     \nThe syllable /ka/ is represented with a single letter. Diacritics either change, add, or eliminate vowel of said syllable. The letter has several related form for proper names, foreign pronunciation, and consonant clusters \n \n \n The Javanese script is an  abugida  written from left to right. Each letter is a syllable with inherent vowel  / a /  or  / \u0254 /  which could be determined by the letter's position to others. Characters are written without word boundaries (  Scriptio continua  ).   [ 3 ]    Therefore the reader of Javanese script has to be familiar with the text one is about to read to know the word boundaries. \n Letters are divided into sets according to their function. The basic set contains 20 consonants used for writing modern  Javanese language , other sets include capital, archaic, and modified letters. All of these letters in turn have appended form for writing consonant clusters. \n Most non-basic letters are originally  aspirated  or  retroflex  consonants present in the early development of  Old Javanese language . As the language develops, these letters are dropped of their original sound representation and are used instead for a number of different functions concerning proper spelling in contemporary orthography. \n  Diacritics  are placed around the letter to indicate different vowels, final consonants, or foreign pronunciation.   [ 3 ]    Diacritics may be used with one another, though not all combination is valid. \n Punctuation includes a comma, period, colon, quotation marks, as well as marks to introduce chapters of a poem, song, or letter.   [ 4 ]    \n The Javanese script has its own digit, containing number 0-9. Numbers are marked with certain punctuation to distinguish them within text,   [ 1 ]    though the used of  Arabic numeral  are also acceptable. \n  Past Usage   [  edit  ]   \n See also:  Kawi script \u00a0and  Pallava script  \n \n    \n \n     \nJavanese script being used in  colonial period  school. \n \n \n Javanese and  Balinese  are modern variants of  Kawi , a  Brahmic script  developed in Java from the earlier  Pallava script . Kawi is first attested in a legal document from 804  CE , and was widely used in religious literature written in  palm-leaf manuscripts  called  lontar .   [ 1 ]    Over the  Hindu-Buddhist period  of Indonesia the shape transients into Javanese, though much of the orthography stays the same. By the 17th century, the script is identified as  Carakan    [ 5 ]    or  Hanacaraka  based on its first five letters. \n  Carakan  was mainly used by scribes centered around  Surakarta  and  Yogyakarta  to write various manuscripts such as historical accounts ( babad ), stories ( serat ), ancient verses ( kakawin ), and divination guides ( primbon ) among many others.   [ 6 ]    The most popular of texts are copied and rewritten over the centuries.   [ 7 ]    Manuscripts commissioned by nobility are often illuminated or illustrated, which ranges from simple embellished stanza markers to elaborate frontispiece or textual gateways called  wadana . Illustrations also vary in style; some used highly stylized  wayang  depiction, others used more naturalistic lines.   [ 7 ]    \n In 1926, an academic workshop in  Sriwedari ,  Surakarta  issued  Wewaton Sriwedari  or \"Sriwedari Resolve\" as the first standard for Javanese spelling and orthography.   [ 8 ]    After  Indonesian independence , many guidelines has been published regarding correct orthography of the Javanese script, including  Patokan Panoelise Temboeng Djawa  or \"Guide for writing Javanese words\" issued by the  Indonesian Ministry of Education and Culture  in 1946,   [ 8 ]    as well as numerous guidelines issued by the Congress of Javanese Language ( Kongres Bahasa Jawa , abbreviated as KBJ) from 1991 to 2006.   [ 9 ]      [ 10 ]    KBJ is also responsible for the registration of Javanese script into  Unicode . \n However, usage of the Javanese script has declined since the invention of a Latin orthography based on  Dutch  in 1926,   [ 2 ]    and it is now more common to write Javanese in Latin alphabet. Currently, there are only a few newspapers and magazines being printed in the Javanese script, such as  Jaka Lodhang . It is still taught in most  elementary school  and some  junior high school  as compulsory subject in Javanese language areas. \n  Letters   [  edit  ]   \n \n    \n \n     \nStories of  Amir Hamzah  in handwritten Javanese \n \n \n A basic letter in  hanacaraka  is called  aksara  ( \ua9b2\ua98f\ua9c0\ua9b1\ua9ab ), and each letter stands for a syllable with inherent vowel /a/ or /\u0254/ which could be determined by the letter's position to other letters.   [ 3 ]    However, it also depends on the speaker's dialect; Western Javanese dialects tends to pronounce the inherent vowel as /a/, while Eastern Javanese prefers /\u0254/. Rules determining the inherent vowel of a letter is described in  Wewaton Sriwedari  as follows: \n \n A basic character stands for a  syllable  with the vowel  /\u0254/  when the character is preceded by another character containing a  sandhangan swara . \n A basic character stands for a  syllable  with the vowel  /a/  when the character is immediately followed by a character containing a  sandhangan swara . \n The first basic letter of a word normally has the  /\u0254/  vowel, unless it precedes two other basic characters, in which case the first basic character has the  /a/  vowel. \n \n  Ngleg\u00e9na   [  edit  ]   \n There are 20 basic letters called  aksara ngleg\u00e9na  ( \ua9b2\ua98f\ua9c0\ua9b1\ua9ab\ua994\ua9c0\ua98a\ua992\ua9ba\ua9a4 ) for writing modern  Javanese , they are: \n \n Aksara Ngleg\u00e9na \n \n  ha  \n  na  \n  ca  \n  ra  \n  ka  \n  da  \n  ta  \n  sa  \n  wa  \n  la  \n \n \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n \n \n  h\u0254 / \u0254  \n  n\u0254  \n  t\u0283\u0254  \n  \u027d\u0254  \n  k\u0254  \n  d\u0254  \n  t\u0254  \n  s\u0254  \n  w\u0254  \n  \u026d\u0254  \n \n \n \n \n  pa  \n  dha  \n  ja  \n  ya  \n  nya  \n  ma  \n  ga  \n  ba  \n  tha  \n  nga  \n \n \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n \n \n  p\u0254  \n  \u0256\u0254  \n  d\u0292\u0254  \n  j\u0254  \n  \u0272\u0254  \n  m\u0254  \n  \u0261\u0254  \n  b\u0254  \n  \u0288\u0254  \n  \u014b\u0254  \n \n \n \n Syllable 'ha' can also represent zero consonant. \n \n  Murda   [  edit  ]   \n  Aksara murda  ( \ua9b2\ua98f\ua9c0\ua9b1\ua9ab\ua9a9\ua9b8\ua982\ua9a2 ) or  aksara ged\u00e9  is used similarly to Latin capital letters, though they are not used to indicate the beginning of a sentence. They are used in the first syllable of proper names, usually of a respected person or a place. Not all letter has  murda  form, and if  murda  letter is not available for a name's first syllable, the second letter is capitalized. If the second letter does not have a  murda  either, the third letter is capitalized, and so on. Highly respected names may all be capitalized if corresponding  murda  is available. \n It should be noted that  ca murda  is only found in non-initial position as a  pasangan .   [ 1 ]    \n \n Aksara Murda \n \n  na  \n  ca  \n  ka  \n  ta  \n  sa  \n  pa  \n  nya  \n  ga  \n  ba  \n \n \n     \n     \n     \n     \n     \n     \n     \n     \n     \n \n \n  Swara   [  edit  ]   \n Pure vowels are commonly produce by using letter  ha  as a zero consonant and corresponding diacritics to change the vowel. Otherwise, there are also letters that represent pure vowels called  aksara swara  ( \ua9b2\ua98f\ua9c0\ua9b1\ua9ab\ua9b1\ua9c0\ua9ae\ua9ab ),   [ 1 ]    which is used to differentiate proper names in similar matter to  murda . For example,  ayu  (graceful) is written with the letter  ha . But when writing a person named  Ayu ,  swara  is used.  Swara  Is also used for names that are foreign of origin. The element  Argon  for example, is written with  swara . Whether or not a word is considered foreign depends on dictionary definition.   [ 8 ]      [ 11 ]    \n \n Aksara swara \n \n  a  \n  i  \n  u  \n  \u00e9 / \u00e8  \n  o  \n \n \n     \n     \n     \n     \n     \n \n \n a/\u0254 \n i \n u \n e/\u025b \n o \n \n \n \n Extended vowel letters   [ 11 ]    \n \n  aa  \n  ii  \n  uu  \n  ai  \n  au  \n \n \n     \n     \n     \n     \n     \n \n \n a\u02d0 \n i\u02d0 \n u\u02d0 \n ai \n au \n \n \n  Mahaprana   [  edit  ]   \n  Mahaprana  roughly translates \"to be read with deep breath\", and originally represents aspirated sounds used in  Old Javanese  and  Sanskrit  transliterations, but are now obsolete.  Mahaprana  are often poorly attested   [ 1 ]    and omitted from books discussing the script. \n \n Aksara Mahaprana \n \n  dha  \n  sa  \n  ja  \n  tha  \n \n \n     \n     \n     \n     \n \n \n  Miscellaneous   [  edit  ]   \n  Pa cerek  and  nga lelet  was originally vocalic /r\u0325/ and /l\u0325/ present in the early development of the script due to the influence of  Brahmic scripts . Contemporary orthography established both as consonant letters   [ 1 ]    called  aksara ganten , \"replacement letters\", syllables with vowel value /\u0259/ which replaces  ra+pepet  and  la+pepet  combination.   [ 11 ]    As it already carry a fixed vowel value, it may not be attached with vowel diacritics. Both letters have corresponding  pasangan  form.  Ra agung  was historically used by some writers as a replacement when addressing or discussing royal persons.   [ 1 ]     Ka sasak  is a traditional transliteration of /qa/ adopted from the  Sasak language . \n \n Miscellaneous Aksara \n \n  pa cerek  \n  nga lelet  \n  ra agung  \n  ka sasak  \n \n \n     \n     \n     \n     \n \n \n r\u0259 \n l\u0259 \n ra \n qa \n \n \n  Rekan   [  edit  ]   \n Most sounds not native to the  Javanese language  are indicated by writing the diacritic mark  cecak telu  over similar sounding Javanese letters.   [ 1 ]      [ 4 ]    These letters are called  rekan  or  rekaan  letters, and they are divided by the language they originated. The most common is  Arabic  and  Dutch  or European  rekan . Two other less known  rekan  are used for transcribing  Sundanese  and  Chinese  loan words. \n \n Rekan for Latin \n \n fa \n qa \n va \n za \n \n \n     \n     \n     \n     \n \n \n \n Rekan for Arabic \n \n tsa \n \u1e25a \n kha \n dza \n za \n \u1e63a \n \u1e0da \n \u1e6da \n \u1e93a \n a' \n gha \n fa \n qa \n \n \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n \n \n \u03b8a \n \u0127a \n xa \n \u00f0a \n za \n s\u02e4a \n \u00f0\u02e4a \n t\u02e4a \n d\u02e4a \n \u0294 \n \u0263a \n fa \n qa \n \n \n \n Rekan for Sundanese \n \n nya \n reu \n leu \n \n \n     \n     \n     \n \n \n \u0273a \n r\u0264 \n l\u0264 \n \n \n \n Rekan for Chinese \n \n the \n se \n nie \n hwe \n yo \n syo \n \n \n     \n     \n     \n     \n     \n     \n \n \n  Appended Letters   [  edit  ]   \n To produce a pure consonant, a mark called  pangkon  is used to mute the inherent vowel. However,  pangkon  may only be used at the end of a sentence, and if a closed syllable occurs in the middle of a sentence,  pasangan  ( \ua9a5\ua9b1\ua994\ua9a4\ua9c0 ) letters are used instead.  Pasangan  is a subscript form of  ngleg\u00e9na  letters that eliminate the inherent vowel of the letter it is attached to. For example, if the letter  na  is attached with  pasangan da , it will be read as  nda . Each base letter has a corresponding  pasangan  form with varied shape and placement.   [ 1 ]    \n  Pasangan  can be attached with diacritics, similar to their  aksara  counterpart, with several exception in its placement. Upper diacritics are attached to the  aksara  above, while lower diacritics are attached to the  pasangan . Preceding and succeeding diacritics are put in the same line as the  aksara . An  aksara  may only hold one  pasangan  each, while the  pasangan  may be attached with a number of diacritics. In older texts,  pasangan wa  was excepted for being attached to another  pasangan , as it was considered to be a diacritic. \n \n Pasangan Ngleg\u00e9na \n \n  ha  \n  na  \n  ca  \n  ra  \n  ka  \n  da  \n  ta  \n  sa  \n  wa  \n  la  \n \n \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n \n \n \n \n  pa  \n  dha  \n  ja  \n  ya  \n  nya  \n  ma  \n  ga  \n  ba  \n  tha  \n  nga  \n \n \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n \n \n \n Pasangan Murda \n \n  na  \n  ca  \n  ka  \n  ta  \n  sa  \n  pa  \n  nya  \n  ga  \n  ba  \n \n \n     \n     \n     \n     \n     \n     \n     \n     \n     \n \n \n \n Pasangan Mahaprana \n \n  dha  \n  sa  \n  ja  \n  tha  \n \n \n     \n     \n     \n     \n \n \n \n Miscellaneous Pasangan \n \n  pa cerek  \n  nga lelet  \n  ra agung  \n  ka sasak  \n \n \n     \n     \n     \n     \n \n \n  Diacritics   [  edit  ]   \n Diacritics are called  sandhangan  ( \ua9b1\ua9a4\ua9c0\ua99d\ua994\ua9a4\ua9c0 ). They are mainly used to change the vowel of a syllable and a number of different functions. \n  Vowel   [  edit  ]   \n Vowel diacritics called  sandhangan swara  ( \ua9b1\ua9a4\ua9c0\ua99d\ua994\ua9a4\ua9c0\ua9b1\ua9c0\ua9ae\ua9ab ) is the most common type of diacritics used to change the vowel of a syllable. There are five  sandhangan  for modern  Javanese . Vowel diacritics may not be used more than one in a syllable, except for  tarung  which may be combined with few others in a limited combination, the most obvious of which is  taling-tarung . Combination  pepet-tarung  also exist, though they are used in  Sundanese  transcription. A standalone  tarung  can also represent long a (/a\u02d0/), though they are only used in  Old Javanese .   [ 11 ]    Vowel diacritics may be used with consonant diacritics. \n In some texts,  wulu  and  pepet  are only differentiate by their size;  wulu  being smaller and  pepet  larger, drastically sometimes. This is somewhat less obvious in handwritten or calligraphic texts, and distinguishing both can difficult. \n \n Sandhangan swara \n \n  i  \n  u  \n  e  \n  \u00e9 / \u00e8  \n  o  \n \n \n Wulu \n Suku \n Pepet \n Taling \n Taling-tarung \n \n \n     \n     \n     \n     \n     \n \n \n  \ua98f\ua9b6  \n  \ua98f\ua9b8  \n  \ua98f\ua9bc  \n  \ua98f\ua9ba  \n  \ua98f\ua9ba\ua9b4  \n \n \n ki \n ku \n k\u0259 \n ke/k\u025b \n ko \n \n \n \n Extended vowel diacritic   [ 11 ]    \n \n  aa  \n  ii  \n  uu  \n  ai  \n  au  \n  eu  \n \n \n Tarung \n Wulu melik \n Suku mendut \n Dirga mur\u00e9 \n Dirga mur\u00e9-tarung \n Pepet-tarung \n \n \n     \n     \n     \n     \n     \n     \n \n \n  \ua98f\ua9b4  \n  \ua98f\ua9b7  \n  \ua98f\ua9b9  \n  \ua98f\ua9bb  \n  \ua98f\ua9bb\ua9b4  \n  \ua98f\ua9bc\ua9b4  \n \n \n ka\u02d0 \n ki\u02d0 \n ku\u02d0 \n kai \n kau \n k\u0264 \n \n \n  Consonant   [  edit  ]   \n There are two kinds of consonant diacritics, sound killers or syllable-final consonants ( sandhangan panyigeging wanda ,  \ua9b1\ua9a4\ua9c0\ua99d\ua994\ua9a4\ua9c0\ua9a5\ua99a\ua9b6\ua992\ua9bc\ua992\ua9b6\ua981\ua9ae\ua9a4\ua9c0\ua9a2 ), and syllable-medial consonants ( sandhangan wyanjana ,  \ua9b1\ua9a4\ua9c0\ua99d\ua994\ua9a4\ua9c0\ua9ae\ua9be\ua9a4\ua9c0\ua997\ua9a4 ).   [ 8 ]     Panyangga ,  cecak , and  wignyan  are analogues to Devanagari  candrabindu ,  anusvara , and  visarga  and behave in much the same way.   [ 1 ]    Pangkon  is parallel to a  virama  in other  Brahmic scripts , and are used to mute the inherent vowel of a syllable. Several final consonants however is represented by specific diacritics, in which  pangkon  may not be used. For example, final consonant -r is written with  layar , and may not be written as  ra  with  pangkon . Consonant diacritic may not be used more than one in a letter, but it can be used together with vowel diacritics. \n \n Sandhangan panyigeging wanda \n \n Panyangga \n Cecak \n Wignyan \n Layar \n Pangkon \n \n \n     \n     \n     \n     \n     \n \n \n ka\u1e43 \n kang \n kah \n kar \n -k \n \n \n  \ua98f\ua980  \n  \ua98f\ua981  \n  \ua98f\ua983  \n  \ua98f\ua982  \n  \ua98f\ua9c0  \n \n \n \n  Panyangga  is only used in religious syllable      Om .   [ 11 ]    \n \n \n Sandhangan wyanjana \n \n Cakra \n Keret \n Pengkal \n \n \n     \n     \n     \n \n \n kra \n kre \n kya \n \n \n  \ua98f\ua9bf  \n  \ua98f\ua9bd  \n  \ua98f\ua9be  \n \n \n \n  Cakra  has two form, initial and ligature, in which the former is shown here. \n  Keret  may not be attached with vowel diacritics, as it already carry a vowel /\u0259/ by default. \n \n  Numbers   [  edit  ]   \n The Javanese  numeral system  has its own script, which only contains 0\u20139 numerals.   [ 3 ]    \n \n Angka \n \n  1  \n  2  \n  3  \n  4  \n  5  \n  6  \n  7  \n  8  \n  9  \n  0  \n \n \n siji \n loro \n telu \n papat \n lima \n enem \n pitu \n wolu \n sanga \n nol \n \n \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n \n \n When writing numbers greater than 9, simply combine the above numbers as one would using the  Arabic numerals . For example, 21 is written by combining the numeral 2 and 1 as so;  \ua9d2\ua9d1 . Similarly, the number 90 would be the  \ua9d9\ua9d0 .   [ 3 ]    \n Most of the numbers are similar to the  syllable  characters, namely, 1 with  ga , 2 with  nga lelet , 6 with  e , 7 with  la , 8 with  pa murda , and 9 with  ya . To avoid confusions, numbers that show up in Javanese texts are indicated by \"numeral markers\" called  pada pangkat , which is written both  before  and  after  the number,   [ 3 ]    following the pattern: text - numeral marker - numbers - numeral marker - text. For example; Tuesday, 27 March 2013 would be written as: \n  \ua9b1\ua9bc\ua9ad\ua9b1\ua9c7\ua9d1\ua9d9\ua9c7\ua9a9\ua989\ua9a0\ua9c0\ua9c7\ua9d2\ua9d0\ua9d1\ua9d3\ua9c7  ( selasa 19 maret 2013 ) \n In some cases,  pada lungsi  is used as numeral markers,   [ 11 ]    and sometimes Javanese numerals are replaced by Arabic numerals to avoid similarities. \n  Punctuation   [  edit  ]   \n \n    \n \n     \n Wadana  or frontispiece from a 19th-century illuminated   Babad  Tanah Jawi  (History of the Javanese Land), showing ornamental tendencies of Javanese punctuation. \n \n \n Punctuation can be divided into two categories: primary and special. \n \n Primary Pada \n \n Name \n Image \n Function \n \n \n Pada adeg \n \n \n   \n \n \n  Parentheses  or  quotation marks  \n \n \n Pada adeg-adeg \n \n \n   \n \n \n Introduce a paragraph or section \n \n \n Pada piseleh \n   and   \n Functions similarly to  pada adeg  \n \n \n Pada lingsa \n \n \n   \n \n \n  Comma  or abbreviation marker \n \n \n Pada lungsi \n \n \n   \n \n \n  Period  \n \n \n Two special rules apply to the usage of the comma, and the period.   [ 3 ]    \n 1.The comma is not needed after a consonant-ending word that is represented by a  pangkon  \n 2.The comma is used instead for period after a consonant-ending word that is represented by a  pangkon  \n \n Special Pada \n \n Name \n Image \n Function \n \n \n Rerengan \n   and   \n Flanks title \n \n \n Pada luhur \n \n \n   \n \n \n Introduces a letter to a person of older age or higher rank \n \n \n Pada madya \n \n \n   \n \n \n Introduces a letter to a person of equal age or rank \n \n \n Pada andhap \n \n \n   \n \n \n Introduces a letter to a person of younger age or lower rank \n \n \n Pada guru \n \n \n   \n \n \n Introduces a letter without age or rank distinction \n \n \n Pada pancak \n \n \n   \n \n \n Ends a letter \n \n \n Purwa pada \n \n \n   \n \nor\n \n   \n \n \n Introduces a poem \n \n \n Madya pada \n \n \n   \n \n \n Indicates a new song within a poem \n \n \n Wasana pada \n \n \n   \n \n \n Indicates the end of a poem.   [ 3 ]      [ 4 ]    \n \n \n Numerous variants of special  pada  may be found in Javanese texts as they are often ornamental, decorated according to the scribe's taste and ability.   [ 1 ]    \n There are also three other punctuation which are not categorized into the two: \n \n Miscellaneous Pada \n \n Name \n Image \n \n \n Tirta tum\u00e9t\u00e9s \n \n \n   \n \n \n \n \n Is\u00e8n-is\u00e8n \n \n \n   \n \n \n \n \n Pada rangkep \n \n \n   \n \n \n \n \n  Tirta tum\u00e9t\u00e9s  and  is\u00e8n-is\u00e8n  is used by scribes to indicate error in writing.   [ 11 ]    Though only used in handwriting, the two are included into the  Unicode  range for the purpose of rendering Javanese texts.  Tirta tum\u00e9t\u00e9s  is used in  Yogyakarta , while  is\u00e8n-is\u00e8n  is used in  Surakarta . For example, a scribe wants to write  pada luhur , but wrote  pada wu... , a scribe from Yogyakarta would write: \n  \ua9a5\ua9a2\ua9ae\ua9b8\ua9de\ua9de\ua9de\ua9ad\ua9b8\ua9b2\ua9b8\ua982  \n  Pada wu---luhur  \n In Surakarta, it would be: \n  \ua9a5\ua9a2\ua9ae\ua9b8\ua9df\ua9df\ua9df\ua9ad\ua9b8\ua9b2\ua9b8\ua982    [ 1 ]    \n  Pada rangkep  indicates repeated word ( rangkep )   [ 11 ]    such as  kupu-kupu  (butterfly), which would be written as  kupu2 . The character derives from the Arabic digit 2 but in Javanese it does not have a numeric use. It was proposed as a separate character because of the bidirectional properties of the Arabic digit.   [ 1 ]    \n  Collation   [  edit  ]   \n Javanese letters are commonly arranged in the   hanacaraka  sequence , in which the letters form a perfect  pangram  narrating the myth of  Aji Saka  and the mythical story of the Javanese script's origin.   [ 1 ]      [ 12 ]    However, the  hanacaraka  sequence only includes 20 consonants used in the  Javanese language , excluding the  murda  and  mahaprana  letters. The arrangement is as follows: \n \n \n \n \n     \n \n \n  \ua9b2\ua9a4\ua995\ua9ab\ua98f  \n Hana caraka  \n \n \n \n \n \n \n     \n \n \n  \ua9a2\ua9a0\ua9b1\ua9ae\ua9ad  \n Data sawala  \n \n \n \n \n \n \n     \n \n \n  \ua9a5\ua99d\ua997\ua9aa\ua99a  \n Padha jayanya  \n \n \n \n \n \n \n     \n \n \n  \ua9a9\ua992\ua9a7\ua99b\ua994  \n Maga bathanga  \n \n \n \n \n of which the line-by-line translation   [ 3 ]    would be: \n  There (were) two messengers.   (They) had animosity (among each other).   (They were) equally powerful (in fight).   Here are the corpses.  \n The script can also be arranged phonetically according to standard  Sanskrit    [ 1 ]    (called the   kaganga  sequence ), which is how the script is arranged in its  Unicode range . In this way, each letter represent sounds used to write Sanskrit and  old Javanese . The arrangement is as follow: \n \n \n  ISO  \n k \n kh \n g \n gh \n \u1e45 \n c \n ch \n j \n jh \n \u00f1 \n \u1e6d \n \u1e6dh \n \u1e0d \n \u1e0dh \n \u1e47 \n t \n th \n d \n dh \n n \n p \n ph \n b \n bh \n m \n y \n r \n l \n v \n \u015b \n \u1e63 \n s \n h \n \n \n  IPA  \n  k  \n  k\u02b0  \n  \u0261  \n  \u0261\u02b1  \n  \u014b  \n  t\u0283  \n  t\u0283\u02b0  \n  d\u0292  \n  d\u0292\u02b1  \n  \u0272  \n  \u0288  \n  \u0288\u02b0  \n  \u0256  \n  \u0256\u02b1  \n  \u0273  \n  t\u032a  \n  t\u032a\u02b0  \n  d\u032a  \n  d\u032a\u02b1  \n  n  \n  p  \n  p\u02b0  \n  b  \n  b\u02b1  \n  m  \n  j  \n  \u027e  \n  l  \n  \u028b  \n  \u0283  \n  \u0282  \n  s  \n  \u0266  \n \n \n Javanese \n  \ua98f  \n  \ua991  \n  \ua992  \n  \ua993  \n  \ua994  \n  \ua995  \n  \ua996  \n  \ua997  \n  \ua999  \n  \ua99a  \n  \ua99b  \n  \ua99c  \n  \ua99d  \n  \ua99e  \n  \ua99f  \n  \ua9a0  \n  \ua9a1  \n  \ua9a2  \n  \ua9a3  \n  \ua9a4  \n  \ua9a5  \n  \ua9a6  \n  \ua9a7  \n  \ua9a8  \n  \ua9a9  \n  \ua9aa  \n  \ua9ab  \n  \ua9ad  \n  \ua9ae  \n  \ua9af  \n  \ua9b0  \n  \ua9b1  \n  \ua9b2  \n \n \n  Relation with other languages   [  edit  ]   \n  Sundanese   [  edit  ]   \n Javanese script is also used for writing  Sundanese . But the script was modified and called  Cacarakan  instead. It differs from Javanese by omitting the  dha  and  tha . Difference can also be seen from the use  pepet-tarung  for the vowel /\u0264/,   [ 11 ]    since the sound doesn't exist in  Javanese , simplification of the vowel /o/ into a single diacritic called  tolong ,   [ 11 ]    and different \"nya\" form   [ 11 ]    (see  rekan  for Sundanese). \n  Balinese   [  edit  ]   \n The Javanese and  Balinese script  are essentially typographic variants. Like Sundanese, Balinese omit consonant  dha  and  tha . However, obsolete characters are still used in numerous loan words from  Sanskrit  or  Old Javanese .   [ 13 ]    \n \n \n \n \n     \n \n \n \n \n     \n \n \n \n \n Javanese script \n Balinese script \n \n \n  Indonesian and English   [  edit  ]   \n \n    \n \n     \nA mall in  Surakarta ,  Central Java . \n \n \n Javanese script is also used to transliterate Indonesian words and English words, as can be witnessed in public places, especially in  Surakarta  and its surrounding area. Since Javanese script is an oral script, words from either Indonesian or English origin are written as they were pronounced, not as they were written in Latin. For example, \"Solo Grand Mall\" transliterated as  \ua9b1\ua9ba\ua9b4\ua9ad\ua9ba\ua9b4\ua992\ua9bf\ua9ba\ua9a4\ua9c0\ua9a9\ua9ad\ua9c0 , which transliterates back as \"solo gren mal\" (pronounced /solo gren m\u0254l/). \n  Font   [  edit  ]   \n \n Comparison of several Javanese fonts \n \n  \ua9cb\ua9b1\ua9a7\ua9bc\ua9a4\ua9c0\ua9ae\ua9ba\ua9b4\ua981\ua98f\ua9ad\ua9b2\ua9b6\ua982\ua9b2\ua98f\ua9ba\ua98f\ua9a4\ua9c0\ua99b\ua9b6\ua9a9\ua982\ua9a2\ua9b6\ua98f\ua9ad\ua9a4\ua9c0\ua9a2\ua982\ua9a7\ua9ba\ua9a9\ua982\ua9a0\ua9a7\ua9a0\ua9c0\ua9ad\ua9a4\ua9c0\ua9b2\ua98f\ua9c0\ua9b2\ua98f\ua9c0\ua98f\ua981\ua9a5\ua99d\ua9c9  \n \n \n  JG Aksara Jawa , by Jason Glavy \n \n \n     \n \n \n  Tuladha Jejeg , by R.S. Wihananto \n \n \n     \n \n \n  Aturra , by Aditya Bayu \n \n \n     \n \n \n  Adjisaka , by Sudarto HS/Ki Demang Sokowanten \n \n \n     \n \n \n \n first line of the  Universal Declaration of Human Rights  in Javanese. \n \n As of 2013, there are several widely published fonts able to support Javanese, ANSI-based  Hanacaraka/Pallawa  by Teguh Budi Sayoga,   [ 14 ]     Adjisaka  by Sudarto HS/Ki Demang Sokowanten,   [ 15 ]     JG Aksara Jawa  by Jason Glavy,   [ 16 ]     Carakan Anyar  by Pavkar Dukunov,   [ 17 ]    and  Tuladha Jejeg  by R.S. Wihananto,   [ 18 ]    which is based on  Graphite (SIL)  smart font technology. Other fonts with limited publishing includes  Surakarta  made by Matthew Arciniega in 1992 for  Mac 's screen font,   [ 19 ]    and  Tjarakan  developed by AGFA Monotype around 2000.   [ 20 ]    There is also a symbol-based font called  Aturra  developed by Aditya Bayu from 2012-2013.   [ 21 ]    \n Due to the script's complexity, many Javanese fonts have different input method compared to other Indic scripts and may exhibit several flaws. JG Aksara Jawa, in particular, may cause conflicts with other writing system, as the font use code points from other writing systems to complement Javanese's extensive repertoire. This is to be expected, as the font was made before Javanese implementation in  Unicode .   [ 22 ]    \n Arguably, the most \"complete\" font, in terms of technicality and glyph count, is Tuladha Jejeg. It is capable of logical input-method, displaying complex syllable structure, and support extensive glyph repertoire including non-standard form which may not be found in regular Javanese texts, by utilizing  Graphite (SIL)  smart font technology. However, as not many writing systems require such complex feature, use is limited to programs with Graphite technology, such as  Firefox  browser,  Thunderbird  email client, and several  OpenType  word processor. The font was chosen for displaying Javanese script in the Javanese Wikipedia.   [ 11 ]    \n  Unicode   [  edit  ]   \n Javanese script was added to the  Unicode  Standard in October, 2009 with the release of version 5.2. \n The Unicode block for Javanese is U+A980\u2013U+A9DF. There are 91 codepoints for Javanese script: 53 letters, 19 punctuations, 10 numbers, and 9 vowels. Grey areas indicate non-assigned code points: \n \n \n   Javanese    [1]   \n Unicode.org chart  (PDF) \n \n \n \u00a0 \n 0 \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n A \n B \n C \n D \n E \n F \n \n \n U+A98x \n  \ua980  \n  \ua981  \n  \ua982  \n  \ua983  \n  \ua984  \n  \ua985  \n  \ua986  \n  \ua987  \n  \ua988  \n  \ua989  \n  \ua98a  \n  \ua98b  \n  \ua98c  \n  \ua98d  \n  \ua98e  \n  \ua98f  \n \n \n U+A99x \n  \ua990  \n  \ua991  \n  \ua992  \n  \ua993  \n  \ua994  \n  \ua995  \n  \ua996  \n  \ua997  \n  \ua998  \n  \ua999  \n  \ua99a  \n  \ua99b  \n  \ua99c  \n  \ua99d  \n  \ua99e  \n  \ua99f  \n \n \n U+A9Ax \n  \ua9a0  \n  \ua9a1  \n  \ua9a2  \n  \ua9a3  \n  \ua9a4  \n  \ua9a5  \n  \ua9a6  \n  \ua9a7  \n  \ua9a8  \n  \ua9a9  \n  \ua9aa  \n  \ua9ab  \n  \ua9ac  \n  \ua9ad  \n  \ua9ae  \n  \ua9af  \n \n \n U+A9Bx \n  \ua9b0  \n  \ua9b1  \n  \ua9b2  \n  \ua9b3  \n  \ua9b4  \n  \ua9b5  \n  \ua9b6  \n  \ua9b7  \n  \ua9b8  \n  \ua9b9  \n  \ua9ba  \n  \ua9bb  \n  \ua9bc  \n  \ua9bd  \n  \ua9be  \n  \ua9bf  \n \n \n U+A9Cx \n  \ua9c0  \n  \ua9c1  \n  \ua9c2  \n  \ua9c3  \n  \ua9c4  \n  \ua9c5  \n  \ua9c6  \n  \ua9c7  \n  \ua9c8  \n  \ua9c9  \n  \ua9ca  \n  \ua9cb  \n  \ua9cc  \n  \ua9cd  \n  \n  \ua9cf  \n \n \n U+A9Dx \n  \ua9d0  \n  \ua9d1  \n  \ua9d2  \n  \ua9d3  \n  \ua9d4  \n  \ua9d5  \n  \ua9d6  \n  \ua9d7  \n  \ua9d8  \n  \ua9d9  \n  \n  \n  \n  \n  \ua9de  \n  \ua9df  \n \n \n  Notes \n \n 1.   ^    As of Unicode version 6.3  \n \n \n \n \n  Gallery   [  edit  ]   \n \n \n \n \n     \n \n \n Richly illustrated  wayang  figures in  Serat Bratayudha  \n \n \n \n \n \n \n     \n \n \n Opening passage of  Serat Selarasa  \n \n \n \n \n \n \n     \n \n \n Translation of  Romance of Three Kingdoms  in handwritten Javanese \n \n \n \n \n \n \n     \n \n \n  Raden Sagara  using  Madurese language  and printed Javanese \n \n \n \n \n \n \n     \n \n \n Book tittle from 1898, showing European influence in Javanese \n \n \n \n \n \n \n     \n \n \n A street sign in  Surakarta , written with both Latin and Javanese script \n \n \n \n \n \n \n     \n \n \n Bank sign in Javanese \n \n \n \n \n \n \n     \n \n \n Stone stele with Javanese inscription in  Gresik  \n \n \n \n \n \n \n     \n \n \n Bilingual plaque in  Portuguese  and  Javanese  at  Tamansari ,  Yogyakarta  \n \n \n \n \n \n \n     \n \n \n Pakubowono X's inscription, 1938 \n \n \n \n \n \n \n     \n \n \n One of the  wall poems in Leiden ,  Serat Kalatidha , using Javanese script \n \n \n \n \n \n \n     \n \n \n The  Special Region of Yogyakarta  emblem honors the Javanese script \n \n \n \n \n \n \n     \n \n \n Stylized letters in the emblem of the  Yogyakarta Sultanate  \n \n \n \n \n \n \n     \n \n \n Contemporary Javanese calligraphy \n \n \n \n \n   \n  See also   [  edit  ]   \n \n  History of the alphabet  \n  Balinese script , a very similar script used in the neighbouring island of  Bali  \n  Brahmic scripts  \n  Folk etymology  relevant to Javanese etymology \n \n  References   [  edit  ]   \n \n \n  ^     a         b         c         d         e         f         g         h         i         j         k         l         m         n         o         p        Proposal for encoding the Javanese script in the UCS   \n  ^     a         b         c        AGFA Monotype: Javanese. Info on script   \n  ^     a         b         c         d         e         f         g         h         i       Soemarmo, Marmo. \"Javanese Script.\" Ohio Working Papers in Linguistics and Language Teaching 14.Winter (1995): 69-103.  \n  ^     a         b         c       Daniels, Peter T and William Bright. The World's Writing Systems. Ed. Peter T Daniels and William Bright. New York: Oxford University Press, 1996.  \n    ^     Campbell, George L. Compendium of the World's Languages. Vol. 1. New York: Routledge, 2000.  \n    ^     McGlynn, John H. The Indonesian Heritage Vol. 10: Language and Literature. Grolier International, 2002.  \n  ^     a         b       Gallop, Annabel T. Golden Letters: Writing Traditions of Indonesia. Jakarta: Lontar Foundation, 2012. (read online  here )  \n  ^     a         b         c         d       Provincial Goverment of DI Yogyakarta, Central Java, and East Java. Guidelines of Writing Javanese Script. Yogyakarta:Yayasan Pustaka Nusantara, 2003. (read online  here )  \n    ^      Paper from the Javanese Language Congress I   \n    ^      Paper from the Javanese Language Congress III   \n  ^     a         b         c         d         e         f         g         h         i         j         k         l         m       Wihananto, R.S. Guide to Javanese Script Unicode Font (download PDF  here )  \n    ^       \"Javanese Characters and Aji Saka\" . Joglosemar . Retrieved 29 March 2012 .   \u00a0    \n    ^      Ida Bagus Adi Sudewa (14 May 2003).  \"The Balinese Alphabet, v0.6\" . Yayasan Bali Galang . Retrieved 9 November 2013 .   \u00a0    \n    ^      Teguh Budi Sayoga (September 2004).  \"Hanacaraka\"  . Retrieved 9 November 2013 .   \u00a0    \n    ^      Ki Demang Sokowanten (1 November 2009).  \"Adjisaka\"  . Retrieved 9 November 2013 .   \u00a0    \n    ^      Jason Glavy (16 December 2006).  \"JG Aksara Jawa\"  . Retrieved 9 November 2013 .   \u00a0    \n    ^      Pavkar Dukunov (Nov 25, 2011).  \"Carakan Anyar\" . Hanang Hundarko . Retrieved 9 November 2013 .   \u00a0    \n    ^      R.S. Wihananto.  \"Tuladha Jejeg, Javanese Unicode font\"  . Retrieved 9 November 2013 .        "}, {"title": "Programming paradigm", "rank": -0.18124429099273295, "url": "http://en.wikipedia.org/wiki/Programming_paradigm", "links": ["http://en.wikipedia.org/wiki/Action_language", "http://en.wikipedia.org/wiki/Agent-oriented_programming", "http://en.wikipedia.org/wiki/Aspect-oriented_programming", "http://en.wikipedia.org/wiki/Automata-based_programming", "http://en.wikipedia.org/wiki/Concurrent_computing", "http://en.wikipedia.org/wiki/Relativistic_programming", "http://en.wikipedia.org/wiki/Data-driven_programming", "http://en.wikipedia.org/wiki/Declarative_programming", "http://en.wikipedia.org/wiki/Imperative_programming", "http://en.wikipedia.org/wiki/Constraint_programming"], "body": "  \n \n \n     \n \n  This article  needs additional citations for  verification  .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and removed.    (February 2011)    \n \n \n \n \n  Programming paradigms  \n \n \n \n \n  Action  \n  Agent-oriented  \n  Aspect-oriented  \n  Automata-based  \n  Concurrent computing \n \n  Relativistic programming  \n \n \n  Data-driven  \n  Declarative  (contrast:  Imperative )\n \n  Constraint  \n  Dataflow \n \n  Flow-based  \n Cell-oriented ( spreadsheets ) \n  Reactive  \n \n \n  Functional  \n  Logic \n \n  Abductive logic  \n  Answer set  \n  Constraint logic  \n  Functional logic  \n  Inductive logic  \n \n \n \n \n  End-user programming  \n  Event-driven \n \n  Service-oriented  \n  Time-driven  \n \n \n  Expression-oriented  \n  Feature-oriented  \n  Function-level  (contrast:  Value-level ) \n  Generic  \n  Imperative  (contrast:  Declarative )\n \n  Procedural  \n \n \n  Language-oriented \n \n  Discipline-specific  \n  Domain-specific  \n  Grammar-oriented \n \n  Dialecting  \n \n \n  Intentional  \n \n \n  Metaprogramming \n \n  Automatic  \n  Reflective \n \n  Attribute-oriented  \n \n \n  Homoiconic  \n  Template \n \n  Policy-based  \n \n \n \n \n  Non-structured  (contrast:  Structured )\n \n  Array  \n \n \n  Nondeterministic  \n  Parallel computing \n \n  Process-oriented  \n \n \n  Point-free style \n \n  Concatenative  \n \n \n  Semantic  \n  Structured  (contrast:  Non-structured )\n \n  Block-structured  \n  Modular  (contrast:  Monolithic ) \n  Object-oriented (OOP) \n \n By  separation of concerns :\n \n  Aspect-oriented  \n  Role-oriented  \n  Subject-oriented  \n \n \n  Class-based  \n  Prototype-based  \n \n \n  Recursive  \n \n \n  Value-level  (contrast:  Function-level ) \n  Probabilistic  \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n \n \n \n A  programming  paradigm   is a fundamental style of  computer programming , a way of building the structure and elements of computer programs. There are five main paradigms:  imperative ,  functional ,  object-oriented ,  logic  and  symbolic  programming.   [ 1 ]      [ 2 ]    \n  \n \n \n Contents \n \n \n   1   History  \n \n   1.1   Machine code   \n   1.2   Procedural languages   \n   1.3   Object-oriented programming   \n   1.4   Further paradigms   \n \n \n   2   Overview   \n   3   Multi-paradigm   \n   4   Criticism   \n   5   See also   \n   6   References   \n   7   External links   \n \n \n  \n  History   [  edit  ]   \n Different approaches to programming have developed over time, being identified as such either at the time or retrospectively. An early approach consciously identified as such is  structured programming , advocated since the mid 1960s. The concept of a \"programming paradigm\" as such dates at least to 1978, in the  Turing Award  lecture of  Robert W. Floyd , entitled  The Paradigms of Programming,  which cites the notion of paradigm as used by  Thomas Kuhn  in his   The Structure of Scientific Revolutions   (1962).   [ 3 ]    \n  Machine code   [  edit  ]   \n The  lowest level  programming paradigms are  machine code , which directly represents the  instructions  (the contents of program memory) as a sequence of numbers, and  assembly language  where the machine instructions are represented by mnemonics and  memory addresses  can be given symbolic labels. These are sometimes called  first-  and  second-generation  languages. In the 1960s, assembly languages were developed to support library COPY and quite sophisticated conditional macro generation and pre-processing capabilities, CALL to ( subroutines ), external variables and common sections (globals), enabling significant code re-use and isolation from hardware specifics via use of logical operators such as READ/WRITE/GET/PUT. Assembly was, and still is, used for time critical systems and frequently in  embedded systems  as it gives the most direct control of what the machine actually does. \n  Procedural languages   [  edit  ]   \n The next advance was the development of   procedural languages  . These  third-generation  languages (the first described as  high-level languages ) use vocabulary related to the problem being solved. For example, \n \n  COBOL  (COmmon Business Oriented Language)\u00a0\u2013  uses terms like  file ,  move  and  copy . \n  FORTRAN  (FORmula TRANslation)\u00a0\u2013  using  mathematical  language terminology, it was developed mainly for scientific and engineering problems. \n  ALGOL  (ALGOrithmic Language)\u00a0\u2013  focused on being an appropriate language to define  algorithms , while using mathematical language terminology and targeting scientific and engineering problems just like FORTRAN. \n  PL/I  (Programming Language One)\u00a0\u2013  a hybrid commercial/scientific general purpose language supporting  pointers . \n  BASIC  (Beginners All purpose Symbolic Instruction Code)\u00a0\u2013  it was developed to enable more people to write programs. \n  C \u00a0\u2013  a general-purpose programming language, initially developed by  Dennis Ritchie  between 1969 and 1973 at  AT&amp;T Bell Labs . \n \n All these languages follow the procedural paradigm. That is, they describe, step by step, exactly the procedure that should, according to the particular programmer at least, be followed to solve a specific problem. The  efficacy  and  efficiency  of any such solution are both therefore entirely subjective and highly dependent on that programmer's experience, inventiveness and ability. \n  Object-oriented programming   [  edit  ]   \n Later,   object-oriented languages   (like  Simula ,  Smalltalk ,  C++ ,  C# ,  Eiffel  and  Java ) were created. In these languages,  data , and methods of manipulating the data, are kept as a single unit called an  object . The only way that a user can access the data is via the object's 'methods' (subroutines). Because of this, the internal workings of an object may be changed without affecting any code that uses the object. There is still some  controversy  by notable programmers such as  Alexander Stepanov ,  Richard Stallman    [ 4 ]    and others, concerning the efficacy of the  OOP  paradigm versus the procedural paradigm. The necessity of every object to have associative methods leads some skeptics to associate OOP with  software bloat .  Polymorphism  was developed as one attempt to resolve this dilemma. \n Since object-oriented programming is considered a paradigm, not a language, it is possible to create even an object-oriented assembler language.  High Level Assembly  (HLA) is an example of this that fully supports advanced data types and object-oriented assembly language programming - despite its early origins. Thus, differing programming paradigms can be thought of as more like 'motivational  memes ' of their advocates - rather than necessarily representing progress from one level to the next. Precise comparisons of the efficacy of competing paradigms are frequently made more difficult because of new and differing terminology applied to similar (but not identical) entities and processes together with numerous implementation distinctions across languages. \n  Further paradigms   [  edit  ]   \n Within  imperative  programming, which is based on procedural languages,  literate programming , which structures programs as a human-centered web, as in a  hypertext  essay \u2013 documentation is integral to the program, and the program is structured following the logic of prose exposition, rather than compiler convenience. \n Independent of the imperative branch,   declarative programming   paradigms were developed. In these languages the computer is told what the problem is, not how to solve the problem - the program is structured as a collection of properties to find in the expected result, not as a procedure to follow. Given a database or a set of rules, the computer tries to find a solution matching all the desired properties. The archetypical example of a declarative language is the  fourth generation language   SQL , as well as the family of  functional languages  and  logic programming . \n   Functional programming   is a subset of declarative programming. Programs written using this paradigm use  functions , blocks of code intended to behave like  mathematical functions . Functional languages discourage changes in the value of variables through  assignment , making a great deal of use of  recursion  instead. \n The   logic programming   paradigm views computation as  automated reasoning  over a corpus of knowledge. Facts about the  problem domain  are expressed as logic formulae, and programs are executed by applying  inference rules  over them until an answer to the problem is found, or the collection of formulae is proved inconsistent. \n   Symbolic programming   is a paradigm which describes programs able to manipulate formulas and program components as data.   [ 2 ]    Programs can thus effectively modify themselves, and appear to \"learn\", making them suited for applications such as  artificial intelligence ,  expert systems ,  natural language processing  and computer games. Languages that support this paradigm include  LISP  and  Prolog .   [ 5 ]    \n  Overview   [  edit  ]   \n \n    \n \n     \nOverview of the various programming paradigms \n \n \n Just as  software engineering  (as a process) is defined by differing  methodologies , so the  programming languages  (as models of computation) are defined by differing  paradigms . Some languages are designed to support one particular paradigm ( Smalltalk  supports object-oriented programming,  Haskell  supports functional programming), while other programming languages support multiple paradigms (such as  Object Pascal , C++,  Java ,  C# ,  Scala ,  Visual Basic ,  Common Lisp ,  Scheme ,  Perl ,  Python ,  Ruby ,  Oz  and  F# ). For example, programs written in  C++  or  Object Pascal  can be purely  procedural , or purely  object-oriented , or contain elements of both paradigms. Software designers and programmers decide how to use those paradigm elements. \n In object-oriented programming, programmers can think of a program as a collection of interacting objects, while in  functional programming  a program can be thought of as a sequence of stateless function evaluations. When programming computers or systems with many processors,  process-oriented programming  allows programmers to think about applications as sets of concurrent processes acting upon logically shared  data structures . \n Many programming paradigms are as well known for what techniques they  forbid  as for what they enable. For instance, pure functional programming disallows the use of  side-effects , while  structured programming  disallows the use of the  goto  statement. Partly for this reason, new paradigms are often regarded as doctrinaire or overly rigid by those accustomed to earlier styles.   [ 6 ]    Avoiding certain techniques can make it easier to prove theorems about a program's correctness\u2014or simply to understand its behavior. \n (cf. a  programming model  which is an abstraction of a computer system. For example, the \" von Neumann model \" is a model used in traditional sequential computers. For  parallel computing , there are many possible models typically reflecting different ways processors can be interconnected. The most common are based on shared memory, distributed memory with message passing, or a hybrid of the two). \n  Multi-paradigm   [  edit  ]   \n See also:  List of multi-paradigm programming languages  \n A  multi-paradigm programming language  is a  programming language  that supports more than one programming paradigm.   [ 7 ]    As  Leda  designer  Timothy Budd  puts it: \"The idea of a multiparadigm language is to provide a framework in which programmers can work in a variety of styles, freely intermixing constructs from different paradigms.\" The design goal of such languages is to allow programmers to use the best tool for a job, admitting that no one paradigm solves all problems in the easiest or most efficient way. \n One example is  C# , which includes  imperative  and  object-oriented  paradigms as well as some support for  functional programming  through  type inference ,  anonymous functions  and  Language Integrated Query . Some other ones are  F#  and  Scala , which provides similar functionality to C# but also includes full support for  functional programming  (including  currying ,  pattern matching ,  algebraic data types ,  lazy evaluation ,  tail recursion ,  immutability , etc.). Perhaps the most extreme example is  Oz , which has subsets that adhere to  logic  (Oz descends from logic programming),  functional ,  object-oriented ,  dataflow concurrent , and other paradigms. Oz was designed over a ten-year period to combine in a harmonious way concepts that are traditionally associated with different programming paradigms.  Lisp , while often taught as a functional language, is known for its malleability and thus its ability to engulf many paradigms. \n  Criticism   [  edit  ]   \n Some programming language researchers criticise the notion of paradigms as a classification of programming languages, e.g. Krishnamurthi.   [ 8 ]    They argue that many programming languages cannot be strictly classified into one paradigm, but rather include features from several. \n  See also   [  edit  ]   \n \n \n  Comparison of programming paradigms  \n  Type system  \n  Architecture description language  \n  Domain-specific language  \n  Mindset  \n  Modeling language  \n  Paradigm  \n  Programming domain  \n  Turing completeness  \n  Von Neumann programming languages  \n \n \n  References   [  edit  ]   \n \n \n    ^     N\u00f8rmark, Kurt.   Overview of the four main programming paradigms  . Aalborg University, 9 May 2011. Retrieved 22 September 2012.  \n  ^     a         b        Michael A. Covington (2010-08-23).  \"CSCI/ARTI 4540/6540: First Lecture on Symbolic Programming and LISP\"  (PDF). University of Georgia . Retrieved 2013-11-20 .   \u00a0    \n    ^      Floyd, R. W. (1979).  \"The paradigms of programming\" .  Communications of the ACM   22  (8): 455.  doi : 10.1145/359138.359140 .   \u00a0     edit    \n    ^       \"Mode inheritance, cloning, hooks &amp; OOP (Google Groups Discussion)\" .   \u00a0    [   dead link   ]    \n    ^       \"Symbolic programming\" .  Business Glossary . allbusiness.com . Retrieved 2013-11-20 .   \u00a0    \n    ^     Frank Rubin published a criticism of Dijkstra's letter in the March 1987 CACM where it appeared under the title  'GOTO Considered Harmful' Considered Harmful .  Frank Rubin (March 1987).  \"'GOTO Considered Harmful' Considered Harmful\"  (PDF).  Communications of the ACM   30  (3): 195\u2013196.  doi : 10.1145/214748.315722 .   \u00a0    Cite uses deprecated parameters ( help )   [   dead link   ]    \n    ^       \"Multi-Paradigm Programming Language\" . developer.mozilla.org . Retrieved 21 October 2013 .   \u00a0    \n    ^      Krishnamurthi, Shriram (November 2008).  \"Teaching programming languages in a post-linnaean age\" .  SIGPLAN . ACM. pp.\u00a081\u201383. Not. 43, 11.   \u00a0  .  \n \n \n  External links   [  edit  ]   \n \n  Classification of the principal programming paradigms  \n  How programming paradigms evolve and get adopted?  \n \n \n \n \n \n \n  \u00a0 \n Links to related articles \n \n \n \n  \n \n \n \n \n \n \n \n \n \n  \u00a0 \n software engineering \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n Types of  computer languages  \n \n \n \n  \n \n \n \n \n \n  Architecture description  \n  Hardware description  \n  Markup  \n  Modeling  \n  Programming language  \n  Query  \n  Specification  \n  Stylesheet  \n  Template processing  \n  Transformation  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Software engineering  \n \n \n \n  \n \n \n Fields \n \n \n \n  Computer programming  \n  Software Requirements  \n  Software deployment  \n  Software design  \n  Software maintenance  \n  Software testing  \n  Systems analysis  \n  Formal methods  \n \n \n \n \n \n  \n \n \n Concepts \n \n \n \n  Data modeling  \n  Enterprise architecture  \n  Functional specification  \n  Modeling language  \n  Orthogonality  \n  Programming paradigm  \n  Software  \n  Software architecture  \n  Software development methodology  \n  Software development process  \n  Software quality  \n  Software quality assurance  \n  Software archaeology  \n  Structured analysis  \n \n \n \n \n \n  \n \n \n Orientations \n \n \n \n  Agile  \n  Aspect-oriented  \n  Object orientation  \n  Ontology  \n  Service orientation  \n  SDLC  \n \n \n \n \n \n  \n \n \n Models \n \n  \n \n \n \n Developmental \n \n \n \n \n  Agile  \n  EUP  \n  Executable UML  \n  Incremental model  \n  Iterative model  \n  RUP  \n  Scrum  \n  Prototype model  \n  Spiral model  \n  V-Model  \n  Waterfall model  \n  XP  \n \n \n \n \n \n  \n \n \n \n Other \n \n \n \n \n  SPICE  \n  CMMI  \n  Data model  \n  ER model  \n  Function model  \n  Information model  \n  Metamodeling  \n  Object model  \n  Systems model  \n  View model  \n \n \n \n \n \n  \n \n \n \n Languages \n \n \n \n \n  IDEF  \n  UML  \n  SysML  \n \n \n \n \n \n \n \n \n  \n \n \n \n Software \nengineers \n \n \n \n \n  Kent Beck  \n  Grady Booch  \n  Fred Brooks  \n  Barry Boehm  \n  Ward Cunningham  \n  Tom DeMarco  \n  Martin Fowler  \n  C. A. R. Hoare  \n  Watts Humphrey  \n  Michael A. Jackson  \n  Ivar Jacobson  \n  Stephen J. Mellor  \n  Bertrand Meyer  \n  David Parnas  \n  Winston W. Royce  \n  James Rumbaugh  \n  Niklaus Wirth  \n  Edward Yourdon  \n  Victor Basili  \n \n \n \n \n \n  \n \n \n Related fields \n \n \n \n  Computer science  \n  Computer engineering  \n  Project management  \n  Systems engineering  \n \n \n \n \n \n  \n \n \n \n \n \n    Category  \n    Commons  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n Major fields of  computer science  \n \n \n \n  \n \n \n  Mathematical foundations  \n \n \n \n  Mathematical logic  \n  Set theory  \n  Number theory  \n  Graph theory  \n  Type theory  \n  Category theory  \n  Numerical analysis  \n  Information theory  \n  Combinatorics  \n  Boolean algebra  \n \n \n \n \n \n  \n \n \n  Theory of computation  \n \n \n \n  Automata theory  \n  Computability theory  \n  Computational complexity theory  \n  Quantum computing theory  \n \n \n \n \n \n  \n \n \n  Algorithms ,  data structures  \n \n \n \n  Analysis of algorithms  \n  Algorithm design  \n  Computational geometry  \n \n \n \n \n \n  \n \n \n  Programming languages ,  compilers  \n \n \n \n  Parsers  \n  Interpreters  \n  Procedural programming  \n  Object-oriented programming  \n  Functional programming  \n  Logic programming  \n  Programming paradigms  \n \n \n \n \n \n  \n \n \n  Concurrent ,  parallel ,  distributed systems  \n \n \n \n  Multiprocessing  \n  Grid computing  \n  Concurrency control  \n \n \n \n \n \n  \n \n \n  Software engineering  \n \n \n \n  Requirements analysis  \n  Software design  \n  Computer programming  \n  Formal methods  \n  Software testing  \n  Software development process  \n \n \n \n \n \n  \n \n \n  System architecture  \n \n \n \n  Computer architecture  \n  Computer organization  \n  Operating systems  \n \n \n \n \n \n  \n \n \n  Telecommunication ,  networking  \n \n \n \n  Computer audio  \n  Routing  \n  Network topology  \n  Cryptography  \n \n \n \n \n \n  \n \n \n  Databases  \n \n \n \n  Database management systems  \n  Relational databases  \n  SQL  \n  Transactions  \n  Database indexes  \n  Data mining  \n \n \n \n \n \n  \n \n \n  Artificial intelligence  \n \n \n \n  Automated reasoning  \n  Computational linguistics  \n  Computer vision  \n  Evolutionary computation  \n  Expert systems  \n  Machine learning  \n  Natural language processing  \n  Robotics  \n \n \n \n \n \n  \n \n \n  Computer graphics  \n \n \n \n  Visualization  \n  Computer animation  \n  Image processing  \n \n \n \n \n \n  \n \n \n  Human\u2013computer interaction  \n \n \n \n  Computer accessibility  \n  User interfaces  \n  Wearable computing  \n  Ubiquitous computing  \n  Virtual reality  \n \n \n \n \n \n  \n \n \n  Scientific computing  \n \n \n \n  Artificial life  \n  Bioinformatics  \n  Cognitive science  \n  Computational chemistry  \n  Computational neuroscience  \n  Computational physics  \n  Numerical algorithms  \n  Symbolic mathematics  \n \n \n \n \n \n  \n \n \n \n Note: Computer science can also be divided into different topics or fields according to the  ACM Computing Classification System . \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \u00a0 \n programming \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Programming language  generations \n \n \n \n  \n \n \n \n \n \n  Generations Overview \n \n  1GL  \n  2GL  \n  3GL  \n  4GL  \n  5GL  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Programming languages  \n \n \n \n  \n \n \n \n \n \n  Timeline  \n \n \n \n \n \n  \n \n \n \n \n \n  Assembly  \n  BASIC  \n  C  \n  C++  \n  C#  \n  COBOL  \n  Fortran  \n  Java  \n  JavaScript  (JS) \n  Lisp  \n  Pascal  \n  Perl  \n  PHP  \n  Python  \n  Ruby  \n  Smalltalk  \n  Visual Basic .NET  (VB.NET) \n   more...   \n \n \n \n \n \n  \n \n \n \n \n \n     Category   \n     Comparison   \n    Lists \n \n  Alphabetical  \n  Categorical  \n  Generational  \n  Non-English-based  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Types of programming languages  \n \n \n \n  \n \n \n \n \n \n  Array  \n  Aspect-oriented  \n  Class-based  \n  Concatenative  \n  Concurrent  \n  Data-structured  \n  Dataflow  \n  Declarative  \n  Domain-specific  \n  Dynamic  \n  Esoteric  \n  Event-driven  \n  Extensible  \n  Functional  \n  Imperative  \n  Logic  \n  Macro  \n  Metaprogramming  \n  Multi-paradigm  \n  Object-based  \n  Object-oriented  \n  Pipeline  \n  Procedural  \n  Prototype-based  \n  Reflective  \n  Rule-based  \n  Scripting  \n  Synchronous  \n  Templating  \n \n \n \n \n \n  \n \n \n \n \n \n  Assembly  \n  Compiled  \n  Interpreted  \n  Machine  \n \n \n \n \n \n  \n \n \n \n \n \n  Low-level  \n  High-level  \n  Very high-level  \n \n \n \n \n \n  \n \n \n \n \n \n  Non-English-based  \n  Off-side rule  \n  Visual  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Programming paradigm", "rank": -0.2555892563765827, "url": "http://en.wikipedia.org/wiki/Multi-paradigm", "links": ["http://en.wikipedia.org/wiki/Action_language", "http://en.wikipedia.org/wiki/Agent-oriented_programming", "http://en.wikipedia.org/wiki/Aspect-oriented_programming", "http://en.wikipedia.org/wiki/Automata-based_programming", "http://en.wikipedia.org/wiki/Concurrent_computing", "http://en.wikipedia.org/wiki/Relativistic_programming", "http://en.wikipedia.org/wiki/Data-driven_programming", "http://en.wikipedia.org/wiki/Declarative_programming", "http://en.wikipedia.org/wiki/Imperative_programming", "http://en.wikipedia.org/wiki/Constraint_programming"], "body": "  \n \n \n     \n \n  This article  needs additional citations for  verification  .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and removed.    (February 2011)    \n \n \n \n \n  Programming paradigms  \n \n \n \n \n  Action  \n  Agent-oriented  \n  Aspect-oriented  \n  Automata-based  \n  Concurrent computing \n \n  Relativistic programming  \n \n \n  Data-driven  \n  Declarative  (contrast:  Imperative )\n \n  Constraint  \n  Dataflow \n \n  Flow-based  \n Cell-oriented ( spreadsheets ) \n  Reactive  \n \n \n  Functional  \n  Logic \n \n  Abductive logic  \n  Answer set  \n  Constraint logic  \n  Functional logic  \n  Inductive logic  \n \n \n \n \n  End-user programming  \n  Event-driven \n \n  Service-oriented  \n  Time-driven  \n \n \n  Expression-oriented  \n  Feature-oriented  \n  Function-level  (contrast:  Value-level ) \n  Generic  \n  Imperative  (contrast:  Declarative )\n \n  Procedural  \n \n \n  Language-oriented \n \n  Discipline-specific  \n  Domain-specific  \n  Grammar-oriented \n \n  Dialecting  \n \n \n  Intentional  \n \n \n  Metaprogramming \n \n  Automatic  \n  Reflective \n \n  Attribute-oriented  \n \n \n  Homoiconic  \n  Template \n \n  Policy-based  \n \n \n \n \n  Non-structured  (contrast:  Structured )\n \n  Array  \n \n \n  Nondeterministic  \n  Parallel computing \n \n  Process-oriented  \n \n \n  Point-free style \n \n  Concatenative  \n \n \n  Semantic  \n  Structured  (contrast:  Non-structured )\n \n  Block-structured  \n  Modular  (contrast:  Monolithic ) \n  Object-oriented (OOP) \n \n By  separation of concerns :\n \n  Aspect-oriented  \n  Role-oriented  \n  Subject-oriented  \n \n \n  Class-based  \n  Prototype-based  \n \n \n  Recursive  \n \n \n  Value-level  (contrast:  Function-level ) \n  Probabilistic  \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n \n \n \n A  programming  paradigm   is a fundamental style of  computer programming , a way of building the structure and elements of computer programs. There are five main paradigms:  imperative ,  functional ,  object-oriented ,  logic  and  symbolic  programming.   [ 1 ]      [ 2 ]    \n  \n \n \n Contents \n \n \n   1   History  \n \n   1.1   Machine code   \n   1.2   Procedural languages   \n   1.3   Object-oriented programming   \n   1.4   Further paradigms   \n \n \n   2   Overview   \n   3   Multi-paradigm   \n   4   Criticism   \n   5   See also   \n   6   References   \n   7   External links   \n \n \n  \n  History   [  edit  ]   \n Different approaches to programming have developed over time, being identified as such either at the time or retrospectively. An early approach consciously identified as such is  structured programming , advocated since the mid 1960s. The concept of a \"programming paradigm\" as such dates at least to 1978, in the  Turing Award  lecture of  Robert W. Floyd , entitled  The Paradigms of Programming,  which cites the notion of paradigm as used by  Thomas Kuhn  in his   The Structure of Scientific Revolutions   (1962).   [ 3 ]    \n  Machine code   [  edit  ]   \n The  lowest level  programming paradigms are  machine code , which directly represents the  instructions  (the contents of program memory) as a sequence of numbers, and  assembly language  where the machine instructions are represented by mnemonics and  memory addresses  can be given symbolic labels. These are sometimes called  first-  and  second-generation  languages. In the 1960s, assembly languages were developed to support library COPY and quite sophisticated conditional macro generation and pre-processing capabilities, CALL to ( subroutines ), external variables and common sections (globals), enabling significant code re-use and isolation from hardware specifics via use of logical operators such as READ/WRITE/GET/PUT. Assembly was, and still is, used for time critical systems and frequently in  embedded systems  as it gives the most direct control of what the machine actually does. \n  Procedural languages   [  edit  ]   \n The next advance was the development of   procedural languages  . These  third-generation  languages (the first described as  high-level languages ) use vocabulary related to the problem being solved. For example, \n \n  COBOL  (COmmon Business Oriented Language)\u00a0\u2013  uses terms like  file ,  move  and  copy . \n  FORTRAN  (FORmula TRANslation)\u00a0\u2013  using  mathematical  language terminology, it was developed mainly for scientific and engineering problems. \n  ALGOL  (ALGOrithmic Language)\u00a0\u2013  focused on being an appropriate language to define  algorithms , while using mathematical language terminology and targeting scientific and engineering problems just like FORTRAN. \n  PL/I  (Programming Language One)\u00a0\u2013  a hybrid commercial/scientific general purpose language supporting  pointers . \n  BASIC  (Beginners All purpose Symbolic Instruction Code)\u00a0\u2013  it was developed to enable more people to write programs. \n  C \u00a0\u2013  a general-purpose programming language, initially developed by  Dennis Ritchie  between 1969 and 1973 at  AT&amp;T Bell Labs . \n \n All these languages follow the procedural paradigm. That is, they describe, step by step, exactly the procedure that should, according to the particular programmer at least, be followed to solve a specific problem. The  efficacy  and  efficiency  of any such solution are both therefore entirely subjective and highly dependent on that programmer's experience, inventiveness and ability. \n  Object-oriented programming   [  edit  ]   \n Later,   object-oriented languages   (like  Simula ,  Smalltalk ,  C++ ,  C# ,  Eiffel  and  Java ) were created. In these languages,  data , and methods of manipulating the data, are kept as a single unit called an  object . The only way that a user can access the data is via the object's 'methods' (subroutines). Because of this, the internal workings of an object may be changed without affecting any code that uses the object. There is still some  controversy  by notable programmers such as  Alexander Stepanov ,  Richard Stallman    [ 4 ]    and others, concerning the efficacy of the  OOP  paradigm versus the procedural paradigm. The necessity of every object to have associative methods leads some skeptics to associate OOP with  software bloat .  Polymorphism  was developed as one attempt to resolve this dilemma. \n Since object-oriented programming is considered a paradigm, not a language, it is possible to create even an object-oriented assembler language.  High Level Assembly  (HLA) is an example of this that fully supports advanced data types and object-oriented assembly language programming - despite its early origins. Thus, differing programming paradigms can be thought of as more like 'motivational  memes ' of their advocates - rather than necessarily representing progress from one level to the next. Precise comparisons of the efficacy of competing paradigms are frequently made more difficult because of new and differing terminology applied to similar (but not identical) entities and processes together with numerous implementation distinctions across languages. \n  Further paradigms   [  edit  ]   \n Within  imperative  programming, which is based on procedural languages,  literate programming , which structures programs as a human-centered web, as in a  hypertext  essay \u2013 documentation is integral to the program, and the program is structured following the logic of prose exposition, rather than compiler convenience. \n Independent of the imperative branch,   declarative programming   paradigms were developed. In these languages the computer is told what the problem is, not how to solve the problem - the program is structured as a collection of properties to find in the expected result, not as a procedure to follow. Given a database or a set of rules, the computer tries to find a solution matching all the desired properties. The archetypical example of a declarative language is the  fourth generation language   SQL , as well as the family of  functional languages  and  logic programming . \n   Functional programming   is a subset of declarative programming. Programs written using this paradigm use  functions , blocks of code intended to behave like  mathematical functions . Functional languages discourage changes in the value of variables through  assignment , making a great deal of use of  recursion  instead. \n The   logic programming   paradigm views computation as  automated reasoning  over a corpus of knowledge. Facts about the  problem domain  are expressed as logic formulae, and programs are executed by applying  inference rules  over them until an answer to the problem is found, or the collection of formulae is proved inconsistent. \n   Symbolic programming   is a paradigm which describes programs able to manipulate formulas and program components as data.   [ 2 ]    Programs can thus effectively modify themselves, and appear to \"learn\", making them suited for applications such as  artificial intelligence ,  expert systems ,  natural language processing  and computer games. Languages that support this paradigm include  LISP  and  Prolog .   [ 5 ]    \n  Overview   [  edit  ]   \n \n    \n \n     \nOverview of the various programming paradigms \n \n \n Just as  software engineering  (as a process) is defined by differing  methodologies , so the  programming languages  (as models of computation) are defined by differing  paradigms . Some languages are designed to support one particular paradigm ( Smalltalk  supports object-oriented programming,  Haskell  supports functional programming), while other programming languages support multiple paradigms (such as  Object Pascal , C++,  Java ,  C# ,  Scala ,  Visual Basic ,  Common Lisp ,  Scheme ,  Perl ,  Python ,  Ruby ,  Oz  and  F# ). For example, programs written in  C++  or  Object Pascal  can be purely  procedural , or purely  object-oriented , or contain elements of both paradigms. Software designers and programmers decide how to use those paradigm elements. \n In object-oriented programming, programmers can think of a program as a collection of interacting objects, while in  functional programming  a program can be thought of as a sequence of stateless function evaluations. When programming computers or systems with many processors,  process-oriented programming  allows programmers to think about applications as sets of concurrent processes acting upon logically shared  data structures . \n Many programming paradigms are as well known for what techniques they  forbid  as for what they enable. For instance, pure functional programming disallows the use of  side-effects , while  structured programming  disallows the use of the  goto  statement. Partly for this reason, new paradigms are often regarded as doctrinaire or overly rigid by those accustomed to earlier styles.   [ 6 ]    Avoiding certain techniques can make it easier to prove theorems about a program's correctness\u2014or simply to understand its behavior. \n (cf. a  programming model  which is an abstraction of a computer system. For example, the \" von Neumann model \" is a model used in traditional sequential computers. For  parallel computing , there are many possible models typically reflecting different ways processors can be interconnected. The most common are based on shared memory, distributed memory with message passing, or a hybrid of the two). \n  Multi-paradigm   [  edit  ]   \n See also:  List of multi-paradigm programming languages  \n A  multi-paradigm programming language  is a  programming language  that supports more than one programming paradigm.   [ 7 ]    As  Leda  designer  Timothy Budd  puts it: \"The idea of a multiparadigm language is to provide a framework in which programmers can work in a variety of styles, freely intermixing constructs from different paradigms.\" The design goal of such languages is to allow programmers to use the best tool for a job, admitting that no one paradigm solves all problems in the easiest or most efficient way. \n One example is  C# , which includes  imperative  and  object-oriented  paradigms as well as some support for  functional programming  through  type inference ,  anonymous functions  and  Language Integrated Query . Some other ones are  F#  and  Scala , which provides similar functionality to C# but also includes full support for  functional programming  (including  currying ,  pattern matching ,  algebraic data types ,  lazy evaluation ,  tail recursion ,  immutability , etc.). Perhaps the most extreme example is  Oz , which has subsets that adhere to  logic  (Oz descends from logic programming),  functional ,  object-oriented ,  dataflow concurrent , and other paradigms. Oz was designed over a ten-year period to combine in a harmonious way concepts that are traditionally associated with different programming paradigms.  Lisp , while often taught as a functional language, is known for its malleability and thus its ability to engulf many paradigms. \n  Criticism   [  edit  ]   \n Some programming language researchers criticise the notion of paradigms as a classification of programming languages, e.g. Krishnamurthi.   [ 8 ]    They argue that many programming languages cannot be strictly classified into one paradigm, but rather include features from several. \n  See also   [  edit  ]   \n \n \n  Comparison of programming paradigms  \n  Type system  \n  Architecture description language  \n  Domain-specific language  \n  Mindset  \n  Modeling language  \n  Paradigm  \n  Programming domain  \n  Turing completeness  \n  Von Neumann programming languages  \n \n \n  References   [  edit  ]   \n \n \n    ^     N\u00f8rmark, Kurt.   Overview of the four main programming paradigms  . Aalborg University, 9 May 2011. Retrieved 22 September 2012.  \n  ^     a         b        Michael A. Covington (2010-08-23).  \"CSCI/ARTI 4540/6540: First Lecture on Symbolic Programming and LISP\"  (PDF). University of Georgia . Retrieved 2013-11-20 .   \u00a0    \n    ^      Floyd, R. W. (1979).  \"The paradigms of programming\" .  Communications of the ACM   22  (8): 455.  doi : 10.1145/359138.359140 .   \u00a0     edit    \n    ^       \"Mode inheritance, cloning, hooks &amp; OOP (Google Groups Discussion)\" .   \u00a0    [   dead link   ]    \n    ^       \"Symbolic programming\" .  Business Glossary . allbusiness.com . Retrieved 2013-11-20 .   \u00a0    \n    ^     Frank Rubin published a criticism of Dijkstra's letter in the March 1987 CACM where it appeared under the title  'GOTO Considered Harmful' Considered Harmful .  Frank Rubin (March 1987).  \"'GOTO Considered Harmful' Considered Harmful\"  (PDF).  Communications of the ACM   30  (3): 195\u2013196.  doi : 10.1145/214748.315722 .   \u00a0    Cite uses deprecated parameters ( help )   [   dead link   ]    \n    ^       \"Multi-Paradigm Programming Language\" . developer.mozilla.org . Retrieved 21 October 2013 .   \u00a0    \n    ^      Krishnamurthi, Shriram (November 2008).  \"Teaching programming languages in a post-linnaean age\" .  SIGPLAN . ACM. pp.\u00a081\u201383. Not. 43, 11.   \u00a0  .  \n \n \n  External links   [  edit  ]   \n \n  Classification of the principal programming paradigms  \n  How programming paradigms evolve and get adopted?  \n \n \n \n \n \n \n  \u00a0 \n Links to related articles \n \n \n \n  \n \n \n \n \n \n \n \n \n \n  \u00a0 \n software engineering \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n Types of  computer languages  \n \n \n \n  \n \n \n \n \n \n  Architecture description  \n  Hardware description  \n  Markup  \n  Modeling  \n  Programming language  \n  Query  \n  Specification  \n  Stylesheet  \n  Template processing  \n  Transformation  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Software engineering  \n \n \n \n  \n \n \n Fields \n \n \n \n  Computer programming  \n  Software Requirements  \n  Software deployment  \n  Software design  \n  Software maintenance  \n  Software testing  \n  Systems analysis  \n  Formal methods  \n \n \n \n \n \n  \n \n \n Concepts \n \n \n \n  Data modeling  \n  Enterprise architecture  \n  Functional specification  \n  Modeling language  \n  Orthogonality  \n  Programming paradigm  \n  Software  \n  Software architecture  \n  Software development methodology  \n  Software development process  \n  Software quality  \n  Software quality assurance  \n  Software archaeology  \n  Structured analysis  \n \n \n \n \n \n  \n \n \n Orientations \n \n \n \n  Agile  \n  Aspect-oriented  \n  Object orientation  \n  Ontology  \n  Service orientation  \n  SDLC  \n \n \n \n \n \n  \n \n \n Models \n \n  \n \n \n \n Developmental \n \n \n \n \n  Agile  \n  EUP  \n  Executable UML  \n  Incremental model  \n  Iterative model  \n  RUP  \n  Scrum  \n  Prototype model  \n  Spiral model  \n  V-Model  \n  Waterfall model  \n  XP  \n \n \n \n \n \n  \n \n \n \n Other \n \n \n \n \n  SPICE  \n  CMMI  \n  Data model  \n  ER model  \n  Function model  \n  Information model  \n  Metamodeling  \n  Object model  \n  Systems model  \n  View model  \n \n \n \n \n \n  \n \n \n \n Languages \n \n \n \n \n  IDEF  \n  UML  \n  SysML  \n \n \n \n \n \n \n \n \n  \n \n \n \n Software \nengineers \n \n \n \n \n  Kent Beck  \n  Grady Booch  \n  Fred Brooks  \n  Barry Boehm  \n  Ward Cunningham  \n  Tom DeMarco  \n  Martin Fowler  \n  C. A. R. Hoare  \n  Watts Humphrey  \n  Michael A. Jackson  \n  Ivar Jacobson  \n  Stephen J. Mellor  \n  Bertrand Meyer  \n  David Parnas  \n  Winston W. Royce  \n  James Rumbaugh  \n  Niklaus Wirth  \n  Edward Yourdon  \n  Victor Basili  \n \n \n \n \n \n  \n \n \n Related fields \n \n \n \n  Computer science  \n  Computer engineering  \n  Project management  \n  Systems engineering  \n \n \n \n \n \n  \n \n \n \n \n \n    Category  \n    Commons  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n Major fields of  computer science  \n \n \n \n  \n \n \n  Mathematical foundations  \n \n \n \n  Mathematical logic  \n  Set theory  \n  Number theory  \n  Graph theory  \n  Type theory  \n  Category theory  \n  Numerical analysis  \n  Information theory  \n  Combinatorics  \n  Boolean algebra  \n \n \n \n \n \n  \n \n \n  Theory of computation  \n \n \n \n  Automata theory  \n  Computability theory  \n  Computational complexity theory  \n  Quantum computing theory  \n \n \n \n \n \n  \n \n \n  Algorithms ,  data structures  \n \n \n \n  Analysis of algorithms  \n  Algorithm design  \n  Computational geometry  \n \n \n \n \n \n  \n \n \n  Programming languages ,  compilers  \n \n \n \n  Parsers  \n  Interpreters  \n  Procedural programming  \n  Object-oriented programming  \n  Functional programming  \n  Logic programming  \n  Programming paradigms  \n \n \n \n \n \n  \n \n \n  Concurrent ,  parallel ,  distributed systems  \n \n \n \n  Multiprocessing  \n  Grid computing  \n  Concurrency control  \n \n \n \n \n \n  \n \n \n  Software engineering  \n \n \n \n  Requirements analysis  \n  Software design  \n  Computer programming  \n  Formal methods  \n  Software testing  \n  Software development process  \n \n \n \n \n \n  \n \n \n  System architecture  \n \n \n \n  Computer architecture  \n  Computer organization  \n  Operating systems  \n \n \n \n \n \n  \n \n \n  Telecommunication ,  networking  \n \n \n \n  Computer audio  \n  Routing  \n  Network topology  \n  Cryptography  \n \n \n \n \n \n  \n \n \n  Databases  \n \n \n \n  Database management systems  \n  Relational databases  \n  SQL  \n  Transactions  \n  Database indexes  \n  Data mining  \n \n \n \n \n \n  \n \n \n  Artificial intelligence  \n \n \n \n  Automated reasoning  \n  Computational linguistics  \n  Computer vision  \n  Evolutionary computation  \n  Expert systems  \n  Machine learning  \n  Natural language processing  \n  Robotics  \n \n \n \n \n \n  \n \n \n  Computer graphics  \n \n \n \n  Visualization  \n  Computer animation  \n  Image processing  \n \n \n \n \n \n  \n \n \n  Human\u2013computer interaction  \n \n \n \n  Computer accessibility  \n  User interfaces  \n  Wearable computing  \n  Ubiquitous computing  \n  Virtual reality  \n \n \n \n \n \n  \n \n \n  Scientific computing  \n \n \n \n  Artificial life  \n  Bioinformatics  \n  Cognitive science  \n  Computational chemistry  \n  Computational neuroscience  \n  Computational physics  \n  Numerical algorithms  \n  Symbolic mathematics  \n \n \n \n \n \n  \n \n \n \n Note: Computer science can also be divided into different topics or fields according to the  ACM Computing Classification System . \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n  \u00a0 \n programming \n \n \n \n  \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Programming language  generations \n \n \n \n  \n \n \n \n \n \n  Generations Overview \n \n  1GL  \n  2GL  \n  3GL  \n  4GL  \n  5GL  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Programming languages  \n \n \n \n  \n \n \n \n \n \n  Timeline  \n \n \n \n \n \n  \n \n \n \n \n \n  Assembly  \n  BASIC  \n  C  \n  C++  \n  C#  \n  COBOL  \n  Fortran  \n  Java  \n  JavaScript  (JS) \n  Lisp  \n  Pascal  \n  Perl  \n  PHP  \n  Python  \n  Ruby  \n  Smalltalk  \n  Visual Basic .NET  (VB.NET) \n   more...   \n \n \n \n \n \n  \n \n \n \n \n \n     Category   \n     Comparison   \n    Lists \n \n  Alphabetical  \n  Categorical  \n  Generational  \n  Non-English-based  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Types of programming languages  \n \n \n \n  \n \n \n \n \n \n  Array  \n  Aspect-oriented  \n  Class-based  \n  Concatenative  \n  Concurrent  \n  Data-structured  \n  Dataflow  \n  Declarative  \n  Domain-specific  \n  Dynamic  \n  Esoteric  \n  Event-driven  \n  Extensible  \n  Functional  \n  Imperative  \n  Logic  \n  Macro  \n  Metaprogramming  \n  Multi-paradigm  \n  Object-based  \n  Object-oriented  \n  Pipeline  \n  Procedural  \n  Prototype-based  \n  Reflective  \n  Rule-based  \n  Scripting  \n  Synchronous  \n  Templating  \n \n \n \n \n \n  \n \n \n \n \n \n  Assembly  \n  Compiled  \n  Interpreted  \n  Machine  \n \n \n \n \n \n  \n \n \n \n \n \n  Low-level  \n  High-level  \n  Very high-level  \n \n \n \n \n \n  \n \n \n \n \n \n  Non-English-based  \n  Off-side rule  \n  Visual  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Scripting language", "rank": 0.12114220085524068, "url": "http://en.wikipedia.org/wiki/Scripting_language", "links": ["http://en.wikipedia.org/wiki/Programming_language", "http://en.wikipedia.org/wiki/Run-time_environment", "http://en.wikipedia.org/wiki/Interpreted_language", "http://en.wikipedia.org/wiki/Compiler", "http://en.wikipedia.org/wiki/Automate", "http://en.wikipedia.org/wiki/Execution_(computing)", "http://en.wikipedia.org/wiki/Software_application", "http://en.wikipedia.org/wiki/Web_page", "http://en.wikipedia.org/wiki/Web_browser", "http://en.wikipedia.org/wiki/Shell_script"], "body": "  A  scripting language  or  script language  is a  programming language  that supports  scripts , programs written for a special  run-time environment  that can  interpret  (rather than  compile ) and  automate  the  execution  of tasks which could alternatively be executed one-by-one by a human operator. Environments that can be automated through scripting include  software applications ,  web pages  within a  web browser , the  shells  of  operating systems  (OS), and  embedded systems . A scripting language can be viewed as a  domain-specific language  for a particular environment; in the case of scripting an application, this is also known as an  extension language . Scripting languages are also sometimes referred to as  very high-level programming languages , as they operate at a high level of abstraction. \n The term \"scripting language\" is also used loosely to refer to  dynamic   high-level   general-purpose language , such as  Perl ,   [ 1 ]     Tcl , and  Python ,   [ 2 ]    with the term \"script\" often used for small programs (up to a few thousand lines of code) in such languages, or in domain-specific languages such as the text-processing languages  sed  and  AWK . Some of these languages were originally developed for use within a particular environment, and later developed into portable domain-specific or general-purpose languages. Conversely, many general-purpose languages have dialects that are used as scripting languages. This article discusses scripting languages in the narrow sense of languages for a specific environment; dynamic, general-purpose, and high-level languages are discussed at those articles. \n The spectrum of scripting languages ranges from very small and highly  domain-specific languages  to general-purpose programming languages used for scripting. Standard examples of scripting languages for specific environments include:  bash , for the  Unix  or  Unix-like   operating systems ;  ECMAScript  ( JavaScript ), for web browsers; and  Visual Basic for Applications , for  Microsoft Office  applications.  Lua  is a language designed and widely used as an extension language. Python is a general-purpose language that is also commonly used as an extension language, while ECMAScript is still primarily a scripting language for web browsers, but is also used as a general-purpose language. The  Emacs Lisp  dialect of  Lisp  (for the  Emacs  editor) and the Visual Basic for Applications dialect of  Visual Basic  are examples of scripting language dialects of general-purpose languages. Some game systems, notably the  Trainz  franchise of Railroad simulators have been extensively extended in functionality by scripting extensions. \n  \n \n \n Contents \n \n \n   1   Characteristics   \n   2   History   \n   3   Types of scripting languages  \n \n   3.1   Job control languages and shells   \n   3.2   GUI scripting   \n   3.3   Application-specific languages   \n   3.4   Extension/embeddable languages   \n   3.5   Glue language   \n \n \n   4   See also   \n   5   References   \n   6   External links   \n \n \n  \n  Characteristics   [  edit  ]   \n In principle any language can be used as a scripting language, given libraries or bindings for a specific environment. Formally speaking, \"scripting\" is a property of the primary implementations and uses of a language, hence the ambiguity about whether a language \"is\" a scripting language for languages with multiple implementations. However, many languages are not very suited for use as scripting languages and are rarely if ever used as such. \n Typically scripting languages are intended to be very fast to pick up and author programs in. This generally implies relatively simple  syntax  and  semantics . For example, it is uncommon to use  Java  as a scripting language due to the lengthy syntax and restrictive rules about which classes exist in which files \u2013 contrast to Python, where it is possible to briefly define some functions in a file. A scripting language is usually  interpreted  from source code or  bytecode .   [ 3 ]    By contrast, the software environment the scripts are written for is typically written in a  compiled language  and distributed in  machine code  form. Scripting languages may be designed for use by end users of a program \u2013  end-user development  \u2013 or may be only for internal use by developers, so they can write portions of the program in the scripting language. \n Scripts are often created or modified by the person executing them,   [ 4 ]    though they are also often distributed, such as when large portions of games are written in a scripting language. In many implementations a script or portions of one may be executed interactively on a command line. \n  History   [  edit  ]   \n Early  mainframe computers  (in the 1950s) were non-interactive, instead using  batch processing . IBM's  Job Control Language  (JCL) is the archetype of languages used to control batch processing.   [ 5 ]    \n The first interactive  shells  were developed in the 1960s to enable remote operation of the first  time-sharing  systems, and these used  shell scripts , which controlled running computer programs within a computer program, the shell.  Calvin Mooers  in his  TRAC  language is generally credited with inventing  command substitution , the ability to embed commands in scripts that when interpreted insert a character string into the script.   [ 6 ]     Multics  calls these  active functions .   [ 7 ]     Louis Pouzin  wrote an early processor for command scripts called RUNCOM for  CTSS  around 1964.  Stuart Madnick  at MIT wrote a scripting language for IBM's  CP/CMS  in 1966. He originally called this processor COMMAND, later named  EXEC .   [ 8 ]    Multics included an offshoot of CTSS RUNCOM, also called RUNCOM.   [ 9 ]    \n Languages such as  Tcl  and  Lua  were specifically designed as general purpose scripting languages that could be embedded in any application. Other languages such as  Visual Basic for Applications  (VBA) provided strong integration with the automation facilities of an underlying system. Embedding of such general purpose scripting languages instead of developing a new language for each application also had obvious benefits, relieving the application developer of the need to code a language translator from scratch and allowing the user to apply skills learned elsewhere. \n Some software incorporates several different scripting languages. Modern  web browsers  typically provide a language for writing extensions to the browser itself, and several standard embedded languages for controlling the browser, including  JavaScript  (a dialect of  ECMAScript ) or  XUL . \n  Types of scripting languages   [  edit  ]   \n  Job control languages and shells   [  edit  ]   \n Main article:  Shell script  \n A major class of scripting languages has grown out of the automation of  job control , which relates to starting and controlling the behavior of system programs. (In this sense, one might think of shells as being descendants of IBM's JCL, or  Job Control Language , which was used for exactly this purpose.) Many of these languages' interpreters double as  command-line interpreters  such as the  Unix shell  or the MS-DOS   COMMAND.COM  . Others, such as  AppleScript  offer the use of English-like commands to build scripts. \n  GUI scripting   [  edit  ]   \n With the advent of graphical user interfaces, a specialized kind of scripting language emerged for controlling a computer. These languages interact with the same graphic windows, menus, buttons, and so on that a human user would. They do this by simulating the actions of a user. These languages are typically used to automate user actions. Such languages are also called \" macros \" when control is through simulated key presses or mouse clicks. \n These languages could in principle be used to control any GUI application; but, in practice their use is limited because their use needs support from the application and from the  operating system . There are a few exceptions to this limitation. Some GUI scripting languages are based on recognizing graphical objects from their display screen  pixels . These GUI scripting languages do not depend on support from the operating system or application.. \n  Application-specific languages   [  edit  ]   \n Many large application programs include an idiomatic scripting language tailored to the needs of the application user. Likewise, many  computer game  systems use a custom scripting language to express the programmed actions of  non-player characters  and the game environment. Languages of this sort are designed for a single application; and, while they may superficially resemble a specific general-purpose language (e.g.  QuakeC , modeled after C), they have custom features that distinguish them.  Emacs Lisp , while a fully formed and capable dialect of  Lisp , contains many special features that make it most useful for extending the editing functions of Emacs. An application-specific scripting language can be viewed as a  domain-specific programming language  specialized to a single application. \n  Extension/embeddable languages   [  edit  ]   \n A number of languages have been designed for the purpose of replacing application-specific scripting languages by being embeddable in application programs. The application programmer (working in C or another systems language) includes \"hooks\" where the scripting language can control the application. These languages may be technically equivalent to an application-specific extension language but when an application embeds a \"common\" language, the user gets the advantage of being able to transfer skills from application to application. A more generic alternative is simply to provide a library (often a C library) which a general-purpose language can use to control the application, without modifying the language for the specific domain. \n JavaScript began as and primarily still is a language for scripting inside  web browsers ; however, the standardization of the language as  ECMAScript  has made it popular as a general purpose embeddable language. In particular, the  Mozilla  implementation  SpiderMonkey  is embedded in several environments such as the  Yahoo! Widget Engine . Other applications embedding ECMAScript implementations include the  Adobe  products  Adobe Flash  ( ActionScript ) and  Adobe Acrobat  (for scripting  PDF  files). \n  Tcl  was created as an extension language but has come to be used more frequently as a general purpose language in roles similar to  Python ,  Perl , and  Ruby . On the other hand,  Rexx  was originally created as a job control language, but is widely used as an extension language as well as a general purpose language. Perl is a general-purpose language, but had the Oraperl (1990) dialect, consisting of a  Perl  4 binary with  Oracle Call Interface  compiled in. This has however since been replaced by a library (Perl Module),  DBD::Oracle .   [ 10 ]      [ 11 ]    \n Other complex and task-oriented applications may incorporate and expose an embedded programming language to allow their users more control and give them more functionality than can be available through a user interface, no matter how sophisticated. For example,  Autodesk Maya  3D authoring tools embed the  MEL  scripting language, or  Blender  which has  Python  to fill this role. \n Some other types of applications that need faster feature addition or tweak-and-run cycles (e.g.  game engines ) also use an embedded language. During the development, this allows them to prototype features faster and tweak more freely, without the need for the user to have intimate knowledge of the inner workings of the application or to rebuild it after each tweak (which can take a significant amount of time). The scripting languages used for this purpose range from the more common and more famous  Lua  and  Python  to lesser-known ones such as  AngelScript  and  Squirrel . \n  Ch  is another C compatible scripting option for the industry to embed into C/C++ application programs. \n  Glue language   [  edit  ]   \n Main article:  Glue language  \n \n \n     \n  This section requires  expansion .   (August 2013)    \n \n \n Scripting is often contrasted with  system programming , as in  Ousterhout's dichotomy  or \" programming in the large and programming in the small \". In this view, scripting is particularly  glue code , connecting system components, and a language specialized for this purpose is a  glue language . Pipelines and shell scripting are archetypal examples of glue languages, and Perl was initially developed to fill this same role. The characterization of glue languages as scripting languages is ambiguous, however, as if a substantial amount of logic is part of the \"glue\" code, it is better characterized as simply another software component. \n  See also   [  edit  ]   \n \n  Architecture description language  \n  Build automation  \n  Interpreter directive  /  Shebang (Unix)  \n  Templating language  \n \n  References   [  edit  ]   \n \n \n    ^      Sheppard, Doug (2000-10-16).  \"Beginner's Introduction to Perl\" . dev.perl.org . Retrieved 2011-01-08 .   \u00a0    \n    ^      Programming is Hard, Let's Go Scripting... ,  Larry Wall , December 6, 2007  \n    ^      Brown, Vicki.  \"Scripting Languages\"  . Retrieved 2009-07-22 .   \u00a0    \n    ^     IEEE Computer, 2008,   In praise of scripting ,   Ronald Loui  author  \n    ^      IBM Corporation (1967).   IBM System/360 Operating System Job Control Language (C28-6529-4)  .   \u00a0    \n    ^      Mooers, Calvin.  \"TRAC, A Procedure-Describing Language for the Reactive Typewriter\" . Archived from  the original  on 2001-04-25 . Retrieved Mar 9, 1012 .   \u00a0    \n    ^      Van Vleck(ed.), Thomas.  \"Multics Glossary -A- (active function)\"  . Retrieved Mar 9, 2012 .   \u00a0    \n    ^      Varian, Melinda.  \"VM AND THE VM COMMUNITY: Past, Present, and Future\"  . Retrieved Mar 9, 2012 .   \u00a0    \n    ^      Van Vleck, Thomas(ed.).  \"Multics Glossary -R- (RUNCOM)\"  . Retrieved Mar 9, 2012 .   \u00a0    \n    ^      Oraperl , CPAN]  \n    ^      Perl ,  Underground Oracle FAQ   \n \n \n  External links   [  edit  ]   \n \n  Patterns for Scripted Applications  \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Types of programming languages  \n \n \n \n  \n \n \n \n \n \n  Array  \n  Aspect-oriented  \n  Class-based  \n  Concatenative  \n  Concurrent  \n  Data-structured  \n  Dataflow  \n  Declarative  \n  Domain-specific  \n  Dynamic  \n  Esoteric  \n  Event-driven  \n  Extensible  \n  Functional  \n  Imperative  \n  Logic  \n  Macro  \n  Metaprogramming  \n  Multi-paradigm  \n  Object-based  \n  Object-oriented  \n  Pipeline  \n  Procedural  \n  Prototype-based  \n  Reflective  \n  Rule-based  \n  Scripting  \n  Synchronous  \n  Templating  \n \n \n \n \n \n  \n \n \n \n \n \n  Assembly  \n  Compiled  \n  Interpreted  \n  Machine  \n \n \n \n \n \n  \n \n \n \n \n \n  Low-level  \n  High-level  \n  Very high-level  \n \n \n \n \n \n  \n \n \n \n \n \n  Non-English-based  \n  Off-side rule  \n  Visual  \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Prototype-based programming", "rank": -0.036052433570228457, "url": "http://en.wikipedia.org/wiki/Prototype-based_programming", "links": ["http://en.wikipedia.org/wiki/Prototype_(computer_science)", "http://en.wikipedia.org/wiki/Prototype_pattern", "http://en.wikipedia.org/wiki/Programming_paradigm", "http://en.wikipedia.org/wiki/Action_language", "http://en.wikipedia.org/wiki/Agent-oriented_programming", "http://en.wikipedia.org/wiki/Aspect-oriented_programming", "http://en.wikipedia.org/wiki/Automata-based_programming", "http://en.wikipedia.org/wiki/Concurrent_computing", "http://en.wikipedia.org/wiki/Relativistic_programming", "http://en.wikipedia.org/wiki/Data-driven_programming"], "body": "  For other uses, see  Prototype (computer science) . \n Not to be confused with  prototype pattern . \n \n \n  Programming paradigms  \n \n \n \n \n  Action  \n  Agent-oriented  \n  Aspect-oriented  \n  Automata-based  \n  Concurrent computing \n \n  Relativistic programming  \n \n \n  Data-driven  \n  Declarative  (contrast:  Imperative )\n \n  Constraint  \n  Dataflow \n \n  Flow-based  \n Cell-oriented ( spreadsheets ) \n  Reactive  \n \n \n  Functional  \n  Logic \n \n  Abductive logic  \n  Answer set  \n  Constraint logic  \n  Functional logic  \n  Inductive logic  \n \n \n \n \n  End-user programming  \n  Event-driven \n \n  Service-oriented  \n  Time-driven  \n \n \n  Expression-oriented  \n  Feature-oriented  \n  Function-level  (contrast:  Value-level ) \n  Generic  \n  Imperative  (contrast:  Declarative )\n \n  Procedural  \n \n \n  Language-oriented \n \n  Discipline-specific  \n  Domain-specific  \n  Grammar-oriented \n \n  Dialecting  \n \n \n  Intentional  \n \n \n  Metaprogramming \n \n  Automatic  \n  Reflective \n \n  Attribute-oriented  \n \n \n  Homoiconic  \n  Template \n \n  Policy-based  \n \n \n \n \n  Non-structured  (contrast:  Structured )\n \n  Array  \n \n \n  Nondeterministic  \n  Parallel computing \n \n  Process-oriented  \n \n \n  Point-free style \n \n  Concatenative  \n \n \n  Semantic  \n  Structured  (contrast:  Non-structured )\n \n  Block-structured  \n  Modular  (contrast:  Monolithic ) \n  Object-oriented (OOP) \n \n By  separation of concerns :\n \n  Aspect-oriented  \n  Role-oriented  \n  Subject-oriented  \n \n \n  Class-based  \n  Prototype-based  \n \n \n  Recursive  \n \n \n  Value-level  (contrast:  Function-level ) \n  Probabilistic  \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n \n \n \n  Prototype-based programming  is a style of  object-oriented programming  in which behaviour reuse (known as  inheritance ) is performed via a process of  cloning  existing  objects  that serve as  prototypes . This model can also be known as  prototypal ,  prototype-oriented,   classless , or  instance-based  programming.  Delegation  is the language feature that supports prototype-based programming. \n A fruit bowl serves as one example. A \"fruit\" object would represent the properties and functionality of fruit in general. A \"banana\" object would be cloned from the \"fruit\" object, and would also be extended to include general properties specific to bananas. Each individual \"banana\" object would be cloned from the generic \"banana\" object. \n The first prototype-oriented  programming language  was  Self  developed by  David Ungar  and  Randall Smith  in the mid-1980s to research topics in object-oriented language design. Since the late 1990s, the classless paradigm has grown increasingly popular. Some current prototype-oriented languages are  JavaScript  (and other  ECMAScript  implementations,  JScript  and  Flash 's  ActionScript  1.0),  Cecil ,  NewtonScript ,  Io ,  MOO ,  REBOL , and  Lisaac . \n  \n \n \n Contents \n \n \n   1   Design and implementation   \n   2   Object construction   \n   3   Delegation   \n   4   Concatenation   \n   5   Criticism   \n   6   Languages supporting prototype-based programming   \n   7   References   \n   8   Further reading   \n   9   See also   \n \n \n  \n  Design and implementation   [  edit  ]   \n Prototypal inheritance in JavaScript is described by  Douglas Crockford  as:  you make prototype objects, and then ... make new instances. Objects are mutable in JavaScript, so we can augment the new instances, giving them new fields and methods. These can then act as prototypes for even newer objects. We don't need classes to make lots of similar objects....Objects inherit from objects. What could be more object oriented than that? .   [ 1 ]    \n Advocates of prototype-based programming argue that it encourages the programmer to focus on the behavior of some set of examples and only later worry about classifying these objects into archetypal objects that are later used in a fashion similar to  classes .   [ 2 ]    As such, many prototype-based systems encourage the alteration of prototypes during  run-time , whereas only very few class-based object-oriented systems (such as the dynamic object-oriented system,  Common Lisp ,  Dylan ,  Smalltalk ,  Objective-C ,  Python ,  Perl , or  Ruby ) allow classes to be altered during the execution of a program. \n Almost all prototype-based systems are based on interpreted and  dynamically typed  languages. Systems based on  statically typed  languages are technically feasible, however. The Omega language discussed in  Prototype-Based Programming    [ 3 ]    is an example of such a system, though according to Omega's website even Omega is not exclusively static, but rather its \"compiler may choose to use static binding where this is possible and may improve the efficiency of a program.\" \n  Object construction   [  edit  ]   \n In prototype-based languages there are no explicit classes and objects inherit directly from other objects with which they are linked through a property, often called  prototype  as in the case of  Javascript . There are two methods of constructing new objects:   ex nihilo   (\"from nothing\") object creation or through  cloning  an existing object. The former is supported through some form of object  literal , declarations where objects can be defined at runtime through special syntax such as  {...}  and passed directly to a variable. While most systems support a variety of cloning,  ex nihilo  object creation is not as prominent.   [ 4 ]    \n In class-based languages, a new instance is constructed through a class's  constructor function , a special function that reserves a block of memory for the object's members (properties and methods) and returns a reference to that block. An optional set of constructor  arguments  can be passed to the function and are usually held in properties. The resulting instance will inherit all the methods and properties that were defined in the class, which acts as a kind of template from which similar typed objects can be constructed. \n Systems that support  ex nihilo  object creation allow new objects to be created from scratch without cloning from an existing prototype. Such systems provide a special syntax for specifying the properties and behaviors of new objects without referencing existing objects. In many prototype languages there exists a root object, often called  Object , which is set as the default prototype for all other objects created in run-time and which carries commonly needed methods such as a  toString()  function to return a description of the object as a string. One useful aspect of  ex nihilo  object creation is to ensure that a new object's slot names do not have  namespace  conflicts with the top-level  Object  object. (In the  Mozilla   JavaScript  implementation, one can do this by setting a newly constructed object's  __proto__  property to null.) \n  Cloning  refers to a process whereby a new object is constructed by copying the behavior of an existing object (its prototype). The new object then carries all the qualities of the original. From this point on, the new object can be modified. In some systems the resulting child object maintains an explicit link (via   delegation   or   resemblance  ) to its prototype, and changes in the prototype cause corresponding changes to be apparent in its clone. Other systems, such as the  Forth -like programming language  Kevo , do not propagate change from the prototype in this fashion, and instead follow a more  concatenative  model where changes in cloned objects do not automatically propagate across descendants.   [ 2 ]    \n \n \n \n // Example of true prototypical inheritance style  \n // in JavaScript. \n \n // \"ex nihilo\" object creation using the literal  \n // object notation {}. \n var  foo  =   { name :   \"foo\"  ,  one :   1  ,  two :   2  }  ; \n \n // Another \"ex nihilo\" object. \n var  bar  =   { two :   \"two\"  ,  three :   3  }  ; \n \n // Gecko and Webkit JavaScript engines can directly  \n // manipulate the internal prototype link. \n // For the sake of simplicity, let us pretend  \n // that the following line works regardless of the  \n // engine used: \nbar. __proto__   =  foo ;   // foo is now the prototype of bar. \n \n // If we try to access foo's properties from bar  \n // from now on, we'll succeed.  \nbar. one   // Resolves to 1. \n \n // The child object's properties are also accessible. \nbar. three   // Resolves to 3. \n \n // Own properties shadow prototype properties \nbar. two  ;   // Resolves to \"two\" \nfoo. name  ;   // unaffected, resolves to \"foo\" \nbar. name  ;   // Resolves to \"foo\" \n  \n \n This example in JS 1.8.5 + ( see  http://kangax.github.com/es5-compat-table/  ) \n \n \n \n var  foo  =   { one :   1  ,  two :   2  }  ; \n \n // bar.[[prototype]] = foo \n var  bar  =   Object . create  (  foo  )  ; \n \nbar. three   =   3  ; \n \nbar. one  ;   // 1 \nbar. two  ;   // 2 \nbar. three  ;   // 3 \n  \n \n  Delegation   [  edit  ]   \n In prototype-based languages that use  delegation , the language runtime is capable of  dispatching  the correct method or finding the right piece of data simply by following a series of delegation pointers (from object to its prototype) until a match is found. All that is required to establish this behavior-sharing between objects is the delegation pointer. Unlike the relationship between class and instance in class-based object-oriented languages, the relationship between the prototype and its offshoots does not require that the child object have a memory or structural similarity to the prototype beyond this link. As such, the child object can continue to be modified and amended over time without rearranging the structure of its associated prototype as in class-based systems. It is also important to note that not only data but also methods can be added or changed. For this reason, some prototype-based languages refer to both data and methods as \"slots\" or \"members\". [   citation needed   ]  \n  Concatenation   [  edit  ]   \n Under pure prototyping, which is also referred to as  concatenative  prototyping, and is exemplified in the Kevo language, there are no visible pointers or links to the original prototype from which an object is cloned. The prototype (parent) object is copied rather than linked to. As a result, changes to the prototype will not be reflected in cloned objects. \n The main conceptual difference under this arrangement is that changes made to a prototype object are not automatically propagated to clones. This may be seen as an advantage or disadvantage. (However, Kevo does provide additional primitives for publishing changes across sets of objects based on their similarity \u2014 so-called  family resemblances  \u2014 rather than through taxonomic origin, as is typical in the delegation model.) It is also sometimes claimed that delegation-based prototyping has an additional disadvantage in that changes to a child object may affect the later operation of the parent. However, this problem is not inherent to the delegation-based model and does not exist in delegation-based languages such as JavaScript, which ensure that changes to a child object are always recorded in the child object itself and never in parents (i.e. the child's value shadows the parent's value rather than changing the parent's value). \n In simplistic implementations, concatenative prototyping will have faster member lookup than delegation-based prototyping (because there is no need to follow the chain of parent objects), but will conversely use more memory (because all slots are copied, rather than there being a single slot pointing to the parent object). More sophisticated implementations can avoid these problems, however, although trade-offs between speed and memory are required. For example, systems with concatenative prototyping can use a  copy-on-write  implementation to allow for behind-the-scenes data sharing \u2014 and such an approach is indeed followed by Kevo.   [ 5 ]    Conversely, systems with delegation-based prototyping can use  caching  to speed up data lookup. \n  Criticism   [  edit  ]   \n Advocates of class-based object models who criticize prototype-based systems often have concerns that could be seen as similar to the concerns that proponents of static type systems for programming languages have of dynamic type systems (see  datatype ). Usually, such concerns involve:  correctness ,  safety ,  predictability ,  efficiency  and programmer unfamiliarity. \n On the first three points, classes are often seen as analogous to types (in most statically typed object-oriented languages they serve that role) and are proposed to provide contractual guarantees to their instances, and to users of their instances, that they will behave in some given fashion. \n Regarding efficiency, declaring classes simplifies many  compiler  optimizations that allow developing efficient method and instance-variable lookup. For the  Self  language, much development time was spent on developing, compiling, and interpreting techniques to improve the performance of prototype-based systems versus class-based systems. \n A common criticism made against prototype-based languages is that the community of  software developers  is unfamiliar with them, despite the popularity and market permeation of  JavaScript . This knowledge level of prototype-based systems seems to be increasing with the proliferation of  JavaScript frameworks  and the complex use of JavaScript as \" the web \" matures. [   citation needed   ]  \n  Languages supporting prototype-based programming   [  edit  ]   \n \n  Actor-Based Concurrent Language  (ABCL):  ABCL/1 ,  ABCL/R ,  ABCL/R2 ,  ABCL/c+  \n  Agora  \n  Cecil  \n  Cel  \n  ColdC  \n  ECMAScript \n \n  ActionScript  1.0, used by  Adobe Flash  and  Adobe Flex  \n  E4X  \n  JavaScript  \n  JScript  \n \n \n  Falcon  \n  Io  \n  Ioke  \n  Lisaac  \n  Logtalk  \n  LPC  \n  Lua  \n  MOO  \n  Neko  \n  NewtonScript  \n  Obliq  \n  Object Lisp  \n Omega \n  OpenLaszlo  \n  Perl , with the Class::Prototyped module \n  R , with the proto package \n  REBOL  \n  Self  \n  Seph  \n  SmartFrog  \n  TADS  \n  Tcl  with  snit  extension \n  Python (programming language)  with the prototype.py module, found on GitHub. \n \n  References   [  edit  ]   \n \n \n    ^      Crockford, Douglas.  \"Prototypal Inheritance in JavaScript\"  . Retrieved 20 August 2013 .   \u00a0    \n  ^     a         b        Taivalsaari, Antero. \"Section 1.1\".  Classes vs. Prototypes: Some Philosophical and Historical Observations . p.\u00a014.  CiteSeerX :   10.1.1.56.4713  .   \u00a0    \n    ^      Blaschek, G\u00fcnther. \"Section 2.8\".  Omega: Statically Typed Prototypes . p.\u00a0177.   \u00a0    \n    ^      Dony, Chistophe; Malenfan, Jacques; Bardou, Daniel.  \"Section 1.2\" .  Classifying Prototype-based Programming Languages . p.\u00a017.   \u00a0    \n    ^      Taivalsaari, Antero (1992). \"Kevo, a prototype-based object-oriented programming language based on concatenation and module operations\".  Technical Report Report LACIR 92-02  (University of Victoria).   \u00a0    \n \n \n  Further reading   [  edit  ]   \n \n \n   \n The Wikibook   Computer programming   has a page on the topic of:    Object oriented programming    \n \n \n \n  James Noble (ed.), Antero Taivalsaari (ed.), Ivan Moore (ed.), ed. (1999).  Prototype-Based Programming: Concepts, Languages and Applications . Springer-Verlag.  ISBN \u00a0 981-4021-25-3 .   \u00a0   \n   Abadi, Martin ;  Luca Cardelli .  A Theory of Objects . Springer-Verlag.  ISBN \u00a0 0-387-94775-2 .   \u00a0    Cite uses deprecated parameters ( help )  \n  Class Warfare: Classes vs. Prototypes , by Brian Foote \n  Essential Object Oriented JavaScript , by Brian O'Dell \n  Using Prototypical Objects to Implement Shared Behavior in Object Oriented Systems , by Henry Lieberman, 1986 \n  Prometheus Object System  for  Scheme  \n \n  See also   [  edit  ]   \n \n  Class-based programming  (contrast) \n  Programming paradigms  \n  Differential inheritance  \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Types of programming languages  \n \n \n \n  \n \n \n \n \n \n  Array  \n  Aspect-oriented  \n  Class-based  \n  Concatenative  \n  Concurrent  \n  Data-structured  \n  Dataflow  \n  Declarative  \n  Domain-specific  \n  Dynamic  \n  Esoteric  \n  Event-driven  \n  Extensible  \n  Functional  \n  Imperative  \n  Logic  \n  Macro  \n  Metaprogramming  \n  Multi-paradigm  \n  Object-based  \n  Object-oriented  \n  Pipeline  \n  Procedural  \n  Prototype-based  \n  Reflective  \n  Rule-based  \n  Scripting  \n  Synchronous  \n  Templating  \n \n \n \n \n \n  \n \n \n \n \n \n  Assembly  \n  Compiled  \n  Interpreted  \n  Machine  \n \n \n \n \n \n  \n \n \n \n \n \n  Low-level  \n  High-level  \n  Very high-level  \n \n \n \n \n \n  \n \n \n \n \n \n  Non-English-based  \n  Off-side rule  \n  Visual  \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Imperative programming", "rank": -0.31873533685428124, "url": "http://en.wikipedia.org/wiki/Imperative_programming", "links": ["http://en.wikipedia.org/wiki/Programming_paradigm", "http://en.wikipedia.org/wiki/Action_language", "http://en.wikipedia.org/wiki/Agent-oriented_programming", "http://en.wikipedia.org/wiki/Aspect-oriented_programming", "http://en.wikipedia.org/wiki/Automata-based_programming", "http://en.wikipedia.org/wiki/Concurrent_computing", "http://en.wikipedia.org/wiki/Relativistic_programming", "http://en.wikipedia.org/wiki/Data-driven_programming", "http://en.wikipedia.org/wiki/Declarative_programming", "http://en.wikipedia.org/wiki/Constraint_programming"], "body": "  \n \n \n     \n \n  This article  needs additional citations for  verification  .  Please help  improve this article  by  adding citations to reliable sources . Unsourced material may be challenged and removed.    (October 2011)    \n \n \n \n \n  Programming paradigms  \n \n \n \n \n  Action  \n  Agent-oriented  \n  Aspect-oriented  \n  Automata-based  \n  Concurrent computing \n \n  Relativistic programming  \n \n \n  Data-driven  \n  Declarative  (contrast:  Imperative )\n \n  Constraint  \n  Dataflow \n \n  Flow-based  \n Cell-oriented ( spreadsheets ) \n  Reactive  \n \n \n  Functional  \n  Logic \n \n  Abductive logic  \n  Answer set  \n  Constraint logic  \n  Functional logic  \n  Inductive logic  \n \n \n \n \n  End-user programming  \n  Event-driven \n \n  Service-oriented  \n  Time-driven  \n \n \n  Expression-oriented  \n  Feature-oriented  \n  Function-level  (contrast:  Value-level ) \n  Generic  \n  Imperative  (contrast:  Declarative )\n \n  Procedural  \n \n \n  Language-oriented \n \n  Discipline-specific  \n  Domain-specific  \n  Grammar-oriented \n \n  Dialecting  \n \n \n  Intentional  \n \n \n  Metaprogramming \n \n  Automatic  \n  Reflective \n \n  Attribute-oriented  \n \n \n  Homoiconic  \n  Template \n \n  Policy-based  \n \n \n \n \n  Non-structured  (contrast:  Structured )\n \n  Array  \n \n \n  Nondeterministic  \n  Parallel computing \n \n  Process-oriented  \n \n \n  Point-free style \n \n  Concatenative  \n \n \n  Semantic  \n  Structured  (contrast:  Non-structured )\n \n  Block-structured  \n  Modular  (contrast:  Monolithic ) \n  Object-oriented (OOP) \n \n By  separation of concerns :\n \n  Aspect-oriented  \n  Role-oriented  \n  Subject-oriented  \n \n \n  Class-based  \n  Prototype-based  \n \n \n  Recursive  \n \n \n  Value-level  (contrast:  Function-level ) \n  Probabilistic  \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n \n \n \n In  computer science ,  imperative programming  is a  programming paradigm  that describes computation in terms of  statements  that change a program  state . In much the same way that  imperative mood  in  natural languages  expresses commands to take action, imperative programs define sequences of commands for the computer to perform. \n The term is used in opposition to  declarative programming , which expresses  what  the program should accomplish without prescribing  how  to do it in terms of sequences of actions to be taken.  Functional  and  logic programming  are examples of a more declarative approach. \n  \n \n \n Contents \n \n \n   1   Imperative, procedural, and declarative programming   \n   2   Overview   \n   3   Block structure   \n   4   History   \n   5   See also   \n   6   Notes   \n   7   References   \n \n \n  \n  Imperative, procedural, and declarative programming   [  edit  ]   \n  Procedural programming  is imperative programming in which the program is built from one or more procedures (also known as  subroutines  or functions). The terms are often used as synonyms, but the use of procedures has a dramatic effect on how imperative programs appear and how they are constructed. Heavily procedural programming, in which  state changes  are localized to procedures or restricted to explicit arguments and returns from procedures, is known as  structured programming . From the 1960s onwards, structured programming and  modular programming  in general have been promoted as techniques to improve the  maintainability  and overall quality of imperative programs.  Object-oriented programming  extends this approach.   [ 1 ]    \n Procedural programming could be considered a step towards declarative programming. A programmer can often tell, simply by looking at the names, arguments and return types of procedures (and related comments), what a particular procedure is supposed to do, without necessarily looking at the details of how it achieves its result. At the same time, a complete program is still imperative since it 'fixes' the statements to be executed and their order of execution to a large extent. \n  Declarative programming  is a non-imperative style of programming in which programs describe their desired results without explicitly listing commands or steps that must be performed.  Functional  and  logical programming  languages are characterized by a declarative programming style. \n In a  pure functional language , such as  Haskell , all functions are  without side effects , and state changes are only represented as functions that transform the state. Although pure functional languages are non-imperative, they often provide a facility for describing the effect of a function as a series of steps. Other functional languages, such as  Lisp ,  OCaml  and  Erlang , support a mixture of procedural and functional programming. \n In  logical programming languages , programs consist of logical statements, and the program executes by searching for proofs of the statements. As with functional programming languages, some logical programming languages, such as  Prolog , and  database query languages , such as  SQL , while declarative in principle, also support a procedural style of programming. \n Many imperative programming languages (such as  Fortran ,  BASIC  and  C ) are  abstractions  of  assembly language . \n  Overview   [  edit  ]   \n The hardware implementation of almost all computers is imperative;   [ note 1 ]    nearly all computer hardware is designed to execute  machine code , which is native to the computer, written in the imperative style. From this low-level perspective, the program state is defined by the contents of memory, and the statements are instructions in the native machine language of the computer. Higher-level imperative languages use  variables  and more complex statements, but still follow the same paradigm.  Recipes  and process  checklists , while not  computer programs , are also familiar concepts that are similar in style to imperative programming; each step is an instruction, and the physical world holds the state. Since the basic ideas of imperative programming are both conceptually familiar and directly embodied in the hardware, most computer languages are in the imperative style. \n  Assignment statements , in imperative paradigm, perform an operation on information located in memory and store the results in memory for later use. High-level imperative languages, in addition, permit the  evaluation  of complex  expressions , which may consist of a combination of  arithmetic operations  and  function  evaluations, and the assignment of the resulting value to memory. Looping statements (such as in  while loops ,  do while loops  and  for loops ) allow a sequence of statements to be executed multiple times. Loops can either execute the statements they contain a predefined number of times, or they can execute them repeatedly until some condition changes.  Conditional   branching  statements allow a sequence of statements to be executed only if some condition is met. Otherwise, the statements are skipped and the execution sequence continues from the statement following them. Unconditional branching statements allow the execution sequence to be transferred to some other part of the program. These include the jump (called \" goto \" in many languages),  switch  and the subprogram, or  procedure , call (which usually returns to the next statement after the call). \n  Block structure   [  edit  ]   \n Main article:  block (programming)  \n Early in the development of  high level languages , the introduction of the block enabled the construction of programs in which a group of statements and declarations could be treated as if they were a single statement. This, alongside the introduction of  subroutines , enabled complex structures to be expressed by hierarchical decomposition into simpler procedural structures. \n  History   [  edit  ]   \n The earliest imperative languages were the machine languages of the original computers. In these languages, instructions were very simple, which made hardware implementation easier, but hindered the creation of complex programs.  FORTRAN , developed by  John Backus  at  IBM  starting in 1954, was the first major programming language to remove the obstacles presented by machine code in the creation of complex programs. FORTRAN was a  compiled language  that allowed named variables, complex expressions, subprograms, and many other features now common in imperative languages. The next two decades saw the development of a number of other major high-level imperative programming languages. In the late 1950s and 1960s,  ALGOL  was developed in order to allow mathematical algorithms to be more easily expressed, and even served as the  operating system 's target language for some computers.  MUMPS  (1966) carried the imperative paradigm to a logical extreme, by not having any statements at all, relying purely on commands, even to the extent of making the IF and ELSE commands independent of each other, connected only by an intrinsic variable named $TEST.  COBOL  (1960) and  BASIC  (1964) were both attempts to make programming syntax look more like English. In the 1970s,  Pascal  was developed by  Niklaus Wirth , and  C  was created by  Dennis Ritchie  while he was working at  Bell Laboratories . Wirth went on to design  Modula-2  and  Oberon . For the needs of the  United States Department of Defense ,  Jean Ichbiah  and a team at  Honeywell  began designing  Ada  in 1978, after a 4-year project to define the requirements for the language. The specification was first published in 1983, with revisions in 1995 and 2005/6. \n The 1980s saw a rapid growth in interest in  object-oriented programming . These languages were imperative in style, but added features to support  objects . The last two decades of the 20th century saw the development of a considerable number of such programming languages.  Smalltalk-80 , originally conceived by  Alan Kay  in 1969, was released in 1980 by the  Xerox Palo Alto Research Center . Drawing from concepts in another object-oriented language\u2014 Simula  (which is considered to be the world's first  object-oriented programming language , developed in the 1960s)\u2014 Bjarne Stroustrup  designed  C++ , an object-oriented language based on  C .  C++  was first implemented in 1985. In the late 1980s and 1990s, the notable imperative languages drawing on object-oriented concepts were  Perl , released by  Larry Wall  in 1987;  Python , released by  Guido van Rossum  in 1990;  Visual Basic  and  Visual C++  (which included  MFC  2.0), released by  Microsoft  in 1991 and 1993 respectively;  PHP , released by  Rasmus Lerdorf  in 1994;  Java , first released by  Sun Microsystems  in 1994 and  Ruby , released in 1995 by Yukihiro \u201cmatz\u201d Matsumoto.  Microsoft 's  .NET  (2002) is imperative at its core, as are its primary target languages,  VB.NET ,  C#  and  F# . \n  See also   [  edit  ]   \n \n \n \n     \n  Computer Science portal  \n \n \n \n \n  Functional programming  \n  Comparison of programming paradigms  \n  Declarative programming  (contrast) \n  Programming paradigms  \n  Object-oriented programming  \n  List of imperative programming languages  \n  Category:Procedural programming languages  lists additional imperative programming languages. \n \n  Notes   [  edit  ]   \n \n \n    ^      Reconfigurable computing  is a notable exception  \n \n \n  References   [  edit  ]   \n \n \n    ^      Michael Stevens (2011).  \"Programming paradigms and an overview of C - COMP3610 - Principles of Programming Languages: Object-Oriented programming\" . Australian National University. p.\u00a05. Archived from  the original  on 2011 . Retrieved 2012-05-22 . \"Object oriented programming extends the concept of modularity by introducing objects\"   \u00a0    \n \n \n \n Pratt, Terrence W. and Marvin V. Zelkowitz.  Programming Languages: Design and Implementation , 3rd ed. Englewood Cliffs, N.J.: Prentice Hall, 1996. \n Sebesta, Robert W.  Concepts of Programming Languages , 3rd ed. Reading, Mass.: Addison-Wesley Publishing Company, 1996. \n \n  Originally based on the article 'Imperative programming' by Stan Seibert, from  Nupedia , licensed under the  GNU Free Documentation License .  \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Types of programming languages  \n \n \n \n  \n \n \n \n \n \n  Array  \n  Aspect-oriented  \n  Class-based  \n  Concatenative  \n  Concurrent  \n  Data-structured  \n  Dataflow  \n  Declarative  \n  Domain-specific  \n  Dynamic  \n  Esoteric  \n  Event-driven  \n  Extensible  \n  Functional  \n  Imperative  \n  Logic  \n  Macro  \n  Metaprogramming  \n  Multi-paradigm  \n  Object-based  \n  Object-oriented  \n  Pipeline  \n  Procedural  \n  Prototype-based  \n  Reflective  \n  Rule-based  \n  Scripting  \n  Synchronous  \n  Templating  \n \n \n \n \n \n  \n \n \n \n \n \n  Assembly  \n  Compiled  \n  Interpreted  \n  Machine  \n \n \n \n \n \n  \n \n \n \n \n \n  Low-level  \n  High-level  \n  Very high-level  \n \n \n \n \n \n  \n \n \n \n \n \n  Non-English-based  \n  Off-side rule  \n  Visual  \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Functional programming", "rank": -0.33498062903031833, "url": "http://en.wikipedia.org/wiki/Functional_programming", "links": ["http://en.wikipedia.org/wiki/Procedural_programming", "http://en.wikipedia.org/wiki/Programming_paradigm", "http://en.wikipedia.org/wiki/Action_language", "http://en.wikipedia.org/wiki/Agent-oriented_programming", "http://en.wikipedia.org/wiki/Aspect-oriented_programming", "http://en.wikipedia.org/wiki/Automata-based_programming", "http://en.wikipedia.org/wiki/Concurrent_computing", "http://en.wikipedia.org/wiki/Relativistic_programming", "http://en.wikipedia.org/wiki/Data-driven_programming", "http://en.wikipedia.org/wiki/Declarative_programming"], "body": "  For subroutine-oriented programming, see  Procedural programming . \n \n \n  Programming paradigms  \n \n \n \n \n  Action  \n  Agent-oriented  \n  Aspect-oriented  \n  Automata-based  \n  Concurrent computing \n \n  Relativistic programming  \n \n \n  Data-driven  \n  Declarative  (contrast:  Imperative )\n \n  Constraint  \n  Dataflow \n \n  Flow-based  \n Cell-oriented ( spreadsheets ) \n  Reactive  \n \n \n  Functional  \n  Logic \n \n  Abductive logic  \n  Answer set  \n  Constraint logic  \n  Functional logic  \n  Inductive logic  \n \n \n \n \n  End-user programming  \n  Event-driven \n \n  Service-oriented  \n  Time-driven  \n \n \n  Expression-oriented  \n  Feature-oriented  \n  Function-level  (contrast:  Value-level ) \n  Generic  \n  Imperative  (contrast:  Declarative )\n \n  Procedural  \n \n \n  Language-oriented \n \n  Discipline-specific  \n  Domain-specific  \n  Grammar-oriented \n \n  Dialecting  \n \n \n  Intentional  \n \n \n  Metaprogramming \n \n  Automatic  \n  Reflective \n \n  Attribute-oriented  \n \n \n  Homoiconic  \n  Template \n \n  Policy-based  \n \n \n \n \n  Non-structured  (contrast:  Structured )\n \n  Array  \n \n \n  Nondeterministic  \n  Parallel computing \n \n  Process-oriented  \n \n \n  Point-free style \n \n  Concatenative  \n \n \n  Semantic  \n  Structured  (contrast:  Non-structured )\n \n  Block-structured  \n  Modular  (contrast:  Monolithic ) \n  Object-oriented (OOP) \n \n By  separation of concerns :\n \n  Aspect-oriented  \n  Role-oriented  \n  Subject-oriented  \n \n \n  Class-based  \n  Prototype-based  \n \n \n  Recursive  \n \n \n  Value-level  (contrast:  Function-level ) \n  Probabilistic  \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n \n \n \n In  computer science ,  functional programming  is a  programming paradigm , a style of building the structure and elements of computer programs, that treats  computation  as the evaluation of  mathematical functions  and avoids  state  and  mutable  data. Functional programming emphasizes  functions  that produce results that depend only on their inputs and not on the program state - i.e.  pure   mathematical functions . It is a  declarative programming  paradigm, which means programming is done with  expressions . In functional code, the output value of a function depends only on the arguments that are input to the function, so calling a function  f  twice with the same value for an argument  x  will produce the same result  f(x)  both times. Eliminating  side effects , i.e. changes in state that do not depend on the function inputs, can make it much easier to understand and predict the behavior of a program, which is one of the key motivations for the development of functional programming. \n Functional programming has its roots in  lambda calculus , a  formal system  developed in the 1930s to investigate  computability , the  Entscheidungsproblem , function definition, function application, and  recursion . Many functional  programming languages  can be viewed as elaborations on the lambda calculus, where  computation  is treated as the evaluation of mathematical functions and avoids state and  mutable  data. In the other well known declarative  programming paradigm ,  logic programming ,  relations  are at the base of respective languages.   [ 1 ]    \n In contrast,  imperative programming  changes state with commands in the source language, the most simple example is the assignment. Functions do exist, not in the mathematical sense, but the sense of  subroutine . They can have  side effects  that may change the value of program state. Functions without return value therefore make sense. Because of this, they lack  referential transparency , i.e. the same language expression can result in different values at different times depending on the state of the executing program.   [ 1 ]    \n Functional programming languages, especially  purely functional  ones such as  Hope  and  Rex , have largely been emphasized in  academia  rather than in commercial software development. However, prominent functional programming languages such as  Common   Lisp ,  Scheme ,   [ 2 ]      [ 3 ]      [ 4 ]      [ 5 ]     Clojure ,  Racket ,   [ 6 ]     Erlang ,   [ 7 ]      [ 8 ]      [ 9 ]     OCaml ,   [ 10 ]      [ 11 ]     Haskell ,   [ 12 ]      [ 13 ]     Scala    [ 14 ]    and  F#    [ 15 ]      [ 16 ]    have been used in industrial and commercial applications by a wide variety of organizations. Functional programming is also supported in some  domain-specific programming languages  like  R  (statistics),   [ 17 ]      [ 18 ]     Mathematica  (symbolic and numeric math),   [ 19 ]     J ,  K  and  Q from Kx Systems  (financial analysis),  XQuery / XSLT  ( XML ),   [ 20 ]      [ 21 ]    and Opal.   [ 22 ]    Widespread domain-specific declarative languages like  SQL  and  Lex / Yacc  use some elements of functional programming, especially in eschewing  mutable values .   [ 23 ]    \n Programming in a functional style can also be accomplished in languages that aren't specifically designed for functional programming. For example, the imperative  Perl  programming language has been the subject of a book describing how to apply functional programming concepts.   [ 24 ]     C#  3.0 and  Java  8 added constructs to facilitate the functional style. \n  \n \n \n Contents \n \n \n   1   History   \n   2   Concepts  \n \n   2.1   First-class and higher-order functions   \n   2.2   Pure functions   \n   2.3   Recursion   \n   2.4   Strict versus non-strict evaluation   \n   2.5   Type systems   \n   2.6   Functional programming in non-functional languages   \n \n \n   3   Comparison to imperative programming  \n \n   3.1   Simulating state   \n   3.2   Efficiency issues   \n   3.3   Coding styles  \n \n   3.3.1   Haskell   \n   3.3.2   Erlang   \n   3.3.3   Lisp   \n \n \n \n \n   4   Use in industry   \n   5   See also   \n   6   References   \n   7   Further reading   \n   8   External links   \n \n \n  \n  History   [  edit  ]   \n  Lambda calculus  provides a theoretical framework for describing functions and their evaluation. Although it is a mathematical abstraction rather than a programming language, it forms the basis of almost all functional programming languages today. An equivalent theoretical formulation,  combinatory logic , is commonly perceived as more abstract than lambda calculus and preceded it in invention. Combinatory logic and lambda calculus were both originally developed to achieve a clearer approach to the  foundations of mathematics .   [ 25 ]    \n An early functional-flavored language was  Lisp , developed by  John McCarthy  while at  Massachusetts Institute of Technology  (MIT) for the  IBM 700/7000 series  scientific computers in the late 1950s.   [ 26 ]    Lisp introduced many features now found in functional languages, though Lisp is technically a multi-paradigm language.  Scheme  and  Dylan  were later attempts to simplify and improve Lisp. \n  Information Processing Language  (IPL) is sometimes cited as the first computer-based functional programming language.   [ 27 ]    It is an assembly-style language for manipulating lists of symbols. It does have a notion of \"generator\", which amounts to a function accepting a function as an argument, and, since it is an assembly-level language, code can be used as data, so IPL can be regarded as having higher-order functions. However, it relies heavily on mutating list structure and similar imperative features. \n  Kenneth E. Iverson  developed  APL  in the early 1960s, described in his 1962 book  A Programming Language  ( ISBN 9780471430148 ). APL was the primary influence on  John Backus 's  FP . In the early 1990s, Iverson and  Roger Hui  created  J . In the mid-1990s,  Arthur Whitney , who had previously worked with Iverson, created  K , which is used commercially in financial industries along with its descendant  Q . \n  John Backus  presented  FP  in his 1977  Turing Award  lecture \"Can Programming Be Liberated From the  von Neumann  Style? A Functional Style and its Algebra of Programs\".   [ 28 ]    He defines functional programs as being built up in a hierarchical way by means of \"combining forms\" that allow an \"algebra of programs\"; in modern language, this means that functional programs follow the  principle of compositionality . Backus's paper popularized research into functional programming, though it emphasized  function-level programming  rather than the lambda-calculus style which has come to be associated with functional programming. \n In the 1970s,  ML  was created by  Robin Milner  at the  University of Edinburgh , and  David Turner  developed initially the language  SASL  at the  University of St. Andrews  and later the language  Miranda  at the  University of Kent . ML eventually developed into several dialects, the most common of which are now  OCaml  and  Standard ML . Also in the 1970s, the development of  Scheme  (a partly functional dialect of Lisp), as described in the influential  Lambda Papers  and the 1985 textbook   Structure and Interpretation of Computer Programs  , brought awareness of the power of functional programming to the wider programming-languages community. \n In the 1980s,  Per Martin-L\u00f6f  developed  intuitionistic type theory  (also called  constructive  type theory), which associated functional programs with  constructive proofs  of arbitrarily complex mathematical propositions expressed as  dependent types . This led to powerful new approaches to  interactive theorem proving  and has influenced the development of many subsequent functional programming languages. \n The  Haskell language  began with a consensus in 1987 to form an  open standard  for functional programming research; implementation releases have been ongoing since 1990. \n  Concepts   [  edit  ]   \n A number of concepts and paradigms are specific to functional programming, and generally foreign to  imperative programming  (including  object-oriented programming ). However, programming languages are often hybrids of several programming paradigms, so programmers using \"mostly imperative\" languages may have utilized some of these concepts.   [ 29 ]    \n  First-class and higher-order functions   [  edit  ]   \n Main articles:  First-class function  and  Higher-order function  \n  Higher-order functions  are functions that can either take other functions as arguments or return them as results. In calculus, an example of a higher-order function is the  differential operator   , which returns the  derivative  of a function  . \n Higher-order functions are closely related to  first-class functions  in that higher-order functions and first-class functions both allow functions as arguments and results of other functions. The distinction between the two is subtle: \"higher-order\" describes a mathematical concept of functions that operate on other functions, while \"first-class\" is a computer science term that describes programming language entities that have no restriction on their use (thus first-class functions can appear anywhere in the program that other first-class entities like numbers can, including as arguments to other functions and as their return values). \n Higher-order functions enable  partial application  or  currying , a technique in which a function is applied to its arguments one at a time, with each application returning a new function that accepts the next argument. This allows one to succinctly express, for example, the successor function as the addition operator partially applied to the natural number one. \n  Pure functions   [  edit  ]   \n  Purely functional  functions (or expressions) have no  side effects  (memory or I/O). This means that pure functions have several useful properties, many of which can be used to optimize the code: \n \n If the result of a pure expression is not used, it can be removed without affecting other expressions. \n If a pure function is called with parameters that cause no side-effects, the result is constant with respect to that parameter list (sometimes called  referential transparency ), i.e. if the pure function is again called with the same parameters, the same result will be returned (this can enable caching optimizations such as  memoization ). \n If there is no data dependency between two pure expressions, then their order can be reversed, or they can be performed in  parallel  and they cannot interfere with one another (in other terms, the evaluation of any pure expression is  thread-safe ). \n If the entire language does not allow side-effects, then any evaluation strategy can be used; this gives the compiler freedom to reorder or combine the evaluation of expressions in a program (for example, using  deforestation ). \n \n While most compilers for imperative programming languages detect pure functions and perform common-subexpression elimination for pure function calls, they cannot always do this for pre-compiled libraries, which generally do not expose this information, thus preventing optimizations that involve those external functions. Some compilers, such as  gcc , add extra keywords for a programmer to explicitly mark external functions as pure, to enable such optimizations.  Fortran 95  also allows functions to be designated \"pure\". \n  Recursion   [  edit  ]   \n Main article:  Recursion (computer science)  \n  Iteration  (looping) in functional languages is usually accomplished via  recursion .  Recursive functions  invoke themselves, allowing an operation to be performed over and over until the  base case  is reached. Though some recursion requires maintaining a stack,  tail recursion  can be recognized and optimized by a compiler into the same code used to implement iteration in imperative languages. The  Scheme  language standard requires implementations to recognize and optimize tail recursion. Tail recursion optimization can be implemented by transforming the program into  continuation passing style  during compiling, among other approaches. \n Common patterns of recursion can be factored out using higher order functions, with  catamorphisms  and  anamorphisms  (or \"folds\" and \"unfolds\") being the most obvious examples. Such higher order functions play a role analogous to built-in control structures such as  loops  in  imperative languages . \n Most general purpose functional programming languages allow unrestricted recursion and are  Turing complete , which makes the  halting problem   undecidable , can cause unsoundness of  equational reasoning , and generally requires the introduction of  inconsistency  into the logic expressed by the language's  type system . Some special purpose languages such as  Coq  allow only  well-founded  recursion and are  strongly normalizing  (nonterminating computations can be expressed only with infinite streams of values called  codata ). As a consequence, these languages fail to be Turing complete and expressing certain functions in them is impossible, but they can still express a wide class of interesting computations while avoiding the problems introduced by unrestricted recursion. Functional programming limited to well-founded recursion with a few other constraints is called  total functional programming . See Turner 2004 for more discussion.   [ 30 ]    \n  Strict versus non-strict evaluation   [  edit  ]   \n Main article:  Evaluation strategy  \n Functional languages can be categorized by whether they use  strict (eager)  or  non-strict (lazy)  evaluation, concepts that refer to how function arguments are processed when an expression is being evaluated. The technical difference is in the  denotational semantics  of expressions containing failing or divergent computations. Under strict evaluation, the evaluation of any term containing a failing subterm will itself fail. For example, the expression: \n \nprint length([2+1, 3*2, 1/0, 5-4])\n \n will fail under strict evaluation because of the division by zero in the third element of the list. Under lazy evaluation, the length function will return the value 4 (i.e., the number of items in the list), since evaluating it will not attempt to evaluate the terms making up the list. In brief, strict evaluation always fully evaluates function arguments before invoking the function. Lazy evaluation does not evaluate function arguments unless their values are required to evaluate the function call itself. \n The usual implementation strategy for lazy evaluation in functional languages is  graph reduction .   [ 31 ]    Lazy evaluation is used by default in several pure functional languages, including  Miranda ,  Clean , and  Haskell . \n  Hughes 1984  argues for lazy evaluation as a mechanism for improving program modularity through  separation of concerns , by easing independent implementation of producers and consumers of data streams.   [ 32 ]    Launchbury 1993 describes some difficulties that lazy evaluation introduces, particularly in analyzing a program's storage requirements, and proposes an  operational semantics  to aid in such analysis.   [ 33 ]    Harper 2009 proposes including both strict and lazy evaluation in the same language, using the language's type system to distinguish them.   [ 34 ]    \n  Type systems   [  edit  ]   \n Especially since the development of  Hindley\u2013Milner type inference  in the 1970s, functional programming languages have tended to use  typed lambda calculus , as opposed to the  untyped lambda calculus  used in Lisp and its variants (such as  Scheme ). The use of  algebraic datatypes  and  pattern matching  makes manipulation of complex data structures convenient and expressive; the presence of strong compile-time type checking makes programs more reliable, while  type inference  frees the programmer from the need to manually declare types to the compiler. \n Some research-oriented functional languages such as  Coq ,  Agda ,  Cayenne , and  Epigram  are based on  intuitionistic type theory , which allows types to depend on terms. Such types are called  dependent types . These type systems do not have decidable type inference and are difficult to understand and program with [   citation needed   ] . But dependent types can express arbitrary propositions in  predicate logic . Through the  Curry\u2013Howard isomorphism , then, well-typed programs in these languages become a means of writing formal  mathematical proofs  from which a compiler can generate  certified code . While these languages are mainly of interest in academic research (including in  formalized mathematics ), they have begun to be used in engineering as well.  Compcert  is a  compiler  for a subset of the  C programming language  that is written in Coq and formally verified.   [ 35 ]    \n A limited form of dependent types called  generalized algebraic data types  (GADT's) can be implemented in a way that provides some of the benefits of dependently typed programming while avoiding most of its inconvenience.   [ 36 ]    GADT's are available in the  Glasgow Haskell Compiler , in  OCaml  (since version 4.00) and in  Scala  (as \"case classes\"), and have been proposed as additions to other languages including Java and C#.   [ 37 ]    \n  Functional programming in non-functional languages   [  edit  ]   \n It is possible to use a functional style of programming in languages that are not traditionally considered functional languages.   [ 38 ]    For example, both  D  and  Fortran 95  explicitly support pure functions.   [ 39 ]    \n First class functions have slowly been added to mainstream languages. For example, in early 1994, support for lambda, filter, map, and reduce was added to  Python . Then during the development of Python 3000,  Guido van Rossum  called for the removal of these features.   [ 40 ]    However, he later changed his mind, and only reduce was removed,   [ 41 ]    though it remains accessible via the  functools  standard library module.   [ 42 ]    First class functions were also introduced in  PHP  5.3,  Visual Basic  9,  C#  3.0, and  C++11 . \n In  Java ,  anonymous classes  can sometimes be used to simulate  closures ;   [ 43 ]    however, anonymous classes are not always proper replacements to  closures  because they have more limited capabilities.   [ 44 ]    Java 8, scheduled for release in 2014,   [ 45 ]    will support lambda expressions as a replacement for some anonymous classes.   [ 46 ]    However, the presence of checked exceptions in Java can make functional programming inconvenient, because it can be necessary to catch checked exceptions and then rethrow them - a problem that does not occur in other JVM languages that do not have checked exceptions, such as Scala. \n Many  object-oriented   design patterns  are expressible in functional programming terms: for example, the  strategy pattern  simply dictates use of a higher-order function, and the  visitor  pattern roughly corresponds to a  catamorphism , or  fold . \n Similarly, the idea of immutable data from functional programming is often included in imperative programming languages,   [ 47 ]    for example the tuple in Python, which is an immutable array. \n  Comparison to imperative programming   [  edit  ]   \n Functional programming is very different from  imperative programming . The most significant differences stem from the fact that functional programming avoids  side effects , which are used in imperative programming to implement state and I/O. Pure functional programming completely prevents side-effects and provides  referential transparency , which makes it easier to verify, optimize, and parallelize programs, and easier to write automated tools to perform those tasks. \n Higher-order functions are rarely used in older imperative programming. Where a traditional imperative program might use a loop to traverse a list, a functional program would use a different technique. It would use a higher-order function that takes as arguments a function and a list. The higher-order function would then apply the given function to each element of the given list and then return a new list with the results. \n  Simulating state   [  edit  ]   \n There are tasks (for example, maintaining a bank account balance) that often seem most naturally implemented with state. Pure functional programming performs these tasks, and I/O tasks such as accepting user input and printing to the screen, in a different way. \n The pure functional programming language  Haskell  implements them using  monads , derived from  category theory . Monads offer a way to abstract certain types of computational patterns, including (but not limited to) modeling of computations with mutable state (and other side effects such as I/O) in an imperative manner without losing purity. While existing monads may be easy to apply in a program, given appropriate templates and examples, many students find them difficult to understand conceptually, e.g., when asked to define new monads (which is sometimes needed for certain types of libraries).   [ 48 ]    \n Another way in which functional languages can simulate state is by passing around a  data structure  that represents the current state as a parameter to function calls. On each function call, a copy of this data structure is created with whatever differences are the result of the function. This is referred to as ' state-passing style '. \n Impure functional languages usually include a more direct method of managing mutable state.  Clojure , for example, uses managed references that can be updated by applying pure functions to the current state. This kind of approach enables mutability while still promoting the use of pure functions as the preferred way to express computations. \n Alternative methods such as  Hoare logic  and  uniqueness  have been developed to track side effects in programs. Some modern research languages use  effect systems  to make explicit the presence of side effects. \n  Efficiency issues   [  edit  ]   \n Functional programming languages are typically less efficient in their use of  CPU  and memory than imperative languages such as  C  and  Pascal .   [ 49 ]    This is related to the fact that some mutable data structures like arrays have a very straightforward implementation using present hardware (which is a highly evolved Turing machine). Flat arrays may be accessed very efficiently with deeply pipelined CPUs, prefetched efficiently through caches (with no complex pointer-chasing), or handled with SIMD instructions. And it is not easy to create their equally efficient general-purpose immutable counterparts. For purely functional languages, the worst-case slowdown is logarithmic in the number of memory cells used, because mutable memory can be represented by a purely functional data structure with logarithmic access time (such as a balanced tree).   [ 50 ]    However, such slowdowns are not universal. For programs that perform intensive numerical computations, functional languages such as  OCaml  and  Clean  are only slightly slower than C.   [ 51 ]    For programs that handle large  matrices  and multidimensional  databases ,  array  functional languages (such as  J  and  K ) were designed with speed optimization. \n Immutability of data can in many cases lead to execution efficiency by allowing the compiler to make assumptions that are unsafe in an imperative language, thus increasing opportunities for  inline expansion .   [ 52 ]    \n  Lazy evaluation  may also speed up the program, even asymptotically, whereas it may slow it down at most by a constant factor (however, it may introduce  memory leaks  if used improperly). Launchbury 1993   [ 33 ]    discusses theoretical issues related to memory leaks from lazy evaluation, and O'Sullivan  et al.  2008   [ 53 ]    give some practical advice for analyzing and fixing them. However, the most general implementations of lazy evaluation making extensive use of dereferenced code and data perform poorly on modern processors with deep pipelines and multi-level caches (where a cache miss may cost hundreds of cycles) \n  Coding styles   [  edit  ]   \n \n \n \n     \n \n  This section  does not  cite  any  references or sources  .  Please help improve this section by  adding citations to reliable sources . Unsourced material may be challenged and  removed .    (July 2013)    \n \n \n Imperative programs tend to emphasize the series of steps taken by a program in carrying out an action, while functional programs tend to emphasize the composition and arrangement of functions, often without specifying explicit  steps . A simple example illustrates this with two solutions to the same programming goal (calculating  Fibonacci numbers ). The imperative example is in  Python . \n \n \n \n # Fibonacci numbers, imperative style \n # http://docs.python.org/2.7/tutorial/modules.html \n def  fibonacci (  ) :\n  first ,  second  =   0  ,   1    # initial seed values \n   while   True :   # Perform infinite iterations \n    first ,  second  =  second ,  first + second  # Assign all the new values. \n     yield  first   # Return current iterate \n \n for  n ,  x  in   enumerate  ( fibonacci (  )  ) :\n   if  n  ==   10 :  break    # print first 10 fibonacci elements \n   print  x\n  \n \n  Haskell   [  edit  ]   \n A functional version (in  Haskell ) has a different feel to it: \n \n \n \n -- Fibonacci numbers, functional style \n \n -- describe an infinite list based on the recurrence relation for Fibonacci numbers \nfibRecurrence first second  =  first : fibRecurrence second  ( first  +  second ) \n \n -- describe fibonacci list as fibRecurrence with initial values 0 and 1 \nfibonacci  =  fibRecurrence  0   1 \n \n -- describe action to print the 10th element of the fibonacci list \nmain  =   print   ( fibonacci  !!   10  ) \n  \n \n Or, more concisely: \n \n \n \nfibonacci2  =   0 : 1 :zipwith  (  +  )  fibonacci2  (  tail  fibonacci2 ) \n  \n \n The imperative style describes the intermediate steps involved in calculating  fibonacci(N) , and places those steps inside a  loop statement . In contrast, the functional implementation shown here states the mathematical  recurrence relation  that defines the entire Fibonacci sequence, then selects an element from the sequence (see also  recursion ). This example relies on Haskell's  lazy evaluation  to create an \"infinite\" list of which only as much as needed (the first 10 elements in this case) will actually be computed. That computation happens when the runtime system carries out the action described by \"main\". \n  Erlang   [  edit  ]   \n \n    \n \n     \nThe   LYME (software bundle)   is based on  Erlang  \n \n \n The same program in  Erlang  provides a simple example of how functional languages in general do not require their syntax to contain an \" if \" statement. \n \n \n \n -  module  ( fibonacci )  . \n -  export  (  [ start /  1  ]  )  . \n \n %% Fibonacci numbers in Erlang \n start  (  N  )   -&gt;   do_fib  (  0  ,  1  ,  N  )  . \n \n do_fib  (  _  ,  B  ,  1  )   -&gt;   B  ; \n do_fib  (  A  ,  B  ,  N  )   -&gt;   do_fib  (  B  ,  A  +  B  ,  N  -  1  )  . \n  \n \n This program is contained within a module called \"fibonacci\" and declares that the start/1 function will be visible from outside the scope of this module. \n The function start/1 accepts a single parameter (as denoted by the \"/1\" syntax) and then calls an internal function called do_fib/3. \n In direct contrast to the imperative coding style, Erlang does not need an \"if\" statement because the Erlang runtime will examine the parameters being passed to a function, and call the first function having a signature that matches the current pattern of parameters. (Erlang syntax does provide an \"if\" statement, but it is considered syntactic sugar and, compared to its usage in imperative languages, plays only a minor role in application logic design). \n In this case, it is unnecessary to test for a parameter value within the body of the function because such a test is implicitly performed by providing a set of function signatures that describe the different patterns of values that could be received by a function. \n In the case above, the first version of do_fib/3 will only be called when the third parameter has the precise value of 1. In all other cases, the second version of do_fib/3 will be called. \n This example demonstrates that functional programming languages often implement conditional logic  implicitly  by matching parameter patterns rather than  explicitly  by means of an \"if\" statement. \n  Lisp   [  edit  ]   \n The Fibonacci function can be written in  Common Lisp  as follows: \n \n \n \n (  defun  fib  ( n  &amp; optional  ( a  0  )   ( b  1  )  ) \n   (  if   (  =  n  0  ) \n      a\n       ( fib  ( - n  1  )  b  ( + a b )  )  )  ) \n  \n \n The program can then be called as \n \n \n \n ( fib  10  ) \n  \n \n  Use in industry   [  edit  ]   \n Functional programming has long been popular in academia, but with few industrial applications.   [ 54 ]    :page 11  However, recently several prominent functional programming languages have been used in commercial or industrial systems. For example, the  Erlang  programming language, which was developed by the  Swedish  company  Ericsson  in the late 1980s, was originally used to implement fault-tolerant telecommunications systems.   [ 8 ]    It has since become popular for building a range of applications at companies such as  T-Mobile ,  Nortel ,  Facebook ,  \u00c9lectricit\u00e9 de France  and  WhatsApp .   [ 7 ]      [ 9 ]      [ 55 ]      [ 56 ]      [ 57 ]    The  Scheme  dialect of  Lisp  was used as the basis for several applications on early  Apple Macintosh  computers,   [ 2 ]      [ 3 ]    and has more recently been applied to problems such as training  simulation software    [ 4 ]    and  telescope  control.   [ 5 ]     OCaml , which was introduced in the mid-1990s, has seen commercial use in areas such as financial analysis,   [ 10 ]     driver  verification, industrial  robot  programming, and static analysis of  embedded software .   [ 11 ]     Haskell , although initially intended as a research language,   [ 13 ]    has also been applied by a range of companies, in areas such as aerospace systems, hardware design, and web programming.   [ 12 ]      [ 13 ]    \n Other functional programming languages that have seen use in industry include  Scala  (which is a hybrid functional-OO language and has support for both  purely functional  and imperative programming),   [ 58 ]     F# ,   [ 15 ]      [ 16 ]     Lisp ,   [ 59 ]     Standard ML ,   [ 60 ]      [ 61 ]    and  Clojure .   [ 62 ]    \n  See also   [  edit  ]   \n \n  Comparison of programming paradigms  \n  Eager evaluation  \n  List of functional programming topics  \n  Nested function  \n  Inductive functional programming  \n \n  References   [  edit  ]   \n \n \n  ^     a         b         Hudak, Paul  (September 1989).  \"Conception, evolution, and application of functional programming languages\"  (PDF).   ACM  Computing Surveys   21  (3): 359\u2013411.  doi : 10.1145/72551.72554 .   \u00a0    \n  ^     a         b        Clinger, Will (1987).  \"MultiTasking and MacScheme\" .  MacTech   3  (12) . Retrieved 2008-08-28 .   \u00a0    \n  ^     a         b        Hartheimer, Anne (1987).  \"Programming a Text Editor in MacScheme+Toolsmith\" .  MacTech   3  (1) . Retrieved 2008-08-28 .   \u00a0    \n  ^     a         b        Kidd, Eric.  \"Terrorism Response Training in Scheme\" . CUFP 2007 . Retrieved 2009-08-26 .   \u00a0    \n  ^     a         b        Cleis, Richard.  \"Scheme in Space\" . CUFP 2006 . Retrieved 2009-08-26 .   \u00a0    \n    ^       \"State-Based Scripting in Uncharted 2\"  . Retrieved 2011-08-08 .   \u00a0    \n  ^     a         b         \"Who uses Erlang for product development?\" .  Frequently asked questions about Erlang  . Retrieved 2007-08-05 .   \u00a0    \n  ^     a         b        Armstrong, Joe (June 2007).  \"A history of Erlang\" . Third ACM SIGPLAN Conference on History of Programming Languages. San Diego, California . Retrieved 2009-08-29 .   \u00a0    \n  ^     a         b        Larson, Jim (March 2009). \"Erlang for concurrent programming\".  Communications of the ACM   52  (3): 48.  doi : 10.1145/1467247.1467263 .   \u00a0    \n  ^     a         b        Minsky, Yaron; Weeks, Stephen (July 2008).  \"Caml Trading\u00a0\u2014 experiences with functional programming on Wall Street\" .  Journal of Functional Programming  (Cambridge University Press)  18  (4): 553\u2013564.  doi : 10.1017/S095679680800676X  . Retrieved 2008-08-27 .   \u00a0    \n  ^     a         b        Leroy, Xavier.  \"Some uses of Caml in Industry\" . CUFP 2007 . Retrieved 2009-08-26 .   \u00a0    \n  ^     a         b         \"Haskell in industry\" .  Haskell Wiki  . Retrieved 2009-08-26 . \"Haskell has a diverse range of use commercially, from aerospace and defense, to finance, to web startups, hardware design firms and lawnmower manufacturers.\"   \u00a0    \n  ^     a         b         c         Hudak, Paul ; Hughes, J., Jones, S. P., and Wadler, P. (June 2007).  \"A history of Haskell: being lazy with class\" . Third ACM SIGPLAN Conference on History of Programming Languages. San Diego, California.  doi : 10.1145/1238844.1238856  . Retrieved 2013-09-26 .   \u00a0    Cite uses deprecated parameters ( help )   \n    ^       \"Effective Scala\" .  Scala Wiki  . Retrieved 2012-02-21 . \"Effective Scala.\"   \u00a0    \n  ^     a         b        Mansell, Howard (2008).  \"Quantitative Finance in F#\" . CUFP 2008 . Retrieved 2009-08-29 .   \u00a0    \n  ^     a         b        Peake, Alex (2009).  \"The First Substantial Line of Business Application in F#\" . CUFP 2009 . Retrieved 2009-08-29 .   \u00a0    \n    ^       \"The useR! 2006 conference schedule includes papers on the commercial use of R\" . R-project.org. 2006-06-08 . Retrieved 2011-06-20 .   \u00a0    \n    ^       Chambers, John M.  (1998).  Programming with Data: A Guide to the S Language . Springer Verlag. pp.\u00a067\u201370.  ISBN \u00a0 978-0-387-98503-9 .   \u00a0    \n    ^      Department of Applied Math, University of Colorado.  \"Functional vs. Procedural Programming Language\"  . Retrieved 2006-08-28 .   \u00a0    \n    ^      Dimitre Novatchev.  \"The Functional Programming Language XSLT\u00a0\u2014 A proof through examples\" .  TopXML  . Retrieved May 27, 2006 .   \u00a0    \n    ^      David Mertz.  \"XML Programming Paradigms (part four): Functional Programming approached to XML processing\" .  IBM developerWorks  . Retrieved May 27, 2006 .   \u00a0    \n    ^      OPtimized Applicative Language   \n    ^       Donald D. Chamberlin  and  Raymond F. Boyce  (1974). \"SEQUEL: A structured English query language\".  Proceedings of the 1974 ACM SIGFIDET : 249\u2013264.   \u00a0    \n    ^       Dominus, Mark J.  (2005).   Higher-Order Perl  .  Morgan Kaufmann .  ISBN \u00a0 1-55860-701-3 .   \u00a0    \n    ^      Haskell Brooks Curry; Robert Feys (1958).   Combinatory Logic  . North-Holland Publishing Company . Retrieved 10 February 2013 .   \u00a0    \n    ^       McCarthy, John  (June 1978).  \"History of Lisp\" .  In  ACM  SIGPLAN History of Programming Languages Conference : 217\u2013223.  doi : 10.1145/800025.808387 .   \u00a0    \n    ^     The memoir of  Herbert A. Simon  (1991),  Models of My Life  pp.189-190  ISBN 0-465-04640-1  claims that he, Al Newell, and Cliff Shaw are \"commonly adjudged to be the parents of [the] artificial intelligence [field]\", for writing  Logic Theorist , a program which proved theorems from   Principia Mathematica   automatically. In order to accomplish this, they had to invent a language and a paradigm which, which viewed retrospectively, embeds functional programming.  \n    ^      http://www.stanford.edu/class/cs242/readings/backus.pdf   \n    ^      Dick Pountain.  \"Functional Programming Comes of Age\" .  BYTE.com (August 1994)  . Retrieved August 31, 2006 .   \u00a0    \n    ^       Turner, D.A.  (2004-07-28).  \"Total Functional Programming\" .  Journal of Universal Computer Science   10  (7): 751\u2013768.  doi : 10.3217/jucs-010-07-0751 .   \u00a0    \n    ^      The Implementation of Functional Programming Languages . Simon Peyton Jones, published by Prentice Hall, 1987  \n    ^       Hughes, John  (1984).  \"Why Functional Programming Matters\" .   \u00a0    \n  ^     a         b        John Launchbury (1993).  \"A Natural Semantics for Lazy Evaluation\" .   \u00a0    \n    ^       Robert W. Harper  (2009).   Practical Foundations for Programming Languages  .   \u00a0    \n    ^       \"The Compcert verified compiler\" .   \u00a0    \n    ^      Simon Peyton Jones, Dimitrios Vytiniotis, Stephanie Weirich, and Geoffrey Washburn.  \"Simple unification-based type inference for GADTs\" .  ICFP 2006 . pp.\u00a050\u201361.   \u00a0    \n    ^      Andrew Kennedy and Claudio Russo (October 2005).  \"Generalized Algebraic Data Types and Object-Oriented Programming\" .  OOPSLA . San Diego, California.   \u00a0    source of citation   \n    ^      Hartel, Pieter; Henk Muller and Hugh Glaser (March 2004).  \"The Functional C experience\"  (PDF).  The Journal of Functional Programming   14  (2): 129\u2013135.  doi : 10.1017/S0956796803004817 .   \u00a0    Cite uses deprecated parameters ( help ) ;  David Mertz.  \"Functional programming in Python, Part 3\" .  IBM developerWorks  . Retrieved 2006-09-17 .   \u00a0  ( Part 1 ,  Part 2 )  \n    ^       \"Functions\u00a0\u2014 D Programming Language 2.0\" . Digital Mars . Retrieved 2011-06-20 .   \u00a0    \n    ^       van Rossum, Guido  (2005-03-10).  \"The fate of reduce() in Python 3000\" . Artima.com . Retrieved 2012-09-27 .   \u00a0    \n    ^       van Rossum, Guido  (2009-04-21).  \"Origins of Python's \"Functional\" Features\" .  The History of Python  . Retrieved 2012-09-27 .   \u00a0    \n    ^       \"functools \u2014 Higher order functions and operations on callable objects\" . Python Software Foundation. 2011-07-31 . Retrieved 2011-07-31 .   \u00a0    \n    ^      Skarsaune, Martin (2008).  The SICS Java Port Project Automatic Translation of a Large Object Oriented System from Smalltalk to Java .   \u00a0    \n    ^      Gosling, James.  \"Closures\" .  James Gosling: on the Java Road . Oracle . Retrieved 11 May 2013 .   \u00a0    \n    ^       \"Java SE 8 Schedule: March 2014\" .   \u00a0    \n    ^       \"Java SE 8 Lambda Quick Start\" .   \u00a0    \n    ^      Bloch, Joshua.  Effective Java  (Second ed.). pp.\u00a0Item 15.   \u00a0    \n    ^      Newbern, J.  \"All About Monads: A comprehensive guide to the theory and practice of monadic programming in Haskell\"  . Retrieved 2008-02-14 .   \u00a0    \n    ^      Larry C. Paulson (28 June 1996).   ML for the Working Programmer  . Cambridge University Press.  ISBN \u00a0 978-0-521-56543-1  . Retrieved 10 February 2013 .   \u00a0    \n    ^      Pawel Spiewak.  \"Implementing Persistent Vectors in Scala\"  . Retrieved Apr 17, 2012 .   \u00a0    \n    ^       \"Which programs are fastest? | Computer Language Benchmarks Game\" . benchmarksgame.alioth.debian.org . Retrieved 2011-06-20 .   \u00a0    \n    ^      Igor Pechtchanski and Vivek Sarkar (2005). \"Immutability specification and its applications\".  Concurrency and Computation: Practice and Experience   17  (5\u20136): 639\u2013662.  doi : 10.1002/cpe.853 .   \u00a0    \n    ^       \"Chapter 25. Profiling and optimization\" . Book.realworldhaskell.org . Retrieved 2011-06-20 .   \u00a0    \n    ^      Odersky, Martin; Spoon, Lex; Venners, Bill (December 13, 2010).   Programming in Scala: A Comprehensive Step-by-step Guide   (2nd ed.).  Artima Inc . pp.\u00a0883/852.  ISBN \u00a0 978-0-9815316-4-9 .   \u00a0    \n    ^      Piro, Christopher (2009).  \"Functional Programming at Facebook\" . CUFP 2009 . Retrieved 2009-08-29 .   \u00a0    \n    ^       \"Sim-Diasca: a large-scale discrete event concurrent simulation engine in Erlang\" . November 2011.   \u00a0    \n    ^      1 million is so 2011  // WhatsApp blog, 2012-01-06: \"the last important piece of our infrastracture is Erlang\"  \n    ^      Momtahan, Lee (2009).  \"Scala at EDF Trading: Implementing a Domain-Specific Language for Derivative Pricing with Scala\" . CUFP 2009 . Retrieved 2009-08-29 .   \u00a0    \n    ^      Graham, Paul (2003).  \"Beating the Averages\"  . Retrieved 2009-08-29 .   \u00a0    \n    ^      Sims, Steve (2006).  \"Building a Startup with Standard ML\" . CUFP 2006 . Retrieved 2009-08-29 .   \u00a0    \n    ^      Laurikari, Ville (2007).  \"Functional Programming in Communications Security.\" . CUFP 2007 . Retrieved 2009-08-29 .   \u00a0    \n    ^      Lorimer, R. J.  \"Live Production Clojure Application Announced\" .   \u00a0    \n \n \n  Further reading   [  edit  ]   \n \n   Abelson, Hal ;  Sussman, Gerald Jay  (1985).   Structure and Interpretation of Computer Programs  . MIT Press.   \u00a0   \n Cousineau, Guy and Michel Mauny.  The Functional Approach to Programming . Cambridge, UK:  Cambridge University Press , 1998. \n Curry, Haskell Brooks and Feys, Robert and Craig, William.  Combinatory Logic . Volume I. North-Holland Publishing Company, Amsterdam, 1958. \n   Curry, Haskell B. ;  Hindley, J. Roger ;  Seldin, Jonathan P.  (1972).  Combinatory Logic . Vol. II. Amsterdam: North Holland.  ISBN \u00a0 0-7204-2208-6 .   \u00a0   \n  Dominus, Mark Jason .   Higher-Order Perl  .  Morgan Kaufmann . 2005. \n  Felleisen, Matthias; Findler, Robert; Flatt, Matthew; Krishnamurthi, Shriram (2001).   How to Design Programs  . MIT Press.   \u00a0   \n Graham, Paul.  ANSI Common LISP . Englewood Cliffs, New Jersey:  Prentice Hall , 1996. \n MacLennan, Bruce J.  Functional Programming: Practice and Theory . Addison-Wesley, 1990. \n  O'Sullivan, Brian; Stewart, Don; Goerzen, John (2008).   Real World Haskell  . O'Reilly.   \u00a0   \n Pratt, Terrence, W. and Marvin V. Zelkowitz.  Programming Languages: Design and Implementation . 3rd ed. Englewood Cliffs, New Jersey:  Prentice Hall , 1996. \n Salus, Peter H.  Functional and Logic Programming Languages . Vol. 4 of Handbook of Programming Languages. Indianapolis, Indiana:  Macmillan Technical Publishing , 1998. \n Thompson, Simon.  Haskell: The Craft of Functional Programming . Harlow, England:  Addison-Wesley Longman Limited , 1996. \n \n  External links   [  edit  ]   \n \n  Listen to this article  ( info/dl )\n \n \n    Sorry, your browser either has JavaScript disabled or does not have any supported player. \nYou can  download the clip  or  download a player  to play the clip in your browser.  \n \n \n \n \n   \n \n This audio file was created from a revision of the \" Functional programming \" article dated 2011-08-25, and does not reflect subsequent edits to the article. ( Audio help ) \n   More spoken articles   \n \n     \n \n  Ford, Neal (2012-01-29).  \"Functional thinking: Why functional programming is on the rise\"  . Retrieved 2013-02-24 .   \u00a0   \n  Akhmechet, Slava (2006-06-19).  \"defmacro - Functional Programming For The Rest of Us\"  . Retrieved 2013-02-24 .   \u00a0   An introduction \n  Functional programming in Python  (by David Mertz):  part 1 ,  part 2 ,  part 3  \n \n \n \n \n \n \n \n \n \n   v   \n   t   \n   e   \n \n \n  Types of programming languages  \n \n \n \n  \n \n \n \n \n \n  Array  \n  Aspect-oriented  \n  Class-based  \n  Concatenative  \n  Concurrent  \n  Data-structured  \n  Dataflow  \n  Declarative  \n  Domain-specific  \n  Dynamic  \n  Esoteric  \n  Event-driven  \n  Extensible  \n  Functional  \n  Imperative  \n  Logic  \n  Macro  \n  Metaprogramming  \n  Multi-paradigm  \n  Object-based  \n  Object-oriented  \n  Pipeline  \n  Procedural  \n  Prototype-based  \n  Reflective  \n  Rule-based  \n  Scripting  \n  Synchronous  \n  Templating  \n \n \n \n \n \n  \n \n \n \n \n \n  Assembly  \n  Compiled  \n  Interpreted  \n  Machine  \n \n \n \n \n \n  \n \n \n \n \n \n  Low-level  \n  High-level  \n  Very high-level  \n \n \n \n \n \n  \n \n \n \n \n \n  Non-English-based  \n  Off-side rule  \n  Visual  \n \n \n \n \n \n \n \n \n \n \n    "}, {"title": "Filename extension", "rank": -0.033490568692941425, "url": "http://en.wikipedia.org/wiki/Filename_extension", "links": ["http://en.wikipedia.org/wiki/Substring", "http://en.wikipedia.org/wiki/Filename", "http://en.wikipedia.org/wiki/Computer_file", "http://en.wikipedia.org/wiki/File_format", "http://en.wikipedia.org/wiki/File_system", "http://en.wikipedia.org/wiki/File_Allocation_Table", "http://en.wikipedia.org/wiki/File_system", "http://en.wikipedia.org/wiki/IBM_PC_DOS", "http://en.wikipedia.org/wiki/MS-DOS", "http://en.wikipedia.org/wiki/Long_filename"], "body": "  A  filename extension  is a  suffix  (separated from the base filename by a dot or space) to the  name  of a  computer file  applied to indicate the encoding ( file format ) of its contents or usage. Examples of filename extensions are  .png ,  .jpeg ,  .exe ,  .dmg  and  .txt . \n Some  file systems  limit the length of the extension (such as the  FAT   file system  from  PC\u00a0DOS / MS-DOS  (without  Long filename  support) not allowing more than three characters and IBM's  VM/CMS  not allowing more than 8) while others (such as  NTFS ) do not. Unix filesystems accept the separator dot as a legal character. \n  \n \n \n Contents \n \n \n   1   Usage   \n   2   Improvements   \n   3   Command name issues   \n   4   Security issues   \n   5   Alternatives   \n   6   See also   \n   7   References   \n   8   External links   \n \n \n  \n  Usage   [  edit  ]   \n Filename extensions can be considered a type of  metadata . They are commonly used to imply information about the way data might be stored in the file. The exact definition, giving the criteria for deciding what part of the file name is its extension, belongs to the rules of the specific  filesystem  used; usually the extension is the substring which follows the last occurrence, if any, of the  dot character  ( example:   txt  is the extension of the filename  readme.txt , and  html  the extension of  mysite.index.html ). On file systems of mainframe systems such as  MVS ,  VMS , and PC systems such as  CP/M  and derivative systems such as  MS-DOS , the extension is a separate  namespace  from the filename. Under Microsoft's  DOS  and  Windows , extensions such as  EXE ,  COM  or  BAT  indicate that a file is a program  executable . \n The  UNIX-like  filesystems use a different model without the segregated extension metadata. The  dot character  is just another character in the main filename, and filenames can have multiple extensions, usually representing nested transformations, such as  files.tar.gz . This model generally requires the full filename to be provided in commands, where the metadata approach often allows the extension to be omitted. \n With the advent of  graphical user interfaces , the issue of file management and interface behavior arose. Microsoft Windows allowed multiple applications to be associated with a given extension, and different actions were available for selecting the required application, such as a  context menu  offering a choice between viewing, editing or printing the file. \n Pre-OS X versions of the  Mac OS  disposed of filename-based extension metadata entirely, instead using a distinct file  type code  to identify the file format. Additionally, a  creator code  was specified to determine which application would be launched when the file's  icon  was  double-clicked .  Mac OS X , however, uses filename suffixes, as well as type and creator codes, as a consequence of being derived from the UNIX-like  NeXTSTEP  operating system. \n  Improvements   [  edit  ]   \n The filename extension was originally used to easily determine the file's generic type. The need to condense a file's type into three characters frequently led to inscrutable extensions. Examples include using  .GFX  for  graphics  files,  .TXT  for  plain text , and  .MUS  for  music . However, because many different software programs have been made that all handle these data types (and others) in a variety of ways, filename extensions started to become closely associated with certain products\u2014even specific product versions. For example, early  WordStar  files used  .WS  or  .WS n  , where  n  was the program's version number. Also, filename extensions began to conflict between separate files. One example is  .rpm , used for both  RPM Package Manager  packages and  RealPlayer  Media files;   [ 1 ]    others being  .qif , shared by  DESQview  fonts,  Quicken  financial  ledgers , and  QuickTime  pictures,   [ 2 ]    and  .gba , shared between  GrabIt  scripts and  Game Boy Advance  ROM images.   [ 3 ]    \n Some other operating systems such as  Multics  that used filename extensions generally had much more liberal sizes for filenames. Many allowed full filename lengths of 14 or more characters, and maximum name lengths up to 255 were not uncommon. The file systems in operating systems such as  UNIX  stored the file name as a single string, not split into base name and extension components, with the \".\" being just another character allowed in file names. Such systems generally allow for variable-length filenames, permitting more than one dot, and hence multiple suffixes. Some components of Multics and UNIX, and applications running on them, used suffixes, in some cases, to indicate file types, but they did not use them as much\u2014for example, executables and ordinary text files had no suffixes in their names. \n The  High Performance File System  (HPFS), used in Microsoft and  IBM 's  OS/2  also supported long file names, and did not divide the file name into a name and an extension. The convention of using suffixes continued, even though HPFS supported extended attributes for files, allowing a file's type to be stored with the file as an extended attribute. \n Microsoft's  Windows NT 's native file system,  NTFS , supported long file names and did not divide the file name into a name and an extension, but again, the convention of using suffixes to simulate extensions continued, for compatibility with existing versions of Windows. \n When the  Internet  age first arrived, those using Windows systems that were still restricted to 8.3 filename formats had to create web pages with names ending in  .HTM , while those using  Macintosh  or UNIX computers could use the recommended  .html  filename extension. This also became a problem for programmers experimenting with the  Java programming language , since it  requires   source code  files to have the four-letter suffix  .java  and  compiles   object code  output files with the five-letter  .class  suffix.   [ 4 ]    \n Eventually,  Windows  introduced support for long file names, and removed the 8.3 name/extension split in file names, in an extended version of the commonly used  FAT   file system  called  VFAT . VFAT first appeared in  Windows NT 3.5  and  Windows 95 . The internal implementation of long file names in VFAT is largely considered to be a  kludge , but it removed the important length restriction, and allowed files to have a mix of  upper case  and  lower case  letters, on machines that would not run  Windows NT  well. However, the use of three-character extensions under Microsoft Windows has continued, originally for backward compatibility with older versions of Windows and now by habit, along with the problems it creates. \n  Command name issues   [  edit  ]   \n The use of a filename extension in a command name appears occasionally, usually as a side effect of the command having been implemented as a script (in  Bourne shell ,  Python , etc.) and the interpreter name being suffixed to the command name, a practice common on systems like  Windows  and  Mac OS X , which rely on globally set associations between filename extension and interpreter, but sharply deprecated   [ 5 ]    in  UNIX -derived systems like  Linux  and Apple's  Mac OS X , where the interpreter is normally specified as a header in the script ( Shebang (Unix) ). \n On association-based systems, the filename extension is generally mapped to a single, system-wide selection of interpreter for that extension (such as \".py\" meaning to use Python), and the command itself is runnable from the command line even if the extension is omitted (assuming appropriate setup is done). If the implementation language is changed, the command name extension is changed as well, and the OS provides a consistent  API  by allowing the same extension-less version of the command to be used in both cases. This method suffers somewhat from the essentially global nature of the association mapping, as well as from developers' incomplete avoidance of extensions when calling programs, and that developers can't force that avoidance. Windows is the only remaining widespread employer of this mechanism. \n On systems with  interpreter directives , command name extensions have no special significance, and are by standard practice not used, since the primary method to set interpreters for scripts is to start them with a single line specifying the interpreter to use (which could be viewed as a degenerate  resource fork ). \n  Security issues   [  edit  ]   \n The default behavior of  Windows Explorer , the file browser provided with  Microsoft Windows , is for filename extensions to not be displayed. Malicious users have tried to spread  computer viruses  and  computer worms  by using file names formed like   LOVE-LETTER-FOR-YOU.TXT.vbs  . The hope is that this will appear as  LOVE-LETTER-FOR-YOU.TXT , a harmless text file, without alerting the user to the fact that it is a harmful computer program, in this case written in  VBScript . \n Later Windows versions (starting with  Windows XP   Service Pack 2  and  Windows Server 2003 ) included customizable lists of filename extensions that should be considered \"dangerous\" in certain \"zones\" of operation, such as when  downloaded  from the  web  or received as an e-mail attachment. Modern  antivirus software  systems also help to defend users against such attempted attacks where possible. \n Some viruses take advantage of the similarity between the \" .com \"  top-level domain  and the  \".COM\" file extension  by emailing malicious, executable command-file attachments under names superficially similar to URLs ( e.g. , \"myparty.yahoo.com\"), with the effect that some naive users click on email-embedded links that they think lead to websites but actually download and execute the malicious attachments. \n There have been instances of  malware  crafted to exploit vulnerabilities in some Windows applications which could cause a stack-based  buffer overflow  when opening a file with an overly long, unhandled filename extension. \n  Alternatives   [  edit  ]   \n In  network  contexts, files are regarded as  streams of bits  and do not have filenames or extensions. \n In many  internet  protocols such as  HTTP  and  MIME email , the  type  of a bitstream is stated as the  internet media type  of the stream (also called the MIME type or content type). This is given in a line of text preceding the stream, such as: \n  Content-type: text/plain  \n Because there is no standard mapping between filename extensions and internet media types, mismatches in file type interpretation between authors, web servers, and client software can be a source of errors when transferring files over the internet. For instance, a content author may specify a  .svgz  extension on a compressed  Scalable Vector Graphics  file, but a web server which does not recognize this extension may not send the proper content type of  application/svg+xml  and its required compression header, leaving web browsers unable to correctly interpret and display the image. \n  BeOS , whose  BFS  file system supports extended attributes, would tag a file with its internet media type as an extended attribute. The  KDE  and  GNOME   desktop environments  associate an internet media type with a file by examining both the filename suffix and the contents of the file, in the fashion of the  file  command, as a  heuristic . They choose the application to launch when a file is opened based on that internet media type, reducing the dependency on filename extensions.  Mac OS X  uses both filename extensions and media types, as well as  file type codes , to select a  Uniform Type Identifier  by which to identify the file type internally. \n  See also   [  edit  ]   \n \n  file (command)  \n  List of file formats  \n  List of file formats (alphabetical)  \n  Metadata  \n  .properties  \n  Windows file types  \n \n  References   [  edit  ]   \n \n \n    ^      File Extension .RPM Details  from filext.com  \n    ^      File Extension .QIF Details  from filext.com  \n    ^      File Extension .GBA Details   \n    ^       \"javac \u2013 Java programming language compiler\" . Sun Microsystems, Inc. 2004 . Retrieved 2009-05-31 . \"Source code file names must have .java suffixes, class file names must have .class suffixes, and both source and class files must have root names that identify the class.\"   \u00a0    \n    ^      Commandname Extensions Considered Harmful   \n \n \n  External links   [  edit  ]   \n \n  Data Formats/ Filename extension  on the  Open Directory Project  \n  DotWhat  \n  File Extension Library  \n  FILExt  \n  Fileinfo  \n  FileDesc  \n \n \n \n    "}]}